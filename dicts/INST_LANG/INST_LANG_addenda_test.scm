(defvar verbose_addendas)
(if verbose_addendas (format t "addenda_test.scm loaded"))

(lex.add.entry '("_cent" nil (((s eh n s)0))))
(lex.add.entry '("20" nil ((("v" "ehn") 0))))



; à trier
(lex.add.entry '("pénitent" nil ((("p" "e") 0) (("n" "i")0) (("t" "ahn") 0))))

(lex.add.entry '("papyrus_NOM" NOM ((("p" "a") 0) (("p" "i") 0) (("rh" "y" "s") 0))))

(lex.add.entry '("accessible" nil ((("a" "k") 0) (("s" "e") 0) (("s" "i" "b" "l") 0))))
(lex.add.entry '("actionné" nil ((("a" "k") 0) (("s" "j" "oh") 0) (("n" "e") 0))))
(lex.add.entry '("activé" nil ((("a" "k") 0) (("t" "i") 0) (("v" "e") 0))))
(lex.add.entry '("adhérent" nil ((("a") 0) (("d" "e" "rh") 0))))
(lex.add.entry '("adhérent_NOM" NOM ((("a") 0) (("d" "e") 0) (("rh" "ahn") 0))))
(lex.add.entry '("adhérent_ADJ" ADJ ((("a") 0) (("d" "e") 0) (("rh" "ahn") 0))))
(lex.add.entry '("conscience" nil ((("k" "ohn") 0) (("s" "j" "ahn" "s") 0))))
(lex.add.entry '("culpabilité" nil ((("k" "y" "l") 0) (("p" "a") 0) (("b" "i") 0) (("l" "i") 0) (("t" "e") 0))))
(lex.add.entry '("d_interrogation" nil ((("d" "ehn") 0) (("t" "eh") 0) (("rh" "oh") 0) (("g" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("dernier" nil ((("d" "eh" "rh") 0) (("n" "j" "e") 0))))
(lex.add.entry '("difficulté" nil ((("d" "i") 0) (("f" "i") 0) (("k" "y" "l") 0) (("t" "e") 0))))
(lex.add.entry '("délégué" nil ((("d" "e") 0) (("l" "e") 0) (("g" "e") 0))))
(lex.add.entry '("développement" nil ((("d" "e") 0) (("v" "l" "oh" "p") 0) (("m" "ahn") 0))))
(lex.add.entry '("e_NOM" NOM ((("ae") 0))))
(lex.add.entry '("empêche" nil ((("ahn") 0) (("p" "eh" "sh") 0))))
(lex.add.entry '("existe" nil ((("eh" "g") 0) (("z" "i" "s" "t") 0))))
(lex.add.entry '("frein" nil ((("f" "rh" "ehn") 0))))
(lex.add.entry '("internet" nil ((("ehn") 0) (("t" "eh" "rh") 0) (("n" "eh" "t") 0))))
(lex.add.entry '("inviton" nil ((("ehn") 0) (("v" "i") 0) (("t" "ohn") 0))))
(lex.add.entry '("jusque" nil ((("zh" "y" "s" "k") 0))))
(lex.add.entry '("l_aide" nil ((("l" "eh" "d") 0))))
(lex.add.entry '("laissé" nil ((("l" "e") 0) (("s" "e") 0))))
(lex.add.entry '("nombreu" nil ((("n" "ohn") 0) (("b" "rh" "eu") 0))))
(lex.add.entry '("proche" nil ((("p" "rh" "oh" "sh") 0))))
(lex.add.entry '("rappelle" nil ((("rh" "a") 0) (("p" "eh" "l") 0))))
(lex.add.entry '("rubrique" nil ((("rh" "y") 0) (("b" "rh" "i" "k") 0))))
(lex.add.entry '("répit" nil ((("rh" "e") 0) (("p" "i") 0))))
(lex.add.entry '("site" nil ((("s" "i" "t") 0))))
(lex.add.entry '("structurel" nil ((("s" "t" "rh" "y" "k") 0) (("t" "y") 0) (("rh" "eh" "l") 0))))
(lex.add.entry '("u" nil ((("y") 0))))
(lex.add.entry '("via" nil ((("v" "j" "a") 0))))
(lex.add.entry '("èfe" nil ((("eh" "f") 0))))
(lex.add.entry '("également" nil ((("e") 0) (("g" "a" "l") 0) (("m" "ahn") 0))))
(lex.add.entry '("jersey" nil ((("zh" "eh" "rh") 0) (("z" "eh") 0))))
; NON (lex.add.entry '("l_UMR" ART:ind ((("l" "y" "m" "rh") 0)))) 
(lex.add.entry '("beaucoup" nil ((("b" "o") 0) (( k u )0))))
(lex.add.entry '("metz" nil ((( m eh s)0))))
(lex.add.entry  '("aucun" nil ((("o") 0) (("k" "oen") 0))))
(lex.add.entry  '("ce" ADJ:dem ((("s" "ae") 0))))
(lex.add.entry  '("ces_ADJ:dem" ADJ:dem ((("s" "e") 0))))
(lex.add.entry  '("Cet" ADJ:dem ((("s" "eh" "t") 0))))
(lex.add.entry  '("IIIe" NOM ((("t" "rh" w a ) 0) ((z "i" eh m) 0))))
(lex.add.entry  '("Identification" nil ((("i") 0) (("d" "ahn") 0) (("t" "i") 0) (("f" "i") 0) (("k" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry  '("Peletié" nil ((("p" "ae" "l") 0) (("t" "j" "e") 0))))
(lex.add.entry  '("Reich" nil ((("rh" "a" "j" "sh") 0))))
(lex.add.entry  '("Santé" nil ((("s" "ahn") 0) (("t" "e") 0))))
(lex.add.entry  '("Veuillé" nil ((("v" "oe") 0) (("j" "e") 0))))
(lex.add.entry  '("XXIe" nil (((v ehn) 0) ((t e)0) ((y)0) ((n j eh m)0))))
(lex.add.entry  '("XXe" nil (((v ehn) 0) ((t j eh m)0))))
(lex.add.entry  '("a" AUX ((("a") 0))))
(lex.add.entry  '("ad_patres" nil ((("a" "d") 0) (("p" "a") 0) (("t" "rh" "eh" "s") 0))))
(lex.add.entry  '("adaptée" VER ((("a") 0) (("d" "a") 0) (("p" "t" "e") 0))))
(lex.add.entry  '("argent_NOM" NOM ((("a" "rh")0) (("zh" ahn) 0))))
(lex.add.entry  '("autobus_NOM" NOM ((("o") 0) (("t" "oh") 0) (("b" "y" s) 0))))
(lex.add.entry  '("boire" nil ((("b" "w" "a" "rh") 0))))
(lex.add.entry  '("boomers" nil ((("b" "u") 0) (("m" "eh" "rh") 0))))
(lex.add.entry  '("boulanger" nil ((("b" "u") 0) (("l" "ahn") 0) (("zh" "e") 0))))

(lex.add.entry  '("claque" NOM ((("k" "l" "a" "k") 0))))
(lex.add.entry  '("coincide" VER ((("k" "o")0) (("ehn") 0) (("s" "i" "d") 0))))


(lex.add.entry  '("communautaire" ADJ ((("k" "oh") 0) (("m" "y") 0) (("n" "o") 0) (("t" "eh" "rh") 0))))
(lex.add.entry  '("consulté" VER ((("k" "ohn") 0) (("s" "y" "l") 0) (("t" "e") 0))))
(lex.add.entry  '("d_inconséquence" NOM ((("d" "ehn") 0) (("k" "ohn") 0) (("s" "e") 0) (("k" "ahn" "s") 0))))
(lex.add.entry  '("d_ores_et_déjà" ADV ((("d" "oh") 0) (("rh" "eh" "s" "t") 0) (("d" "e") 0) (("zh" "a") 0))))
(lex.add.entry  '("d_éloquence" NOM ((("d" "e") 0) (("l" "oh") 0) (("k" "ahn" "s") 0))))
(lex.add.entry  '("dent" NOM ((("d" "ahn") 0))))
(lex.add.entry  '("di_VER" VER ((("d" "i") 0))))
(lex.add.entry  '("dix_ADJ:num" ADJ:num ((("d" "i") 0))))
(lex.add.entry  '("donne" nil ((("d" "oh" "n") 0))))
(lex.add.entry  '("e" NOM ((("ae") 0))))

(lex.add.entry  '("précédent" ADJ ((("p" "rh" "e") 0) (("s" "e") 0) (("d" "ahn") 0))))
(lex.add.entry  '("qu_eux_PRO:per" PRO:per ((("k" "eu") 0))))
(lex.add.entry  '("qu_obtient_VER" VER ((("k" "oh") 0) (("p" "t" "j" "ehn") 0))))
(lex.add.entry  '("ration_VER" VER ((("rh" "a") 0) (("t" "j" "ohn") 0))))
(lex.add.entry  '("ration_NOM" NOM ((("rh" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry  '("recette" nil ((("rh" "ae") 0) (("s" "eh" "t") 0))))
(lex.add.entry  '("redoutés" nil ((("rh" "ae") 0) (("d" "u") 0) (("t" "e") 0))))

(lex.add.entry  '("remerciement" nil ((("rh" "ae") 0) (("m" "eh" "rh") 0) (("s" "i") 0) (("m" "ahn") 0))))
(lex.add.entry  '("reçu" nil ((("rh" "ae") 0) (("s" "y") 0))))
(lex.add.entry  '("save" nil ((("s" "a" "v") 0))))
(lex.add.entry  '("structure" nil ((("s" "t" "rh" "y" "k") 0) (("t" "y" "rh") 0))))
(lex.add.entry  '("surement" nil ((("s" "y" rh) 0) (("m" "ahn") 0))))
(lex.add.entry  '("sûrement" nil ((("s" "y" rh) 0) (("m" "ahn") 0))))
(lex.add.entry  '("tous_le" ART:def ((("t" "u"  "l") 0))))
(lex.add.entry  '("treize" nil ((("t" "rh" "eh" "z") 0))))
(lex.add.entry  '("violent_ADJ" ADJ ((("v" "j" "oh") 0) (("l" "ahn") 0))))
(lex.add.entry  '("viole_VER" VER ((("v" "j" "oh" "l") 0))))
(lex.add.entry  '("www" nil ((("d" "u" "b" "l")0) (("v" e) 0)(("d" "u" "b" "l")0) (("v" e) 0)(("d" "u" "b" "l")0) (("v" e) 0))))
(lex.add.entry  '("zèd" nil ((("z" "eh" d) 0))))
(lex.add.entry  '("zéroième" PRE ((("z" "e") 0) (("rh" "o") 0) ((j "eh" "m") 0))))
(lex.add.entry  '("Émile" nil ((("e") 0) (("m" "i" "l") 0))))
(lex.add.entry  '("échangé" nil ((("e") 0) (("sh" "ahn") 0) (("zh" "e") 0))))
;;; no (provide 'INST_LANG_addenda_test) to allow reload ? TODO
 ; (provide 'INST_LANG_addenda_test)
