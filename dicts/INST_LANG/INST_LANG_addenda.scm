; on pourra intégrer dans le dico les mots qui sont fréquents
; même si ils ne sont pas réfractaires à une lts simple
; ex sera 
; d'autre part mettre des prononciations préférées
; ex rôle oh ou o
; Rq on peut occulter un mot en omettant le pos dans son entrée d'addenda
(defvar verbose_addendas)
(if verbose_addendas (format t "addenda.scm loaded"))
; on a prehook hache NOM
; /!\ fre_symbols_tab
; issus de stats de tests (partiel !)
;; TODO
; n'aurait pas du être là mais dans addenda_test en attendant tri
; déjà à cause d'erreurs de syntaxe potentielles
(lex.add.entry '("beaucoup" nil (((b o)0)((k u)0))))
(lex.add.entry '("acte" nil ((("a" "k" "t") 0))))
(lex.add.entry '("administrative" nil ((("a" "d") 0) (("m" "i") 0) (("n" "i" "s") 0) (("t" "rh" "a") 0) (("t" "i" "v") 0))))
(lex.add.entry '("aidant" nil ((("eh") 0) (("d" "ahn") 0))))
(lex.add.entry '("appui" nil ((("a")0) (("p" "hw" "i") 0))))
(lex.add.entry '("bien_être" nil ((("b" "j" "ehn") 0) (("n" "eh" "t" "rh") 0))))
(lex.add.entry '("cest" nil ((("s" "eh" "s" "t") 0))))
(lex.add.entry '("conduire" nil ((("k" "ohn")0) (("d" "hw" "i" "rh") 0))))
(lex.add.entry '("d_aidant" nil ((("d" "eh") 0) (("d" "ahn") 0))))
(lex.add.entry '("d_autonomie" nil ((("d" "o") 0) (("t" "oh") 0) (("n" "oh") 0) (("m" "i") 0))))
(lex.add.entry '("demandant" nil ((("d" "ae") 0) (("m" "ahn") 0) (("d" "ahn") 0))))
(lex.add.entry '("démarche" nil ((("d" "e") 0) (("m" "a" "rh" "sh") 0))))
(lex.add.entry '("exigeant" nil ((("eh" "g") 0) (("z" "i") 0) (("zh" "ahn") 0))))
(lex.add.entry '("geste" nil ((("zh" "eh" "s" "t") 0))))
(lex.add.entry '("handicap" nil ((("hs" "ahn") 0) (("d" "i") 0) (("k" "a" p) 0))))
(lex.add.entry '("investissement" nil ((("ehn") 0) (("v" "eh" "s") 0) (("t" "i" "s") 0) (("m" "ahn") 0))))
(lex.add.entry '("l_isolement" nil ((("l" "i") 0) (("z" "oh" "l") 0) (("m" "ahn") 0))))
(lex.add.entry '("l_épuisement" nil ((("l" "e") 0) (("p" "hw" "i" "z")0) (( "m" "ahn") 0))))
(lex.add.entry '("la" nil ((("l" "a") 0))))
(lex.add.entry '("moral" nil ((("m" "oh") 0) (("rh" "a" "l") 0))))
(lex.add.entry '("pallié" nil ((("p" "a") 0) (("l" "j" "e") 0))))
(lex.add.entry '("perte" nil ((("p" "eh" "rh" "t") 0))))
(lex.add.entry '("physique" nil ((("f" "i") 0) (("z" "i" "k") 0))))
(lex.add.entry '("qu_apporte" nil ((("k" "a") 0) (("p" "oh" "rh" "t") 0))))
(lex.add.entry '("qualité" nil ((("k" "a") 0) (("l" "i") 0) (("t" "e") 0))))
(lex.add.entry '("quotidien" nil ((("k" "oh") 0) (("t" "i") 0) (("d" "j" "ehn") 0))))
(lex.add.entry '("recherche" nil ((("rh" "ae") 0) (("sh" "eh" "rh" "sh") 0))))
(lex.add.entry '("relai" nil ((("rh" "ae") 0) (("l" "eh") 0))))
(lex.add.entry '("repose" nil ((("rh" "ae") 0) (("p" "o" "z") 0))))
(lex.add.entry '("réalisation" nil ((("rh" "e") 0) (("a") 0) (("l" "i") 0) (("z" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("récurrent" nil ((("rh" "e") 0) (("k" "y") 0) (("rh" "ahn") 0))))
(lex.add.entry '("rôle" nil ((("rh" "o" "l") 0))))
(lex.add.entry '("solution" nil ((("s" "oh") 0) (("l" "y") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("soutien" nil ((("s" "u") 0) (("t" "j" "ehn") 0))))
(lex.add.entry '("âgée" nil ((("a") 0) (("zh" "e") 0))))

;;;;
(lex.add.entry '("dix_huit" ADJ:num ((("d" "i" )0) (("z" "hw" "i") 0))))
(lex.add.entry '("" nil nil))
(lex.add.entry '("ah" nil ((("a") 0))))
(lex.add.entry '("ainsi" nil ((("ehn") 0) (("s" "i") 0))))
(lex.add.entry '("aix_en_othe" nil ((("eh" "k") 0) (("s" "ahn") 0) (("n" "oh" "t") 0))))
(lex.add.entry '("aix_en_provence" nil ((("eh" "k") 0) (("s" "ahn" "n") 0) (("p" "rh" "oh") 0) (("v" "ahn" "s") 0))))
(lex.add.entry '("allon" nil ((("a") 0) (("l" "ohn") 0))))
(lex.add.entry '("altéré" nil ((("a" "l") 0) (("t" "e") 0) (("rh" "e") 0))))
(lex.add.entry '("anatole" nil ((("a") 0) (("n" "a") 0) (("t" "oh" "l") 0))))
(lex.add.entry '("andromède" nil ((("ahn") 0) (("d" "rh" "oh") 0) (("m" "eh" "d") 0))))
(lex.add.entry '("apporté" nil ((("a") 0) (("p" "oh" "rh") 0) (("t" "e") 0))))
(lex.add.entry '("association" nil ((("a") 0) (("s" "oh") 0) (("s" "j" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("autant" nil ((("o") 0) (("t" "ahn") 0))))
(lex.add.entry '("avide" nil ((("a") 0) (("v" "i" "d") 0))))
(lex.add.entry '("bien" nil ((("b" "j" "ehn") 0))))
(lex.add.entry '("boulle" nil ((("b" "u" "l") 0))))
(lex.add.entry '("bourdal" nil ((("b" "u" "rh") 0) (("d" "a" "l") 0))))
(lex.add.entry '("bourg_en_bresse" nil ((("b" "u" "rh") 0) (("g" "ahn" "n") 0) (("b" "rh" "eh" "s") 0))))
(lex.add.entry '("bruneau" nil ((("b" "rh" "y") 0) (("n" "o") 0))))
(lex.add.entry '("bruyère" nil ((("b" "rh" "hw" "i") 0) ((j "eh" "rh") 0))))
(lex.add.entry '("burkina" nil ((("b" "y" "rh") 0) (("k" "i") 0) (("n" "a") 0))))
(lex.add.entry '("californie" nil ((("k" "a") 0) (("l" "i") 0) (("f" "oh" "rh") 0) (("n" "i") 0))))
(lex.add.entry '("cela" nil ((("s" "ae") 0) (("l" "a") 0))))
(lex.add.entry '("celui" nil ((("s" "ae") 0) (("l" "hw" i) 0))))
;(lex.add.entry '("cet_ADJ_dem" "ADJ_dem" ((("s" "ahn" "t") 0))))
(lex.add.entry '("chacun" nil ((("sh" "a") 0) (("k" "oen") 0))))
(lex.add.entry '("chaque" nil ((("sh" "a" "k") 0))))
(lex.add.entry '("chartreuse" nil ((("sh" "a" "rh") 0) (("t" "rh" "eu" "z") 0))))
(lex.add.entry '("cheval" nil ((("sh" "ae") 0) (("v" "a" "l") 0))))
(lex.add.entry '("chez" nil ((("sh" "e") 0))))
(lex.add.entry '("choisissé" nil ((("sh" "w" "a") 0) (("z" "i") 0) (("s" "e") 0))))
(lex.add.entry '("cinna" nil ((("s" "i") 0) (("n" "a") 0))))
(lex.add.entry '("clément" nil ((("k" "l" "e") 0) (("m" "ahn") 0))))
(lex.add.entry '("coca" nil ((("k" "oh") 0) (("k" "a") 0))))
(lex.add.entry '("comme" nil ((("k" "oh" "m") 0))))
(lex.add.entry '("comment_nil" nil ((("k" "oh") 0) (("m" "ahn") 0))))
(lex.add.entry '("corneille" nil ((("k" "oh" "rh") 0) (("n" "eh" "j") 0))))
(lex.add.entry '("d_aucun" nil ((("d" "o") 0) (("k" "oen") 0))))
(lex.add.entry '("dequel" nil ((("d" "e") 0) (("k" "eh" "l") 0))))
(lex.add.entry '("différé" nil ((("d" "i") 0) (("f" "e") 0) (("rh" "e") 0))))
(lex.add.entry '("digne" nil ((("d" "i" "jg") 0))))
(lex.add.entry '("distingué" nil ((("d" "i" "s") 0) (("t" "ehn") 0) (("g" "e") 0))))
(lex.add.entry '("dollar" nil ((("d" "oh") 0) (("l" "a" "rh") 0))))
(lex.add.entry '("désir" nil ((("d" "e") 0) (("z" "i" "rh") 0))))
(lex.add.entry '("effet" nil ((("e") 0) (("f" "eh") 0))))
(lex.add.entry '("elle" nil ((("eh" "l") 0))))
(lex.add.entry '("en_outre" nil ((("ahn") 0) (("n" "u""t" "rh") 0))))
(lex.add.entry '("en_quoi" nil ((("ahn") 0) (("k" "w" "a") 0))))
(lex.add.entry '("faible" nil ((("f" "eh" "b" "l") 0))))
(lex.add.entry '("flori" nil ((("f" "l" "oh") 0) (("rh" "i") 0))))
(lex.add.entry '("flot" nil ((("f" "l" "o") 0))))
(lex.add.entry '("franc" nil ((("f" "rh" "ahn") 0))))
(lex.add.entry '("gide" nil ((("zh" "i" "d") 0))))
(lex.add.entry '("hugo" nil ((("y") 0) (("g" "o") 0))))
(lex.add.entry '("il" nil ((("i" "l") 0))))
(lex.add.entry '("insensé" nil ((("ehn") 0) (("s" "ahn") 0) (("s" "e") 0))))
(lex.add.entry '("iphigénie" nil ((("i") 0) (("f" "i") 0) (("zh" "e") 0) (("n" "i") 0))))
(lex.add.entry '("issu" nil ((("i") 0) (("s" "y") 0))))
(lex.add.entry '("j_aime" nil ((("zh" "eh" "m") 0))))
(lex.add.entry '("j_avè" nil ((("zh" "a") 0) (("v" "eh") 0))))
(lex.add.entry '("j_irai" nil ((("zh" "i") 0) (("rh" "eh") 0))))
(lex.add.entry '("j_é" nil ((("zh" "e") 0))))
(lex.add.entry '("jean_brillant" nil ((("zh" "ahn") 0) (("b" "rh" "i") 0) (("j" "ahn") 0))))
(lex.add.entry '("juda" nil ((("zh" "y") 0) (("d" "a") 0))))
(lex.add.entry '("klammer" nil ((("k" "l" "a") 0) (("m" "e") 0))))
(lex.add.entry '("l_alambra" nil ((("l" "a") 0) (("l" "ahn") 0) (("b" "rh" "a") 0))))
(lex.add.entry '("l_argot" nil ((("l" "a" "rh") 0) (("g" "o") 0))))
(lex.add.entry '("l_essentiel" nil ((("l" "eh") 0) (("s" "ahn") 0) (("s" "j" "eh" "l") 0))))
(lex.add.entry '("l_histoire" nil ((("l" "i" "s") 0) (("t" "w" "a" "rh") 0))))
(lex.add.entry '("l_éducation" nil ((("l" "e") 0) (("d" "y") 0) (("k" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("lequel" nil ((("l" "e") 0) (("k" "eh" "l") 0))))
(lex.add.entry '("levant" nil ((("l" "ae") 0) (("v" "ahn") 0))))
(lex.add.entry '("livre" nil ((("l" "i" "v" "rh") 0))))
(lex.add.entry '("lorsqu_il" nil ((("l" "oh" "rh" "s") 0) (("k" "i" "l") 0))))
(lex.add.entry '("maguerite" nil ((("m" "a") 0) (("g" "ae") 0) (("rh" "i" "t") 0))))
(lex.add.entry '("mai" nil ((("m" "eh") 0))))
(lex.add.entry '("majesté" nil ((("m" "a") 0) (("zh" "eh" "s") 0) (("t" "e") 0))))
(lex.add.entry '("malherbe" nil ((("m" "a") 0) (("l" "eh" "rh" "b") 0))))
(lex.add.entry '("mark" nil ((("m" "a" "rh" "k") 0))))
(lex.add.entry '("maxime" nil ((("m" "a" "k") 0) (("s" "i" "m") 0))))
(lex.add.entry '("misérable" nil ((("m" "i") 0) (("z" "e") 0) (("rh" "a" "b" "l") 0))))
(lex.add.entry '("molière" nil ((("m" "oh") 0) (("l" "j" "eh" "rh") 0))))
(lex.add.entry '("mon" nil ((("m" "ohn") 0))))
(lex.add.entry '("monde" nil ((("m" "ohn" "d") 0))))
(lex.add.entry '("on" nil ((("ohn") 0))))
(lex.add.entry '("or" nil ((("o" "rh") 0))))
(lex.add.entry '("orléan" nil ((("oh" "rh") 0) (("l" "e") 0) (("ahn") 0))))
(lex.add.entry '("pa" nil ((("p" "a") 0))))
(lex.add.entry '("pari" nil ((("p" "a") 0) (("rh" "i") 0))))
(lex.add.entry '("parme" nil ((("p" "a" "rh" "m") 0))))
(lex.add.entry '("peste" nil ((("p" "eh" "s" "t") 0))))
(lex.add.entry '("pierre" nil ((("p" "j" "eh" "rh") 0))))
(lex.add.entry '("plu" nil ((("p" "l" "y") 0))))
(lex.add.entry '("quand" nil ((("k" "ahn") 0))))
(lex.add.entry '("racine" nil ((("rh" "a") 0) (("s" "i" "n") 0))))
(lex.add.entry '("reconnue" nil ((("rh" "ae") 0) (("k" "oh") 0) (("n" "y") 0))))
(lex.add.entry '("renaud" nil ((("rh" "ae") 0) (("n" "o") 0))))
(lex.add.entry '("rousseau" nil ((("rh" "u") 0) (("s" "o") 0))))
(lex.add.entry '("réduit" nil ((("rh" "e")0) (("d" "hw" i) 0))))
(lex.add.entry '("réponds" nil ((("rh" "e") 0) (("p" "ohn" "d") 0))))
(lex.add.entry '("sa" nil ((("s" "a") 0))))
(lex.add.entry '("sache" nil ((("s" "a" "sh") 0))))
(lex.add.entry '("sainte_catherine" nil ((("s" "ehn" "t") 0) (("k" "a") 0) (("t" "rh" "i" "n") 0))))
(lex.add.entry '("son" nil ((("s" "ohn") 0))))
(lex.add.entry '("sur" nil ((("s" "y" "rh") 0))))
(lex.add.entry '("tartempion" nil ((("t" "a" "rh") 0) (("t" "ahn") 0) (("p" "j" "ohn") 0))))
(lex.add.entry '("thérive" nil ((("t" "e") 0) (("rh" "i" "v") 0))))
(lex.add.entry '("tout" nil ((("t" "u") 0))))
(lex.add.entry '("tu" nil ((("t" "y") 0))))
(lex.add.entry '("valéry" nil ((("v" "a") 0) (("l" "e") 0) (("rh" "i") 0))))
(lex.add.entry '("vendôme" nil ((("v" "ahn") 0) (("d" "o" "m") 0))))
(lex.add.entry '("versaille" nil ((("v" "eh" "rh") 0) (("s" "a" "j") 0))))
(lex.add.entry '("vientiane" nil ((("v" "j" "ahn") 0) (("s" "j" "a" "n") 0))))
(lex.add.entry '("voilà" nil ((("v" "w" "a") 0) (("l" "a") 0))))
(lex.add.entry '("votre" nil ((("v" "oh" "t" "rh") 0))))
(lex.add.entry '("vou" nil ((("v" "u") 0))))
(lex.add.entry '("y" nil ((("i") 0))))
(lex.add.entry '("_" nil nil))
(lex.add.entry '("_euro" nil ((("eu") 0) (("rh" "o") 0))))
(lex.add.entry '("abandonné" nil ((("a") 0) (("b" "ahn") 0) (("d" "oh") 0) (("n" "e") 0))))
(lex.add.entry '("abandonnés" nil ((("a") 0) (("b" "ahn") 0) (("d" "oh") 0) (("n" "e") 0))))
(lex.add.entry '("abord" nil ((("a") 0) (("b" "oh" "rh") 0))))
(lex.add.entry '("aborde_t_il" nil ((("a") 0) (("b" "oh" "rh" "d") 0) (("t" "i" "l") 0))))
(lex.add.entry '("abricot" nil ((("a") 0) (("b" "rh" "i") 0) (("k" "o") 0))))
(lex.add.entry '("acabit" nil ((("a") 0) (("k" "a") 0) (("b" "i") 0))))
(lex.add.entry '("accompagnés" nil ((("a") 0) (("k" "ohn") 0) (("p" "a") 0) (("jg" "e") 0))))
(lex.add.entry '("activés" nil ((("a" "k") 0) (("t" "i") 0) (("v" "e") 0))))
(lex.add.entry '("actu" nil ((("a" "k") 0) (("t" "y") 0))))
(lex.add.entry '("actuel" nil ((("a" "k") 0) (("t" "hw" "eh" "l") 0))))
(lex.add.entry '("adjectif" nil ((("a") 0) (("d" "zh" "eh" "k") 0) (("t" "i" "f") 0))))
(lex.add.entry '("adjudicateur" nil ((("a") 0) (("d" "zh" "y") 0) (("d" "i") 0) (("k" "a") 0) (("t" "oe" "rh") 0))))
(lex.add.entry '("admettre" nil ((("a" "d") 0) (("m" "eh" "t" "rh") 0))))
(lex.add.entry '("admissible" nil ((("a" "d") 0) (("m" "i") 0) (("s" "i" "b" "l") 0))))
(lex.add.entry '("adresse" nil ((("a") 0) (("d" "rh" "eh" "s") 0))))
(lex.add.entry '("affaire" nil ((("a") 0) (("f" "eh" "rh") 0))))
(lex.add.entry '("affirmé" nil ((("a") 0) (("f" "i" "rh") 0) (("m" "e") 0))))
(lex.add.entry '("affolant" nil ((("a") 0) (("f" "oh") 0) (("l" "ahn") 0))))
(lex.add.entry '("afin" nil ((("a") 0) (("f" "ehn") 0))))
(lex.add.entry '("afro_américain" nil ((("a") 0) (("f" "rh" "oh") 0) (("a") 0) (("m" "e") 0) (("rh" "i") 0) (("k" "ehn") 0))))
(lex.add.entry '("agi" nil ((("a") 0) (("zh" "i") 0))))
(lex.add.entry '("agir" nil ((("a") 0) (("zh" "i" "rh") 0))))
(lex.add.entry '("agrément" nil ((("a") 0) (("g" "rh" "e") 0) (("m" "ahn") 0))))
(lex.add.entry '("aimable" nil ((("eh") 0) (("m" "a" "b" "l") 0))))
(lex.add.entry '("aimante" nil ((("eh") 0) (("m" "ahn" "t") 0))))
(lex.add.entry '("aime" nil ((("eh" "m") 0))))
(lex.add.entry '("aimé" nil ((("e") 0) (("m" "e") 0))))
(lex.add.entry '("aise" nil ((("eh" "z") 0))))
(lex.add.entry '("aisé" nil ((("eh") 0) (("z" "e") 0))))
(lex.add.entry '("ajout" nil ((("a") 0) (("zh" "u") 0))))
(lex.add.entry '("allure" nil ((("a") 0) (("l" "y" "rh") 0))))
(lex.add.entry '("allé" nil ((("a") 0) (("l" "e") 0))))
(lex.add.entry '("alor" nil ((("a") 0) (("l" "oh" "rh") 0))))
(lex.add.entry '("ambitieu" nil ((("ahn") 0) (("b" "i") 0) (("s" "j" "eu") 0))))
(lex.add.entry '("amené" nil ((("a")0) (("m" "ae") 0) (("n" "e") 0))))
(lex.add.entry '("ami" nil ((("a") 0) (("m" "i") 0))))
(lex.add.entry '("amitié" nil ((("a") 0) (("m" "i") 0) (("t" "j" "e") 0))))
(lex.add.entry '("amuse" nil ((("a") 0) (("m" "y" "z") 0))))
(lex.add.entry '("américain" nil ((("a") 0) (("m" "e") 0) (("rh" "i") 0) (("k" "ehn") 0))))
(lex.add.entry '("an" nil ((("ahn") 0))))
(lex.add.entry '("analogue" nil ((("a") 0) (("n" "a") 0) (("l" "oh" "g") 0))))
(lex.add.entry '("anneau" nil ((("a") 0) (("n" "o") 0))))
(lex.add.entry '("année" nil ((("a") 0) (("n" "e") 0))))
(lex.add.entry '("aprè" nil ((("a") 0) (("p" "rh" "eh") 0))))
(lex.add.entry '("arbitre" nil ((("a" "rh") 0) (("b" "i" "t" "rh") 0))))
(lex.add.entry '("arbre" nil ((("a" "rh" "b" "rh") 0))))
(lex.add.entry '("architecte" nil ((("a" "rh") 0) (("sh" "i") 0) (("t" "eh" "k" "t") 0))))
(lex.add.entry '("argument" nil ((("a" "rh") 0) (("g" "y") 0) (("m" "ahn") 0))))
(lex.add.entry '("arobase" nil ((("a") 0) (("rh" "oh") 0) (("b" "a" "z") 0))))
(lex.add.entry '("arraché" nil ((("a") 0) (("rh" "a") 0) (("sh" "e") 0))))
(lex.add.entry '("arrivera" nil ((("a") 0) (("rh" "i") 0) (("v" "rh" "a") 0))))
(lex.add.entry '("arrivé" nil ((("a") 0) (("rh" "i") 0) (("v" "e") 0))))
(lex.add.entry '("arrivée" nil ((("a") 0) (("rh" "i") 0) (("v" "e") 0))))
(lex.add.entry '("artiste" nil ((("a" "rh") 0) (("t" "i" "s" "t") 0))))
(lex.add.entry '("aspect" nil ((("a" "s") 0) (("p" "eh") 0))))
(lex.add.entry '("assise" nil ((("a") 0) (("s" "i" "z") 0))))
(lex.add.entry '("attendre" nil ((("a") 0) (("t" "ahn" "d" "rh") 0))))
(lex.add.entry '("attente" nil ((("a") 0) (("t" "ahn" "t") 0))))
(lex.add.entry '("attentif" nil ((("a") 0) (("t" "ahn") 0) (("t" "i" "f") 0))))
(lex.add.entry '("attention" nil ((("a") 0) (("t" "ahn") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("attitude" nil ((("a") 0) (("t" "i") 0) (("t" "y" "d") 0))))
(lex.add.entry '("au" nil ((("o") 0))))
(lex.add.entry '("au_delà" nil ((("o") 0) (("d" "l" "a") 0))))
(lex.add.entry '("au_dessu" nil ((("o") 0) (("d" "e") 0) (("s" "y") 0))))
(lex.add.entry '("aujourd_hui" nil ((("o") 0) (("zh" "u" "rh" )0) (("d" "hw" i) 0))))
(lex.add.entry '("auni" nil ((("o") 0) (("n" "i") 0))))
(lex.add.entry '("auparavant" nil ((("o") 0) (("p" "a") 0) (("rh" "a") 0) (("v" "ahn") 0))))
(lex.add.entry '("auprè" nil ((("o") 0) (("p" "rh" "eh") 0))))
(lex.add.entry '("auquel_ca" nil ((("o") 0) (("k" "eh" "l")0) (("k" "a") 0))))
(lex.add.entry '("aura" nil ((("o") 0) (("rh" "a") 0))))
(lex.add.entry '("aussi" nil ((("o") 0) (("s" "i") 0))))
(lex.add.entry '("autour" nil ((("o") 0) (("t" "u" "rh") 0))))
(lex.add.entry '("autre" nil ((("o" "t" "rh") 0))))
(lex.add.entry '("avant" nil ((("a") 0) (("v" "ahn") 0))))
(lex.add.entry '("avant_avant_hier" nil ((("a") 0) (("v" "ahn") 0) (("a") 0) (("v" "ahn") 0) (("t" "j" "eh" "rh") 0))))
(lex.add.entry '("avantageusement" nil ((("a") 0) (("v" "ahn") 0) (("t" "a") 0) (("zh" "eu" "z") 0) (("m" "ahn") 0))))
(lex.add.entry '("avec" nil ((("a") 0) (("v" "eh" "k") 0))))
(lex.add.entry '("aventure" nil ((("a") 0) (("v" "ahn") 0) (("t" "y" "rh") 0))))
(lex.add.entry '("averti" nil ((("a") 0) (("v" "eh" "rh") 0) (("t" "i") 0))))
(lex.add.entry '("avocat" nil ((("a") 0) (("v" "oh") 0) (("k" "a") 0))))
(lex.add.entry '("avoir" nil ((("a") 0) (("v" "w" "a" "rh") 0))))
(lex.add.entry '("avril" nil ((("a") 0) (("v" "rh" "i" "l") 0))))
(lex.add.entry '("avè" nil ((("a") 0) (("v" "eh") 0))))
(lex.add.entry '("ayants_droit" nil ((("eh") 0) (("j" "ahn") 0) (("d" "rh" "w" "a") 0))))
(lex.add.entry '("baigné" nil ((("b" "eh") 0) (("jg" "e") 0))))
(lex.add.entry '("baissère" nil ((("b" "eh") 0) (("s" "eh" "rh") 0))))
(lex.add.entry '("baron" nil ((("b" "a") 0) (("rh" "ohn") 0))))
(lex.add.entry '("baronne" nil ((("b" "a") 0) (("rh" "oh" "n") 0))))
(lex.add.entry '("barre" nil ((("b" "a" "rh") 0))))
(lex.add.entry '("basculé" nil ((("b" "a" "s") 0) (("k" "y") 0) (("l" "e") 0))))
(lex.add.entry '("bavard" nil ((("b" "a") 0) (("v" "a" "rh") 0))))
(lex.add.entry '("beau" nil ((("b" "o") 0))))
(lex.add.entry '("beaucoup" nil ((("b" "o") 0) (("k" "u" "p") 0))))
(lex.add.entry '("belge" nil ((("b" "eh" "l" "zh") 0))))
(lex.add.entry '("belle" nil ((("b" "eh" "l") 0))))
(lex.add.entry '("besoin" nil ((("b" "ae") 0) (("z" "w" "ehn") 0))))
(lex.add.entry '("biaisé" nil ((("b" "j" "eh") 0) (("z" "e") 0))))
(lex.add.entry '("billet" nil ((("b" "i") 0) (("j" "eh") 0))))
(lex.add.entry '("bla" nil ((("b" "l" "a") 0))))
(lex.add.entry '("bla_bla" nil ((("b" "l" "a") 0) (("b" "l" "a") 0))))
(lex.add.entry '("blasphème" nil ((("b" "l" "a" "s") 0) (("f" "eh" "m") 0))))
(lex.add.entry '("blessé" nil ((("b" "l" "e") 0) (("s" "e") 0))))
(lex.add.entry '("blême" nil ((("b" "l" "eh" "m") 0))))
(lex.add.entry '("boi" nil ((("b" "w" "a") 0))))
(lex.add.entry '("bon_au_porteur" nil ((("b" "ohn") 0) (("o") 0) (("p" "oh" "rh") 0) (("t" "oe" "rh") 0))))
(lex.add.entry '("bon_à_rien" nil ((("b" "ohn") 0) (("a") 0) (("rh" "j" "ehn") 0))))
(lex.add.entry '("boniment" nil ((("b" "oh") 0) (("n" "i") 0) (("m" "ahn") 0))))
(lex.add.entry '("bonjour" nil ((("b" "ohn") 0) (("zh" "u" "rh") 0))))
(lex.add.entry '("bonne" nil ((("b" "oh" "n") 0))))
(lex.add.entry '("bourg" nil ((("b" "u" "rh") 0))))
(lex.add.entry '("bourg_en_bresse" nil ((("b" "u" "rh") 0) (("g" "ahn") 0) (("b" "rh" "eh" "s") 0))))
(lex.add.entry '("bra" nil ((("b" "rh" "a") 0))))
(lex.add.entry '("brave" nil ((("b" "rh" "a" "v") 0))))
(lex.add.entry '("bric" nil ((("b" "rh" "i" "k") 0))))
(lex.add.entry '("bride" nil ((("b" "rh" "i" "d") 0))))
(lex.add.entry '("brutalement" nil ((("b" "rh" "y") 0) (("t" "a" "l") 0) (("m" "ahn") 0))))
(lex.add.entry '("bureau" nil ((("b" "y") 0) (("rh" "o") 0))))
(lex.add.entry '("bâti" nil ((("b" "a") 0) (("t" "i") 0))))
(lex.add.entry '("bénéfice" nil ((("b" "e") 0) (("n" "e") 0) (("f" "i" "s") 0))))
(lex.add.entry '("bête" nil ((("b" "eh" "t") 0))))
(lex.add.entry '("ca" nil ((("k" "a") 0))))
(lex.add.entry '("cabu" nil ((("k" "a") 0) (("b" "y") 0))))
(lex.add.entry '("cache" nil ((("k" "a" "sh") 0))))
(lex.add.entry '("cadre" nil ((("k" "a" "d" "rh") 0))))
(lex.add.entry '("café" nil ((("k" "a") 0) (("f" "e") 0))))
(lex.add.entry '("caisse" nil ((("k" "eh" "s") 0))))
(lex.add.entry '("calembredaine" nil ((("k" "a") 0) (("l" "ahn") 0) (("b" "rh" "ae") 0) (("d" "eh" "n") 0))))
(lex.add.entry '("campagne" nil ((("k" "ahn") 0) (("p" "a" "jg") 0))))
(lex.add.entry '("camping_car" nil ((("k" "ahn") 0) (("p" "i" "n" "g") 0) (("k" "a" "rh") 0))))
(lex.add.entry '("capacité" nil ((("k" "a") 0) (("p" "a") 0) (("s" "i") 0) (("t" "e") 0))))
(lex.add.entry '("capitale" nil ((("k" "a") 0) (("p" "i") 0) (("t" "a" "l") 0))))
(lex.add.entry '("capté" nil ((("k" "a") 0) (("p" "t" "e") 0))))
(lex.add.entry '("caractère" nil ((("k" "a") 0) (("rh" "a" "k") 0) (("t" "eh" "rh") 0))))
(lex.add.entry '("cardinal" nil ((("k" "a" "rh") 0) (("d" "i") 0) (("n" "a" "l") 0))))
(lex.add.entry '("carte" nil ((("k" "a" "rh" "t") 0))))
(lex.add.entry '("carton" nil ((("k" "a" "rh") 0) (("t" "ohn") 0))))
(lex.add.entry '("cassé" nil ((("k" "ah") 0) (("s" "e") 0))))
(lex.add.entry '("cata" nil ((("k" "a") 0) (("t" "a") 0))))
(lex.add.entry '("catalogue" nil ((("k" "a") 0) (("t" "a") 0) (("l" "oh" "g") 0))))
(lex.add.entry '("catamini" nil ((("k" "a") 0) (("t" "a") 0) (("m" "i") 0) (("n" "i") 0))))
(lex.add.entry '("catégorie" nil ((("k" "a") 0) (("t" "e") 0) (("g" "oh") 0) (("rh" "i") 0))))
; var
(lex.add.entry '("Ce_PRO:dem" PRO:dem ((("s" "ae") 0))))  
(lex.add.entry '("ce_ci" nil ((("s" "ae") 0) (("s" "i") 0))))
(lex.add.entry '("celle" nil ((("s" "eh" "l") 0))))
(lex.add.entry '("celui" nil ((("s" "ae")0) (("l" "hw" i) 0))))
(lex.add.entry '("celui_là" nil ((("s" "ae") 0) (("l" "hw" i) 0) (("l" "a") 0))))
(lex.add.entry '("centième" nil ((("s" "ahn") 0) (("t" "j" "eh" "m") 0))))
(lex.add.entry '("cep" nil ((("s" "eh" "p") 0))))
(lex.add.entry '("cependant" nil ((("s" "ae") 0) (("p" "ahn") 0) (("d" "ahn") 0))))
(lex.add.entry '("certain" nil ((("s" "eh" "rh") 0) (("t" "ehn") 0))))
(lex.add.entry '("certaine" nil ((("s" "eh" "rh") 0) (("t" "eh" "n") 0))))
(lex.add.entry '("certitude" nil ((("s" "eh" "rh") 0) (("t" "i") 0) (("t" "y" "d") 0))))
(lex.add.entry '("ceu" nil ((("s" "eu") 0))))
(lex.add.entry '("chagrine" nil ((("sh" "a") 0) (("g" "rh" "i" "n") 0))))
(lex.add.entry '("chaise" nil ((("sh" "eh" "z") 0))))
(lex.add.entry '("challenge" nil ((("sh" "a") 0) (("l" "ahn" "zh") 0))))
(lex.add.entry '("champ" nil ((("sh" "ahn") 0))))
(lex.add.entry '("changement" nil ((("sh" "ahn" "zh") 0) (("m" "ahn") 0))))
(lex.add.entry '("changé" nil ((("sh" "ahn") 0) (("zh" "e") 0))))
(lex.add.entry '("chanté" nil ((("sh" "ahn") 0) (("t" "e") 0))))
(lex.add.entry '("chantée" nil ((("sh" "ahn") 0) (("t" "e") 0))))
(lex.add.entry '("chapitre" nil ((("sh" "a") 0) (("p" "i" "t" "rh") 0))))
(lex.add.entry '("charitable" nil ((("sh" "a") 0) (("rh" "i") 0) (("t" "a" "b" "l") 0))))
(lex.add.entry '("chassé" nil ((("sh" "a") 0) (("s" "e") 0))))
(lex.add.entry '("chaud" nil ((("sh" "o") 0))))
(lex.add.entry '("chaudement" nil ((("sh" "o" "d") 0) (("m" "ahn") 0))))
(lex.add.entry '("chef" nil ((("sh" "eh" "f") 0))))
(lex.add.entry '("chemin" nil ((("sh" "ae") 0) (("m" "ehn") 0))))
(lex.add.entry '("cher" nil ((("sh" "eh" "rh") 0))))
(lex.add.entry '("chercheur" nil ((("sh" "eh" "rh") 0) (("sh" "oe" "rh") 0))))
(lex.add.entry '("cherché" nil ((("sh" "eh" "rh") 0) (("sh" "e") 0))))
(lex.add.entry '("chevau" nil ((("sh" "ae") 0) (("v" "o") 0))))
(lex.add.entry '("chiffre" nil ((("sh" "i" "f" "rh") 0))))
(lex.add.entry '("choc" nil ((("sh" "oh" "k") 0))))
(lex.add.entry '("choi" nil ((("sh" "w" "a") 0))))
(lex.add.entry '("chose" nil ((("sh" "o" "z") 0))))
(lex.add.entry '("ci" nil ((("s" "i") 0))))
(lex.add.entry '("cinq_à_sept" nil ((("s" "ehn") 0) (("k" "a")0) (("s" "eh" t) 0))))
(lex.add.entry '("cinquante" nil ((("s" "ehn") 0) (("k" "ahn" "t") 0))))
(lex.add.entry '("cinquantième" nil ((("s" "ehn") 0) (("k" "ahn") 0) (("t" "j" "eh" "m") 0))))
(lex.add.entry '("circonstance" nil ((("s" "i" "rh") 0) (("k" "ohn" "s") 0) (("t" "ahn" "s") 0))))
(lex.add.entry '("cité" nil ((("s" "i") 0) (("t" "e") 0))))
(lex.add.entry '("civilisation" nil ((("s" "i") 0) (("v" "i") 0) (("l" "i") 0) (("z" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("clarté" nil ((("k" "l" "a" "rh") 0) (("t" "e") 0))))
(lex.add.entry '("clenche" nil ((("k" "l" "ahn" "sh") 0))))
(lex.add.entry '("clenchette" nil ((("k" "l" "ahn") 0) (("sh" "eh" "t") 0))))
(lex.add.entry '("clinche" nil ((("k" "l" "ehn" "sh") 0))))
(lex.add.entry '("cocu" nil ((("k" "oh") 0) (("k" "y") 0))))
(lex.add.entry '("cognitif" nil ((("k" "oh") 0) (("n" "i") 0) (("t" "i" "f") 0))))
(lex.add.entry '("coiffé" nil ((("k" "w" "a") 0) (("f" "e") 0))))
(lex.add.entry '("colère" nil ((("k" "oh") 0) (("l" "eh" "rh") 0))))
(lex.add.entry '("com" nil ((("k" "oh" "m") 0))))
(lex.add.entry '("commencé" nil ((("k" "oh") 0) (("m" "ahn") 0) (("s" "e") 0))))
(lex.add.entry '("communiqué" nil ((("k" "oh") 0) (("m" "y") 0) (("n" "i") 0) (("k" "e") 0))))
(lex.add.entry '("complexité" nil ((("k" "ohn") 0) (("p" "l" "eh" "k") 0) (("s" "i") 0) (("t" "e") 0))))
(lex.add.entry '("complot" nil ((("k" "ohn") 0) (("p" "l" "o") 0))))
(lex.add.entry '("comprend" nil ((("k" "ohn") 0) (("p" "rh" "ahn") 0))))
(lex.add.entry '("comprenne" nil ((("k" "ohn")0) (("p" "rh" "eh" "n") 0))))
(lex.add.entry '("compri" nil ((("k" "ohn") 0) (("p" "rh" "i") 0))))
(lex.add.entry '("compte" nil ((("k" "ohn" "t") 0))))
(lex.add.entry '("compté" nil ((("k" "ohn") 0) (("t" "e") 0))))
(lex.add.entry '("concevoir" nil ((("k" "ohn") 0) (("s" "ae") 0) (("v" "w" "a" "rh") 0))))
(lex.add.entry '("conclusion" nil ((("k" "ohn") 0) (("k" "l" "y") 0) (("z" "j" "ohn") 0))))
(lex.add.entry '("condition" nil ((("k" "ohn") 0) (("d" "i") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("condui" nil ((("k" "ohn")0) (("d" "hw" i) 0))))
(lex.add.entry '("confiance" nil ((("k" "ohn") 0) (("f" "j" "ahn" "s") 0))))
(lex.add.entry '("confinement" nil ((("k" "ohn") 0) (("f" "i" "n") 0) (("m" "ahn") 0))))
(lex.add.entry '("conflit" nil ((("k" "ohn") 0) (("f" "l" "i") 0))))
(lex.add.entry '("confondre" nil ((("k" "ohn") 0) (("f" "ohn" "d" "rh") 0))))
(lex.add.entry '("conjecture" nil ((("k" "ohn") 0) (("zh" "eh" "k") 0) (("t" "y" "rh") 0))))
(lex.add.entry '("connaissse" nil ((("k" "oh") 0) (("n" "eh" "s") 0))))
(lex.add.entry '("connu" nil ((("k" "oh") 0) (("n" "y") 0))))
(lex.add.entry '("connè" nil ((("k" "oh") 0) (("n" "eh") 0))))
(lex.add.entry '("conseiller" nil ((("k" "ohn") 0) (("s" "eh") 0) (("j" "e") 0))))
(lex.add.entry '("conservatrice" nil ((("k" "ohn") 0) (("s" "eh" "rh") 0) (("v" "a") 0) (("t" "rh" "i" "s") 0))))
(lex.add.entry '("considère" nil ((("k" "ohn") 0) (("s" "i") 0) (("d" "eh" "rh") 0))))
(lex.add.entry '("consonne" nil ((("k" "ohn") 0) (("s" "oh" "n") 0))))
(lex.add.entry '("constaté" nil ((("k" "ohn" "s") 0) (("t" "a") 0) (("t" "e") 0))))
(lex.add.entry '("contesté" nil ((("k" "ohn") 0) (("t" "eh" "s") 0) (("t" "e") 0))))
(lex.add.entry '("continué" nil ((("k" "ohn") 0) (("t" "i") 0) (("n" "hw" "e") 0))))
(lex.add.entry '("contradiction" nil ((("k" "ohn") 0) (("t" "rh" "a") 0) (("d" "i" "k") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("contrainte" nil ((("k" "ohn") 0) (("t" "rh" "ehn" "t") 0))))
(lex.add.entry '("contre" nil ((("k" "ohn" "t" "rh" ) 0))))
(lex.add.entry '("contribution" nil ((("k" "ohn") 0) (("t" "rh" "i") 0) (("b" "y") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("conté" nil ((("k" "ohn") 0) (("t" "e") 0))))
(lex.add.entry '("convainc_t_elle" nil ((("k" "ohn") 0) (("v" "ehn") 0) (("t" "eh" "l") 0))))
(lex.add.entry '("conversation" nil ((("k" "ohn") 0) (("v" "eh" "rh") 0) (("s" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("coton" nil ((("k" "oh") 0) (("t" "ohn") 0))))
(lex.add.entry '("couché" nil ((("k" "u") 0) (("sh" "e") 0))))
(lex.add.entry '("couleur" nil ((("k" "u") 0) (("l" "oe" "rh") 0))))
(lex.add.entry '("coup" nil ((("k" "u") 0))))
(lex.add.entry '("coupable" nil ((("k" "u") 0) (("p" "a" "b" "l") 0))))
(lex.add.entry '("couple" nil ((("k" "u" "p" "l") 0))))
(lex.add.entry '("courant" nil ((("k" "u") 0) (("rh" "ahn") 0))))
(lex.add.entry '("coureur" nil ((("k" "u") 0) (("rh" "oe" "rh") 0))))
(lex.add.entry '("couvert" nil ((("k" "u") 0) (("v" "eh" "rh") 0))))
(lex.add.entry '("coïncide" nil ((("k" "oh") 0) (("i") 0) (("s" "i" "d") 0))))
(lex.add.entry '("craque" nil ((("k" "rh" "a" "k") 0))))
(lex.add.entry '("crin" nil ((("k" "rh" "ehn") 0))))
(lex.add.entry '("critique" nil ((("k" "rh" "i") 0) (("t" "i" "k") 0))))
(lex.add.entry '("critiqué" nil ((("k" "rh" "i") 0) (("t" "i") 0) (("k" "e") 0))))
(lex.add.entry '("croc_en_jambe" nil ((("k" "rh" "oh") 0) (("k" "ahn" "n") 0) (("zh" "ahn" "b") 0))))
(lex.add.entry '("croi" nil ((("k" "rh" "w" "a") 0))))
(lex.add.entry '("croissance" nil ((("k" "rh" "w" "a") 0) (("s" "ahn" "s") 0))))
(lex.add.entry '("croyè" nil ((("k" "rh" "w" "a") 0) (("j" "eh") 0))))
(lex.add.entry '("croyé" nil ((("k" "rh" "w" "a") 0) (("j" "e") 0))))
(lex.add.entry '("cru" nil ((("k" "rh" "y") 0))))
(lex.add.entry '("créativité" nil ((("k" "rh" "e") 0) (("a") 0) (("t" "i") 0) (("v" "i") 0) (("t" "e") 0))))
(lex.add.entry '("culture" nil ((("k" "y" "l") 0) (("t" "y" "rh") 0))))
(lex.add.entry '("culturel" nil ((("k" "y" "l") 0) (("t" "y") 0) (("rh" "eh" "l") 0))))
(lex.add.entry '("curieusement" nil ((("k" "y") 0) (("rh" "i") 0) (("eu" "z") 0) (("m" "ahn") 0))))
(lex.add.entry '("cédille" nil ((("s" "e") 0) (("d" "i" "j") 0))))
(lex.add.entry '("cédé" nil ((("s" "e") 0) (("d" "e") 0))))
(lex.add.entry '("côté" nil ((("k" "o") 0) (("t" "e") 0))))
(lex.add.entry '("d'exclamation" nil ((("d" "eh" "k" "s") 0) (("k" "l" "a") 0) (("m" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("d_achille" nil ((("d" "a") 0) (("sh" "i" "l") 0))))
(lex.add.entry '("d_argentine" nil ((("d" "a" "rh") 0) (("zh" "ahn") 0) (("t" "i" "n") 0))))
(lex.add.entry '("d_arménie" nil ((("d" "a" "rh") 0) (("m" "e") 0) (("n" "i") 0))))
(lex.add.entry '("d_hazebrouck" nil ((("d" "a" "z") 0) (("b" "rh" "u" "k") 0))))
(lex.add.entry '("d_abeille" nil ((("d" "a") 0) (("b" "eh" "j") 0))))
(lex.add.entry '("d_accè" nil ((("d" "a" "k") 0) (("s" "eh") 0))))
(lex.add.entry '("d_affaire" nil ((("d" "a") 0) (("f" "eh" "rh") 0))))
(lex.add.entry '("d_affection" nil ((("d" "a") 0) (("f" "eh" "k") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("d_ailleur" nil ((("d" "a") 0) (("j" "oe" "rh") 0))))
(lex.add.entry '("d_amour" nil ((("d" "a") 0) (("m" "u" "rh") 0))))
(lex.add.entry '("d_ancien" nil ((("d" "ahn") 0) (("s" "j" "ehn") 0))))
(lex.add.entry '("d_anne" nil ((("d" "a" "n") 0))))
(lex.add.entry '("d_applaudir" nil ((("d" "a") 0) (("p" "l" "o") 0) (("d" "i" "rh") 0))))
(lex.add.entry '("d_arc_boutant" nil ((("d" "a" "rh" "k") 0) (("b" "u") 0) (("t" "ahn") 0))))
(lex.add.entry '("d_arrivé" nil ((("d" "a") 0) (("rh" "i") 0) (("v" "e") 0))))
(lex.add.entry '("d_attaque" nil ((("d" "a") 0) (("t" "a" "k") 0))))
(lex.add.entry '("d_aujourd" nil ((("d" "o") 0) (("zh" "u" "rh") 0))))
(lex.add.entry '("d_autre" nil ((("d" "o" "t" "rh") 0))))
(lex.add.entry '("d_avec" nil ((("d" "a") 0) (("v" "eh" "k") 0))))
(lex.add.entry '("d_avi" nil ((("d" "a") 0) (("v" "i") 0))))
(lex.add.entry '("d_avril" nil ((("d" "a") 0) (("v" "rh" "i" "l") 0))))
(lex.add.entry '("d_entre" nil ((("d" "ahn""t" "rh") 0))))
(lex.add.entry '("d_entrée" nil ((("d" "ahn") 0) (("t" "rh" "e") 0))))
(lex.add.entry '("d_esprit" nil ((("d" "eh" "s") 0) (("p" "rh" "i") 0))))
(lex.add.entry '("d_estime" nil ((("d" "eh" "s") 0) (("t" "i" "m") 0))))
(lex.add.entry '("d_euro" nil ((("d" "eu") 0) (("rh" "o") 0))))
(lex.add.entry '("d_expédition" nil ((("d" "eh" "k" "s") 0) (("p" "e") 0) (("d" "i") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("d_humeur" nil ((("d" "y") 0) (("m" "oe" "rh") 0))))
(lex.add.entry '("d_ici" nil ((("d" "i") 0) (("s" "i") 0))))
(lex.add.entry '("d_identifié" nil ((("d" "i") 0) (("d" "ahn") 0) (("t" "i") 0) (("f" "j" "e") 0))))
(lex.add.entry '("d_imaginé" nil ((("d" "i") 0) (("m" "a") 0) (("zh" "i") 0) (("n" "e") 0))))
(lex.add.entry '("d_impôt" nil ((("d" "ehn") 0) (("p" "o") 0))))
(lex.add.entry '("d_industrie" nil ((("d" "ehn") 0) (("d" "y" "s") 0) (("t" "rh" "i") 0))))
(lex.add.entry '("d_intéressant" nil ((("d" "ehn") 0) (("t" "e") 0) (("rh" "e") 0) (("s" "ahn") 0))))
(lex.add.entry '("d_intérê" nil ((("d" "ehn") 0) (("t" "e") 0) (("rh" "eh") 0))))
(lex.add.entry '("d_intérêt" nil ((("d" "ehn") 0) (("t" "e") 0) (("rh" "eh") 0))))
(lex.add.entry '("d_ironie" nil ((("d" "i") 0) (("rh" "oh") 0) (("n" "i") 0))))
(lex.add.entry '("d_issue" nil ((("d" "i") 0) (("s" "y") 0))))
(lex.add.entry '("d_ordre" nil ((("d" "oh" "rh" "d" "rh") 0))))
(lex.add.entry '("d_outre" nil ((("d" "u" "t" "rh") 0))))
(lex.add.entry '("d_utilité" nil ((("d" "y") 0) (("t" "i") 0) (("l" "i") 0) (("t" "e") 0))))
(lex.add.entry '("d_émancipation" nil ((("d" "e") 0) (("m" "ahn") 0) (("s" "i") 0) (("p" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("d_étonnant" nil ((("d" "e") 0) (("t" "oh") 0) (("n" "ahn") 0))))
(lex.add.entry '("d_être" nil ((("d" "eh""t" "rh") 0))))
(lex.add.entry '("dansé" nil ((("d" "ahn") 0) (("s" "e") 0))))
(lex.add.entry '("date" nil ((("d" "a" "t") 0))))
(lex.add.entry '("davantage" nil ((("d" "a") 0) (("v" "ahn") 0) (("t" "a" "zh") 0))))
(lex.add.entry '("de_rien" nil ((("d" "ae") 0) (("rh" "j" "ehn") 0))))
(lex.add.entry '("demande" nil ((("d" "ae") 0) (("m" "ahn" "d") 0))))
(lex.add.entry '("demandè" nil ((("d" "ae") 0) (("m" "ahn") 0) (("d" "eh") 0))))
(lex.add.entry '("demeurera" nil ((("d" "ae") 0) (("m" "oe") 0) (("rh" "ae") 0) (("rh" "a") 0))))
(lex.add.entry '("demeuré" nil ((("d" "ae") 0) (("m" "oe") 0) (("rh" "e") 0))))
(lex.add.entry '("demi" nil ((("d" "ae") 0) (("m" "i") 0))))
(lex.add.entry '("denier" nil ((("d" "ae") 0) (("n" "j" "e") 0))))
(lex.add.entry '("dessin" nil ((("d" "e") 0) (("s" "ehn") 0))))
(lex.add.entry '("deutsche" nil ((("d" "eu" "t" "sh") 0))))
(lex.add.entry '("devenir" nil ((("d" "ae") 0) (("v" "ae") 0) (("n" "i" "rh") 0))))
(lex.add.entry '("devoir" nil ((("d" "ae") 0) (("v" "w" "a" "rh") 0))))
(lex.add.entry '("devon" nil ((("d" "ae") 0) (("v" "ohn") 0))))
(lex.add.entry '("devrè" nil ((("d" "ae") 0) (("v" "rh" "eh") 0))))
(lex.add.entry '("devè" nil ((("d" "ae") 0) (("v" "eh") 0))))
(lex.add.entry '("dialogue" nil ((("d" "j" "a") 0) (("l" "oh" "g") 0))))
(lex.add.entry '("didactique" nil ((("d" "i") 0) (("d" "a" "k") 0) (("t" "i" "k") 0))))
(lex.add.entry '("difficile" nil ((("d" "i") 0) (("f" "i") 0) (("s" "i" "l") 0))))
(lex.add.entry '("diffère" nil ((("d" "i") 0) (("f" "eh" "rh") 0))))
(lex.add.entry '("différence" nil ((("d" "i") 0) (("f" "e") 0) (("rh" "ahn" "s") 0))))
(lex.add.entry '("différon" nil ((("d" "i") 0) (("f" "e") 0) (("rh" "ohn") 0))))
(lex.add.entry '("dimanche" nil ((("d" "i") 0) (("m" "ahn" "sh") 0))))
(lex.add.entry '("dire" nil ((("d" "i" "rh") 0))))
(lex.add.entry '("direction" nil ((("d" "i") 0) (("rh" "eh" "k") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("dirè" nil ((("d" "i") 0) (("rh" "eh") 0))))
(lex.add.entry '("disant" nil ((("d" "i") 0) (("z" "ahn") 0))))
(lex.add.entry '("discipline" nil ((("d" "i") 0) (("s" "i") 0) (("p" "l" "i" "n") 0))))
(lex.add.entry '("discour" nil ((("d" "i" "s") 0) (("k" "u" "rh") 0))))
(lex.add.entry '("disparaitre" nil ((("d" "i" "s") 0) (("p" "a") 0) (("rh" "eh" "t" "rh") 0))))
(lex.add.entry '("disparu" nil ((("d" "i" "s") 0) (("p" "a") 0) (("rh" "y") 0))))
(lex.add.entry '("disposé" nil ((("d" "i" "s") 0) (("p" "o") 0) (("z" "e") 0))))
(lex.add.entry '("dissimulée" nil ((("d" "i") 0) (("s" "i") 0) (("m" "y") 0) (("l" "e") 0))))
(lex.add.entry '("distinction" nil ((("d" "i" "s") 0) (("t" "ehn" "k") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("dite" nil ((("d" "i" "t") 0))))
(lex.add.entry '("diurne" nil ((("d" "i") 0) (("j" "y" "rh" "n") 0))))
(lex.add.entry '("diverse" nil ((("d" "i") 0) (("v" "eh" "rh" "s") 0))))
(lex.add.entry '("do" nil ((("d" "o") 0))))
(lex.add.entry '("doi" nil ((("d" "w" "a") 0))))
(lex.add.entry '("donateur" nil ((("d" "oh") 0) (("n" "a") 0) (("t" "oe" "rh") 0))))
(lex.add.entry '("donne" nil ((("d" "oh" "n") 0))))
(lex.add.entry '("donne_moi_" nil ((("d" "oh" "n") 0) (("m" "w" "a") 0))))
(lex.add.entry '("donne_t_elle" nil ((("d" "oh" "n") 0) (("t" "eh" "l") 0))))
(lex.add.entry '("donnera" nil ((("d" "oh" "n") 0) (("rh" "a") 0))))
(lex.add.entry '("donnerè" nil ((("d" "oh" n) 0) (("rh" "eh") 0))))
(lex.add.entry '("donneré" nil ((("d" "oh" n) 0) (("rh" "e") 0))))
(lex.add.entry '("donné" nil ((("d" "oh") 0) (("n" "e") 0))))
(lex.add.entry '("donnée" nil ((("d" "oh") 0) (("n" "e") 0))))
(lex.add.entry '("dont" nil ((("d" "ohn") 0))))
(lex.add.entry '("dormi" nil ((("d" "oh" "rh") 0) (("m" "i") 0))))
(lex.add.entry '("dou" nil ((("d" "u") 0))))
(lex.add.entry '("doucereu" nil ((("d" "u") 0) (("s" "rh" "eu") 0))))
(lex.add.entry '("doute" nil ((("d" "u" "t") 0))))
(lex.add.entry '("douteu" nil ((("d" "u") 0) (("t" "eu") 0))))
(lex.add.entry '("douté" nil ((("d" "u") 0) (("t" "e") 0))))
(lex.add.entry '("douze" nil ((("d" "u" "z") 0))))
(lex.add.entry '("dressé" nil ((("d" "rh" "e") 0) (("s" "e") 0))))
(lex.add.entry '("droite" nil ((("d" "rh" "w" "a" "t") 0))))
(lex.add.entry '("du" nil ((("d" "y") 0))))
(lex.add.entry '("duc" nil ((("d" "y" "k") 0))))
(lex.add.entry '("duquel" nil ((("d" "y") 0) (("k" "eh" "l") 0))))
(lex.add.entry '("dè" nil ((("d" "eh") 0))))
(lex.add.entry '("dé" nil ((("d" "e") 0))))
(lex.add.entry '("déboule" nil ((("d" "e") 0) (("b" "u" "l") 0))))
(lex.add.entry '("décemment" nil ((("d" "e") 0) (("s" "a") 0) (("m" "ahn") 0))))
(lex.add.entry '("déchirure" nil ((("d" "e") 0) (("sh" "i") 0) (("rh" "y" "rh") 0))))
(lex.add.entry '("défaut" nil ((("d" "e") 0) (("f" "o") 0))))
(lex.add.entry '("défendre" nil ((("d" "e") 0) (("f" "ahn" "d" "rh") 0))))
(lex.add.entry '("défi" nil ((("d" "e") 0) (("f" "i") 0))))
(lex.add.entry '("dégoût" nil ((("d" "e") 0) (("g" "u") 0))))
(lex.add.entry '("déjà" nil ((("d" "e") 0) (("zh" "a") 0))))
(lex.add.entry '("délirant" nil ((("d" "e") 0) (("l" "i") 0) (("rh" "ahn") 0))))
(lex.add.entry '("délivré" nil ((("d" "e") 0) (("l" "i") 0) (("v" "rh" "e") 0))))
(lex.add.entry '("démesurée" nil ((("d" "e") 0) (("m" "ae") 0) (("z" "y") 0) (("rh" "e") 0))))
(lex.add.entry '("démographique" nil ((("d" "e") 0) (("m" "oh") 0) (("g" "rh" "a") 0) (("f" "i" "k") 0))))
(lex.add.entry '("dépeciez" nil ((("d" "e") 0) (("p" "ae") 0) (("s" "j" "e") 0))))
(lex.add.entry '("déplorable" nil ((("d" "e") 0) (("p" "l" "oh") 0) (("rh" "a" "b" "l") 0))))
(lex.add.entry '("déposée" nil ((("d" "e") 0) (("p" "o") 0) (("z" "e") 0))))
(lex.add.entry '("désire" nil ((("d" "e") 0) (("z" "i" "rh") 0))))
(lex.add.entry '("déterminant" nil ((("d" "e") 0) (("t" "eh" "rh") 0) (("m" "i") 0) (("n" "ahn") 0))))
(lex.add.entry '("déterminé" nil ((("d" "e") 0) (("t" "eh" "rh") 0) (("m" "i") 0) (("n" "e") 0))))
(lex.add.entry '("détriment" nil ((("d" "e") 0) (("t" "rh" "i") 0) (("m" "ahn") 0))))
(lex.add.entry '("détritus" nil ((("d" "e") 0) (("t" "rh" "i") 0) (("t" "y") 0))))
(lex.add.entry '("déviance" nil ((("d" "e") 0) (("v" "j" "ahn" "s") 0))))
(lex.add.entry '("effort" nil ((("e") 0) (("f" "oh" "rh") 0))))
(lex.add.entry '("elles_même" nil ((("eh" "l" ) 0) (("m" "eh" "m") 0))))
(lex.add.entry '("emmerdeur" nil ((("ahn") 0) (("m" "eh" "rh") 0) (("d" "oe" "rh") 0))))
(lex.add.entry '("empeau" nil ((("ahn") 0) (("p" "o") 0))))
(lex.add.entry '("empeigné" nil ((("ahn") 0) (("p" "eh") 0) (("jg" "e") 0))))
(lex.add.entry '("empennage" nil ((("ahn") 0) (("p" "e") 0) (("n" "a" "zh") 0))))
(lex.add.entry '("empereur" nil ((("ahn") 0) (("p" "rh" "oe" "rh") 0))))
(lex.add.entry '("emporté" nil ((("ahn") 0) (("p" "oh" "rh") 0) (("t" "e") 0))))
(lex.add.entry '("en_arrière" nil ((("ahn") 0) (("n" "a") 0) (("rh" "j" "eh" "rh") 0))))
(lex.add.entry '("en_haut" nil ((("ahn") 0) (("o") 0))))
(lex.add.entry '("encore" nil ((("ahn") 0) (("k" "oh" "rh") 0))))
(lex.add.entry '("enfant" nil ((("ahn") 0) (("f" "ahn") 0))))
(lex.add.entry '("enfin" nil ((("ahn") 0) (("f" "ehn") 0))))
(lex.add.entry '("engagé" nil ((("ahn") 0) (("g" "a") 0) (("zh" "e") 0))))
(lex.add.entry '("enseigné" nil ((("ahn") 0) (("s" "eh") 0) (("jg" "e") 0))))
(lex.add.entry '("entend" nil ((("ahn") 0) (("t" "ahn") 0))))
(lex.add.entry '("entendre" nil ((("ahn") 0) (("t" "ahn" "d" "rh") 0))))
(lex.add.entry '("entendu" nil ((("ahn") 0) (("t" "ahn") 0) (("d" "y") 0))))
(lex.add.entry '("entière" nil ((("ahn") 0) (("t" "j" "eh" "rh") 0))))
(lex.add.entry '("entouré" nil ((("ahn") 0) (("t" "u") 0) (("rh" "e") 0))))
(lex.add.entry '("entre" nil ((("ahn" "t" "rh") 0))))
(lex.add.entry '("entre_deu" nil ((("ahn") 0) (("t" "rh" "ae") 0) (("d" "eu") 0))))
(lex.add.entry '("entretenir" nil ((("ahn") 0) (("t" "rh" "ae") 0) (("t" "ae") 0) (("n" "i" "rh") 0))))
(lex.add.entry '("envoyé" nil ((("ahn") 0) (("v" "w" "a") 0) (("j" "e") 0))))
(lex.add.entry '("erreur" nil ((("eh") 0) (("rh" "oe" "rh") 0))))
(lex.add.entry '("espace" nil ((("eh" "s") 0) (("p" "a" "s") 0))))
(lex.add.entry '("esprit" nil ((("eh" "s") 0) (("p" "rh" "i") 0))))
(lex.add.entry '("espère" nil ((("eh" "s") 0) (("p" "eh" "rh") 0))))
(lex.add.entry '("essayé" nil ((("e") 0) (("s" "e") 0) (("j" "e") 0))))
(lex.add.entry '("esse" nil ((("eh" "s") 0))))
(lex.add.entry '("estime" nil ((("eh" "s") 0) (("t" "i" "m") 0))))
(lex.add.entry '("ethnique" nil ((("eh" "t")0) (("n" "i" "k") 0))))
(lex.add.entry '("euro" nil ((("eu") 0) (("rh" "o") 0))))
(lex.add.entry '("exacerbés" nil ((("eh" "g") 0) (("z" "a") 0) (("s" "eh" "rh") 0) (("b" "e") 0))))
(lex.add.entry '("excelle" nil ((("eh" "k") 0) (("s" "eh" "l") 0))))
(lex.add.entry '("exception" nil ((("eh" "k") 0) (("s" "eh" "p") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("exemple" nil ((("eh" "g") 0) (("z" "ahn" "p" "l") 0))))
(lex.add.entry '("exponentielle" nil ((("eh" "k" "s") 0) (("p" "oh") 0) (("n" "ahn") 0) (("s" "j" "eh" "l") 0))))
(lex.add.entry '("extrémité" nil ((("eh" "k" "s") 0) (("t" "rh" "e") 0) (("m" "i") 0) (("t" "e") 0))))
(lex.add.entry '("eû" nil ((("y") 0))))
(lex.add.entry '("doucereux" ((("d" "u") 0) (("s" "ae") 0) (("rh" "eu") 0))))
;;;
(lex.add.entry '("fable" nil ((("f" "a" "b" "l") 0))))
(lex.add.entry '("face_à_face" nil ((("f" "a") 0) (("s" "a") 0) (("f" "a" "s") 0))))
(lex.add.entry '("facile" nil ((("f" "a") 0) (("s" "i" "l") 0))))
(lex.add.entry '("facteur" nil ((("f" "a" "k") 0) (("t" "oe" "rh") 0))))
(lex.add.entry '("faire" nil ((("f" "eh" "rh") 0))))
(lex.add.entry '("faisant" nil ((("" "ae") 0) (("z" "ahn") 0))))
(lex.add.entry '("faisè" nil ((("f" "ae") 0) (("z" "eh") 0))))
(lex.add.entry '("fait" nil ((("f" "eh") 0))))
(lex.add.entry '("fallè" nil ((("f" "a") 0) (("l" "eh") 0))))
(lex.add.entry '("fameu" nil ((("f" "a") 0) (("m" "eu") 0))))
(lex.add.entry '("fatale" nil ((("f" "a") 0) (("t" "a" "l") 0))))
(lex.add.entry '("fau" nil ((("f" "o") 0))))
(lex.add.entry '("faudra" nil ((("f" "o") 0) (("d" "rh" "a") 0))))
(lex.add.entry '("fausse" nil ((("f" "o" "s") 0))))
(lex.add.entry '("faute_de_quoi" nil ((("f" "o" "t")0) (("d" "ae") 0) (("k" "w" "a") 0))))
(lex.add.entry '("faveur" nil ((("f" "a") 0) (("v" "oe" "rh") 0))))
(lex.add.entry '("fera" nil ((("f" "ae") 0) (("rh" "a") 0))))
(lex.add.entry '("fermée" nil ((("f" "eh" "rh") 0) (("m" "e") 0))))
(lex.add.entry '("feron" nil ((("f" "ae") 0) (("rh" "ohn") 0))))
(lex.add.entry '("festival" nil ((("f" "eh" "s") 0) (("t" "i") 0) (("v" "a" "l") 0))))
(lex.add.entry '("feuille" nil ((("f" "oe" "j") 0))))
(lex.add.entry '("figure" nil ((("f" "i") 0) (("g" "y" "rh") 0))))
(lex.add.entry '("fil" nil ((("f" "i" "l") 0))))
(lex.add.entry '("fille" nil ((("f" "i" "j") 0))))
(lex.add.entry '("film" nil ((("f" "i" "l" "m") 0))))
(lex.add.entry '("fin" nil ((("f" "ehn") 0))))
(lex.add.entry '("fini" nil ((("f" "i") 0) (("n" "i") 0))))
(lex.add.entry '("fiscal" nil ((("f" "i" "s") 0) (("k" "a" "l") 0))))
(lex.add.entry '("flatteur" nil ((("f" "l" "a") 0) (("t" "oe" "rh") 0))))
(lex.add.entry '("foi" nil ((("f" "w" "a") 0))))
(lex.add.entry '("fon" nil ((("f" "ohn") 0))))
(lex.add.entry '("fonction" nil ((("f" "ohn" "k") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("force" nil ((("f" "oh" "rh" "s") 0))))
(lex.add.entry '("forme" nil ((("f" "oh" "rh" "m") 0))))
(lex.add.entry '("formule" nil ((("f" "oh" "rh") 0) (("m" "y" "l") 0))))
(lex.add.entry '("formulé" nil ((("f" "oh" "rh") 0) (("m" "y") 0) (("l" "e") 0))))
(lex.add.entry '("formé" nil ((("f" "oh" "rh") 0) (("m" "e") 0))))
(lex.add.entry '("fort" nil ((("f" "oh" "rh") 0))))
(lex.add.entry '("fortement" nil ((("f" "oh" "rh") 0) (("t" "ae") 0) (("m" "ahn") 0))))
(lex.add.entry '("forêt" nil ((("f" "oh") 0) (("rh" "eh") 0))))
(lex.add.entry '("fou" nil ((("f" "u") 0))))
(lex.add.entry '("foule" nil ((("f" "u" "l") 0))))
(lex.add.entry '("fragment" nil ((("f" "rh" "a" "g") 0) (("m" "ahn") 0))))
(lex.add.entry '("frite" nil ((("f" "rh" "i" "t") 0))))
(lex.add.entry '("froide" nil ((("f" "rh" "w" "a" "d") 0))))
(lex.add.entry '("fromage" nil ((("f" "rh" "oh") 0) (("m" "a" "zh") 0))))
(lex.add.entry '("frère" nil ((("f" "rh" "eh" "rh") 0))))
(lex.add.entry '("fu" nil ((("f" "y") 0))))
(lex.add.entry '("fuir" nil ((("f" "hw" "i" "rh")0))))
(lex.add.entry '("fure" nil ((("f" "y" "rh") 0))))
(lex.add.entry '("fâcheu" nil ((("f" "a") 0) (("sh" "eu") 0))))
(lex.add.entry '("fâché" nil ((("f" "a") 0) (("sh" "e") 0))))
(lex.add.entry '("fè" nil ((("f" "eh") 0))))
(lex.add.entry '("fée" nil ((("f" "e") 0))))
(lex.add.entry '("fête" nil ((("f" "eh" "t") 0))))
(lex.add.entry '("fû" nil ((("f" "y") 0))))
(lex.add.entry '("gage" nil ((("g" "a" "zh") 0))))
(lex.add.entry '("gagne" nil ((("g" "a" "jg") 0))))
(lex.add.entry '("gagnée" nil ((("g" "a") 0) (("jg" "e") 0))))
(lex.add.entry '("gardé" nil ((("g" "a" "rh") 0) (("d" "e") 0))))
(lex.add.entry '("gaspillage" nil ((("g" "a" "s") 0) (("p" "i") 0) (("j" "a" "zh") 0))))
(lex.add.entry '("genou" nil ((("zh" "ae") 0) (("n" "u") 0))))
(lex.add.entry '("gentilhomme" nil ((("zh" "ahn") 0) (("t" "i") 0) (("j" "oh" "m") 0))))
(lex.add.entry '("gentille" nil ((("zh" "ahn") 0) (("t" "i" "j") 0))))
(lex.add.entry '("gibecière" nil ((("zh" "i" "b") 0) (("s" "j" "eh" "rh") 0))))
(lex.add.entry '("globe" nil ((("g" "l" "oh" "b") 0))))
(lex.add.entry '("gloire" nil ((("g" "l" "w" "a" "rh") 0))))
(lex.add.entry '("glosbe" nil ((("g" "l" "oh" "s" "b") 0))))
(lex.add.entry '("gramme" nil ((("g" "rh" "a" "m") 0))))
(lex.add.entry '("grand" nil ((("g" "rh" "ahn") 0))))
(lex.add.entry '("grand_chose" nil ((("g" "rh" "ahn" "d") 0) (("sh" "o" "z") 0))))
(lex.add.entry '("grande" nil ((("g" "rh" "ahn" "d") 0))))
(lex.add.entry '("grisâtre" nil ((("g" "rh" "i") 0) (("z" "a""t" "rh") 0))))
(lex.add.entry '("grossier" nil ((("g" "rh" "o") 0) (("s" "j" "e") 0))))
(lex.add.entry '("guerre" nil ((("g" "eh" "rh") 0))))
(lex.add.entry '("guilledou" nil ((("g" i) 0) ((j ae)0) ((d "u") 0))))
(lex.add.entry '("guillemet" nil ((("g" i)0) (("j" "ae") 0) (("m" "eh") 0))))
(lex.add.entry '("guère" nil ((("g" "eh" "rh") 0))))
(lex.add.entry '("général" nil ((("zh" "e") 0) (("n" "e") 0) (("rh" "a" "l") 0))))
(lex.add.entry '("génération" nil ((("zh" "e") 0) (("n" "e") 0) (("rh" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("habillée" nil ((("a") 0) (("b" "i") 0) (("j" "e") 0))))
(lex.add.entry '("diablesse" nil ((("d" "j" "a") 0) (("b" "l" "eh" "s") 0))))
(lex.add.entry '("ajouté" nil ((("a") 0) (("zh" "u") 0) (("t" "e") 0))))
(lex.add.entry '("allè" nil ((("a") 0) (("l" "eh") 0))))
(lex.add.entry '("avé" nil ((("a") 0) (("v" "e") 0))))
(lex.add.entry '("baroque" nil ((("b" "a") 0) (("rh" "oh" "k") 0))))
(lex.add.entry '("conduite" nil ((("k" "ohn" )0) (("d" "hw" "i" "t") 0))))
(lex.add.entry '("crochet" nil ((("k" "rh" "oh") 0) (("sh" "eh") 0))))
(lex.add.entry '("cuillère" nil ((("k" "hw" "i")0) (("j" "eh" "rh") 0))))
(lex.add.entry '("d_eau" nil ((("d" "o") 0))))
(lex.add.entry '("diré" nil ((("d" "i") 0) (("rh" "e") 0))))
(lex.add.entry '("en_plu" nil ((("ahn") 0) (("p" "l" "y") 0))))
(lex.add.entry '("eu" nil ((("y") 0))))
(lex.add.entry '("fermante" nil ((("f" "eh" "rh") 0) (("m" "ahn" "t") 0))))
(lex.add.entry '("ferme" nil ((("f" "eh" "rh" "m") 0))))
(lex.add.entry '("hache" nil ((("hh" "a" "sh") 0))))
(lex.add.entry '("hareng" nil ((("hh" "a") 0) (("rh" "ahn" "g") 0))))
(lex.add.entry '("hasard" nil ((("a") 0) (("z" "a" "rh") 0))))
(lex.add.entry '("haute" nil ((("hh" "o" "t") 0))))
(lex.add.entry '("heureu" nil ((("hh" "oe") 0) (("rh" "eu") 0))))
(lex.add.entry '("heureuse" nil ((("hh" "oe") 0) (("rh" "eu" "z") 0))))
(lex.add.entry '("hirsute" nil ((("i" "rh") 0) (("s" "y" "t") 0))))
(lex.add.entry '("histoire" nil ((("i" "s") 0) (("t" "w" "a" "rh") 0))))
(lex.add.entry '("hiver" nil ((("i") 0) (("v" "e") 0))))
(lex.add.entry '("homme" nil ((("oh" "m") 0))))
(lex.add.entry '("homogène" nil ((("oh") 0) (("m" "oh") 0) (("zh" "eh" "n") 0))))
(lex.add.entry '("honneur" nil ((("oh") 0) (("n" "oe" "rh") 0))))
(lex.add.entry '("honteu" nil ((("ohn") 0) (("t" "eu") 0))))
(lex.add.entry '("hostile" nil ((("oh" "s") 0) (("t" "i" "l") 0))))
(lex.add.entry '("hot_dog" nil ((("oh" "t") 0) (("d" "oh" "g") 0))))
(lex.add.entry '("hui" nil ((("hw" i) 0))))
(lex.add.entry '("humain" nil ((("y") 0) (("m" "ehn") 0))))
(lex.add.entry '("humanitaire" nil ((("y") 0) (("m" "a") 0) (("n" "i") 0) (("t" "eh" "rh") 0))))
(lex.add.entry '("humide" nil ((("y") 0) (("m" "i" "d") 0))))
(lex.add.entry '("hygiène" nil ((("i") 0) (("zh" "j" "eh" "n") 0))))
(lex.add.entry '("hâte" nil ((("hh" "a" "t") 0))))
(lex.add.entry '("héberge" nil ((("e") 0) (("b" "eh" "rh" "zh") 0))))
(lex.add.entry '("héritier" nil ((("e") 0) (("rh" "i") 0) (("t" "j" "e") 0))))
(lex.add.entry '("ici" nil ((("i") 0) (("s" "i") 0))))
(lex.add.entry '("idée" nil ((("i") 0) (("d" "e") 0))))
(lex.add.entry '("illettrée" nil ((("i") 0) (("l" "eh" "t") 0) (("t" "rh" "e") 0))))
(lex.add.entry '("illustration" nil ((("i") 0) (("l" "y" "s") 0) (("t" "rh" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("imparfait" nil ((("ehn") 0) (("p" "a" "rh") 0) (("f" "eh") 0))))
(lex.add.entry '("imprimé" nil ((("ehn") 0) (("p" "rh" "i") 0) (("m" "e") 0))))
(lex.add.entry '("impunité" nil ((("ehn") 0) (("p" "y") 0) (("n" "i") 0) (("t" "e") 0))))
(lex.add.entry '("inattendue" nil ((("i") 0) (("n" "a") 0) (("t" "ahn") 0) (("d" "y") 0))))
(lex.add.entry '("inclu" nil ((("ehn") 0) (("k" "l" "y") 0))))
(lex.add.entry '("incontestable" nil ((("ehn") 0) (("k" "ohn") 0) (("t" "eh" "s") 0) (("t" "a" "b" "l") 0))))
(lex.add.entry '("index" nil ((("ehn") 0) (("d" "eh" k s) 0))))
(lex.add.entry '("individu" nil ((("ehn") 0) (("d" "i") 0) (("v" "i") 0) (("d" "y") 0))))
(lex.add.entry '("inflexible" nil ((("ehn") 0) (("f" "l" "eh" "k") 0) (("s" "i" "b" "l") 0))))
(lex.add.entry '("infroissable" nil ((("ehn" ) 0) ((f "rh" "w" "a") 0) (("s" "a" "b" "l") 0))))
(lex.add.entry '("inquiétude" nil ((("ehn") 0) (("k" "j" "e") 0) (("t" "y" "d") 0))))
(lex.add.entry '("insolent" nil ((("ehn") 0) (("s" "oh" "l" "ahn") 0))))
(lex.add.entry '("instructif" nil ((("ehn" "s") 0) (("t" "rh" "y" "k") 0) (("t" "i" "f") 0))))
(lex.add.entry '("inter_état" nil ((("ehn") 0) (("t" "eh") 0) (("rh" "e") 0) (("t" "a") 0))))
(lex.add.entry '("interdite" nil ((("ehn") 0) (("t" "eh" "rh") 0) (("d" "i" "t") 0))))
(lex.add.entry '("international" nil ((("ehn") 0) (("t" "eh" "rh") 0) (("n" "a") 0) (("s" "j" "oh") 0) (("n" "a" "l") 0))))
(lex.add.entry '("intru" nil ((("ehn") 0) (("t" "rh" "y") 0))))
(lex.add.entry '("intérêt" nil ((("ehn") 0) (("t" "e") 0) (("rh" "eh") 0))))
(lex.add.entry '("inventé" nil ((("ehn") 0) (("v" "ahn") 0) (("t" "e") 0))))
(lex.add.entry '("irè" nil ((("i") 0) (("rh" "eh") 0))))
(lex.add.entry '("isolée" nil ((("i") 0) (("z" "oh") 0) (("l" "e") 0))))
(lex.add.entry '("j_aimerè" nil ((("zh" "eh") 0) (("m" "eh") 0) (("rh" "eh") 0))))
(lex.add.entry '("j_arrivé" nil ((("zh" "a") 0) (("rh" "i") 0) (("v" "e") 0))))
(lex.add.entry '("j_honorè" nil ((("zh" "oh") 0) (("n" "oh") 0) (("rh" "eh") 0))))
(lex.add.entry '("j_irè" nil ((("zh" "i") 0) (("rh" "eh") 0))))
(lex.add.entry '("j_y" nil ((("zh" "i") 0))))
(lex.add.entry '("j_étè" nil ((("zh" "e") 0) (("t" "eh") 0))))
(lex.add.entry '("jalou" nil ((("zh" "a") 0) (("l" "u") 0))))
(lex.add.entry '("jamai" nil ((("zh" "a") 0) (("m" "eh") 0))))
(lex.add.entry '("jambe" nil ((("zh" "ahn" "b") 0))))
(lex.add.entry '("jardin" nil ((("zh" "a" "rh") 0) (("d" "ehn") 0))))
(lex.add.entry '("jersey" nil ((("zh" "eh" "rh") 0) (("s" "eh") 0))))
(lex.add.entry '("jet_set" nil ((("zh" "eh" t) 0) ((s "eh" t) 0))))
(lex.add.entry '("jeûne" nil ((("zh" "eu" "n") 0))))
(lex.add.entry '("joie" nil ((("zh" "w" "a") 0))))
(lex.add.entry '("jolie" nil ((("zh" "oh") 0) (("l" "i") 0))))
(lex.add.entry '("jour" nil ((("zh" "u" "rh") 0))))
(lex.add.entry '("jour_là" nil ((("zh" "u" "rh") 0) (("l" "a") 0))))
(lex.add.entry '("journée" nil ((("zh" "u" "rh") 0) (("n" "e") 0))))
(lex.add.entry '("joué" nil ((("zh" "w" "e") 0))))
(lex.add.entry '("jovial" nil ((("zh" "oh") 0) (("v" "j" "a" "l") 0))))
(lex.add.entry '("juillet" nil ((("zh" "hw" "i")0) (("j" "eh") 0))))
(lex.add.entry '("jusqu_au" nil ((("zh" "y" "s") 0) (("k" "o") 0))))
(lex.add.entry '("jusqu_au_bout" nil ((("zh" "y" "s") 0) (("k" "o") 0) (("b" "u") 0))))
(lex.add.entry '("juste" nil ((("zh" "y" "s" "t") 0))))
(lex.add.entry '("jésu" nil ((("zh" "e") 0) (("z" "y") 0))))
(lex.add.entry '("ka" nil ((("k" "a") 0))))
(lex.add.entry '("kilo" nil ((("k" "i") 0) (("l" "o") 0))))
(lex.add.entry '("kilo_hertz" nil ((("k" "i") 0) (("l" "o") 0) (("eh" "rh" "t" "z") 0))))
(lex.add.entry '("kilohertz" nil ((("k" "i") 0) (("l" "o") 0) (("eh" "rh" "t" "z") 0))))
(lex.add.entry '("l_achat" nil ((("l" "a") 0) (("sh" "a") 0))))
(lex.add.entry '("l_addenda" nil ((("l" "a" "d") 0) (("d" "ehn") 0) (("d" "a") 0))))
(lex.add.entry '("l_adjectif" nil ((("l" "a") 0) (("d" "zh" "eh" "k") 0) (("t" "i" "f") 0))))
(lex.add.entry '("l_affaire" nil ((("l" "a") 0) (("f" "eh" "rh") 0))))
(lex.add.entry '("l_affirme" nil ((("l" "a") 0) (("f" "i" "rh" "m") 0))))
(lex.add.entry '("l_aigrefeuille_d" nil ((("l" "eh") 0) (("g" "rh" "ae")0) (("f" "oe" "j") 0))))
(lex.add.entry '("l_aime" nil ((("l" "eh" "m") 0))))
(lex.add.entry '("l_air" nil ((("l" "eh" "rh") 0))))
(lex.add.entry '("l_ami" nil ((("l" "a") 0) (("m" "i") 0))))
(lex.add.entry '("l_amène" nil ((("l" "a") 0) (("m" "eh" "n") 0))))
(lex.add.entry '("l_arrivée" nil ((("l" "a") 0) (("rh" "i") 0) (("v" "e") 0))))
(lex.add.entry '("l_article" nil ((("l" "a" "rh") 0) (("t" "i" "k" "l") 0))))
(lex.add.entry '("l_articulation" nil ((("l" "a" "rh") 0) (("t" "i") 0) (("k" "y") 0) (("l" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("l_aurè" nil ((("l" "oh") 0) (("rh" "eh") 0))))
(lex.add.entry '("l_autorité" nil ((("l" "o") 0) (("t" "oh") 0) (("rh" "i") 0) (("t" "e") 0))))
(lex.add.entry '("l_autre" nil ((("l" "o""t" "rh") 0))))
(lex.add.entry '("l_avant" nil ((("l" "a") 0) (("v" "ahn") 0))))
(lex.add.entry '("l_avoir" nil ((("l" "a") 0) (("v" "w" "a" "rh") 0))))
(lex.add.entry '("l_avon" nil ((("l" "a") 0) (("v" "ohn") 0))))
(lex.add.entry '("l_enrichissement" nil ((("l" "ahn") 0) (("rh" "i") 0) (("sh" "i" "s") 0) (("m" "ahn") 0))))
(lex.add.entry '("l_enseignant" nil ((("l" "ahn") 0) (("s" "eh") 0) (("jg" "ahn") 0))))
(lex.add.entry '("l_entendre" nil ((("l" "ahn") 0) (("t" "ahn" "d" "rh") 0))))
(lex.add.entry '("l_entretenir" nil ((("l" "ahn") 0) (("t" "rh" "ae") 0) (("t" "ae") 0) (("n" "i" "rh") 0))))
(lex.add.entry '("l_envoya" nil ((("l" "ahn") 0) (("v" "w" "a") 0) (("j" "a") 0))))
(lex.add.entry '("l_espoir" nil ((("l" "eh" "s") 0) (("p" "w" "a" "rh") 0))))
(lex.add.entry '("l_esprit" nil ((("l" "eh" "s") 0) (("p" "rh" "i") 0))))
(lex.add.entry '("l_est" nil ((("l" "eh" ) 0))))
(lex.add.entry '("l_homme" nil ((("l" "oh" "m") 0))))
(lex.add.entry '("l_humanité" nil ((("l" "y") 0) (("m" "a") 0) (("n" "i") 0) (("t" "e") 0))))
(lex.add.entry '("l_ile" nil ((("l" "i" "l") 0))))
(lex.add.entry '("l_incidence" nil ((("l" "ehn") 0) (("s" "i") 0) (("d" "ahn" "s") 0))))
(lex.add.entry '("l_information" nil ((("l" "ehn") 0) (("f" "oh" "rh") 0) (("m" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("l_inverse" nil ((("l" "ehn") 0) (("v" "eh" "rh" "s") 0))))
(lex.add.entry '("l_omission" nil ((("l" "oh") 0) (("m" "i") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("l_ordonnance" nil ((("l" "oh" "rh") 0) (("d" "oh") 0) (("n" "ahn" "s") 0))))
(lex.add.entry '("l_é" nil ((("l" "e") 0))))
(lex.add.entry '("l_écriture" nil ((("l" "e") 0) (("k" "rh" "i") 0) (("t" "y" "rh") 0))))
(lex.add.entry '("l_énigme" nil ((("l" "e") 0) (("n" "i" "g" "m") 0))))
(lex.add.entry '("l_époque" nil ((("l" "e") 0) (("p" "oh" "k") 0))))
(lex.add.entry '("l_évidence" nil ((("l" "e") 0) (("v" "i") 0) (("d" "ahn" "s") 0))))
(lex.add.entry '("l_être" nil ((("l" "eh""t" "rh") 0))))
(lex.add.entry '("lactique" nil ((("l" "a" "k") 0) (("t" "i" "k") 0))))
(lex.add.entry '("laid" nil ((("l" "eh") 0))))
(lex.add.entry '("laineu" nil ((("l" "eh") 0) (("n" "eu") 0))))
(lex.add.entry '("laisse" nil ((("l" "e" "s") 0))))
(lex.add.entry '("lait" nil ((("l" "eh") 0))))
(lex.add.entry '("langue" nil ((("l" "ahn" "g") 0))))
(lex.add.entry '("laquelle" nil ((("l" "a") 0) (("k" "eh" "l") 0))))
(lex.add.entry '("larme" nil ((("l" "a" "rh" "m") 0))))
(lex.add.entry '("latitude" nil ((("l" "a") 0) (("t" "i") 0) (("t" "y" "d") 0))))
(lex.add.entry '("lettre" nil ((("l" "eh""t" "rh") 0))))
(lex.add.entry '("leur" nil ((("l" "oe" "rh") 0))))
(lex.add.entry '("levère" nil ((("l" "ae") 0) (("v" "eh" "rh") 0))))
(lex.add.entry '("levé" nil ((("l" "ae") 0) (("v" "e") 0))))
(lex.add.entry '("liberté" nil ((("l" "i") 0) (("b" "eh" "rh") 0) (("t" "e") 0))))
(lex.add.entry '("libre" nil ((("l" "i" "b" "rh") 0))))
(lex.add.entry '("libératrice" nil ((("l" "i") 0) (("b" "e") 0) (("rh" "a") 0) (("t" "rh" "i" "s") 0))))
(lex.add.entry '("lie" nil ((("l" "i") 0))))
(lex.add.entry '("lieu" nil ((("l" "j" "eu") 0))))
(lex.add.entry '("litre" nil ((("l" "i""t" "rh") 0))))
(lex.add.entry '("locution" nil ((("l" "oh") 0) (("k" "y") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("logi" nil ((("l" "oh") 0) (("zh" "i") 0))))
(lex.add.entry '("loin" nil ((("l" "w" "ehn") 0))))
(lex.add.entry '("longitude" nil ((("l" "ohn") 0) (("zh" "i") 0) (("t" "y" "d") 0))))
(lex.add.entry '("loquet" nil ((("l" "oh") 0) (("k" "eh") 0))))
(lex.add.entry '("loup" nil ((("l" "u") 0))))
(lex.add.entry '("loyal" nil ((("l" "w" "a") 0) (("j" "a" "l") 0))))
(lex.add.entry '("lu" nil ((("l" "y") 0))))
(lex.add.entry '("lunaire" nil ((("l" "y") 0) (("n" "eh" "rh") 0))))
(lex.add.entry '("lune" nil ((("l" "y" "n") 0))))
(lex.add.entry '("lustre" nil ((("l" "y" "s""t" "rh") 0))))
(lex.add.entry '("m_a" nil ((("m" "a") 0))))
(lex.add.entry '("m_accusé" nil ((("m" "a") 0) (("k" "y") 0) (("z" "e") 0))))
(lex.add.entry '("m_adresse" nil ((("m" "a") 0) (("d" "rh" "eh" "s") 0))))
(lex.add.entry '("m_attache" nil ((("m" "a" "t") 0) (("t" "a" "sh") 0))))
(lex.add.entry '("m_avé" nil ((("m" "a") 0) (("v" "e") 0))))
(lex.add.entry '("m_embarasse" nil ((("m" "ahn") 0) (("b" "a") 0) (("rh" "a" "s") 0))))
(lex.add.entry '("m_intéresse" nil ((("m" "ehn") 0) (("t" "e") 0) (("rh" "eh" "s") 0))))
(lex.add.entry '("m_on" nil ((("m" "oh") 0))))
(lex.add.entry '("ma" nil ((("m" "a") 0))))
(lex.add.entry '("main" nil ((("m" "ehn") 0))))
(lex.add.entry '("maintenant" nil ((("m" "ehn" "t") 0) (("n" "ahn") 0))))
(lex.add.entry '("maison" nil ((("m" "eh") 0) (("z" "ohn") 0))))
(lex.add.entry '("majuscule" nil ((("m" "a") 0) (("zh" "y" "s") 0) (("k" "y" "l") 0))))
(lex.add.entry '("mal" nil ((("m" "a" "l") 0))))
(lex.add.entry '("malade" nil ((("m" "a") 0) (("l" "a" "d") 0))))
(lex.add.entry '("malaise" nil ((("m" "a") 0) (("l" "eh" "z") 0))))
(lex.add.entry '("malentendu" nil ((("m" "a") 0) (("l" "ahn") 0) (("t" "ahn") 0) (("d" "y") 0))))
(lex.add.entry '("mangé" nil ((("m" "ahn") 0) (("zh" "e") 0))))
(lex.add.entry '("manne" nil ((("m" "a" "n") 0))))
(lex.add.entry '("manquante" nil ((("m" "ahn") 0) (("k" "ahn" "t") 0))))
(lex.add.entry '("manque" nil ((("m" "ahn" "k") 0))))
(lex.add.entry '("marchandise" nil ((("m" "a" "rh") 0) (("sh" "ahn") 0) (("d" "i" "z") 0))))
(lex.add.entry '("mariage" nil ((("m" "a") 0) (("rh" "j" "a" "zh") 0))))
(lex.add.entry '("marque" nil ((("m" "a" "rh" "k") 0))))
(lex.add.entry '("matin" nil ((("m" "a") 0) (("t" "ehn") 0))))
(lex.add.entry '("meilleur" nil ((("m" "e") 0) (("j" "oe" "rh") 0))))
(lex.add.entry '("menace" nil ((("m" "ae") 0) (("n" "a" "s") 0))))
(lex.add.entry '("mensonge" nil ((("m" "ahn") 0) (("s" "ohn" "zh") 0))))
(lex.add.entry '("mentir" nil ((("m" "ahn") 0) (("t" "i" "rh") 0))))
(lex.add.entry '("mentonnet" nil ((("m" "ahn") 0) (("t" "oh") 0) (("n" "eh") 0))))
(lex.add.entry '("mercredi" nil ((("m" "eh" "rh") 0) (("k" "rh" "ae") 0) (("d" "i") 0))))
(lex.add.entry '("merlu" nil ((("m" "eh" "rh") 0) (("l" "y") 0))))
(lex.add.entry '("messieurs_dame" nil ((("m" "e") 0) (("s" "j" "oe" "rh" "s") 0) (("d" "a" "m") 0))))
(lex.add.entry '("metteur" nil ((("m" "eh") 0) (("t" "oe" "rh") 0))))
(lex.add.entry '("mi" nil ((("m" "i") 0))))
(lex.add.entry '("miel" nil ((("m" "j" "eh" "l") 0))))
(lex.add.entry '("miette" nil ((("m" "j" "eh" "t" "t") 0))))
(lex.add.entry '("mieu" nil ((("m" "j" "eu") 0))))
(lex.add.entry '("mille" nil ((("m" "i" "l") 0))))
(lex.add.entry '("milliard" nil ((("m" "i") 0) (("l" "j" "a" "rh") 0))))
(lex.add.entry '("million" nil ((("m" "i") 0) (("l" "j" "ohn") 0))))
(lex.add.entry '("minuscule" nil ((("m" "i") 0) (("n" "y" "s") 0) (("k" "y" "l") 0))))
(lex.add.entry '("mise" nil ((("m" "i" "z") 0))))
(lex.add.entry '("modeste" nil ((("m" "oh") 0) (("d" "eh" "s" "t") 0))))
(lex.add.entry '("moeur" nil ((("m" "oe" "rh") 0))))
(lex.add.entry '("moi" nil ((("m" "w" "a") 0))))
(lex.add.entry '("moin" nil ((("m" "w" "ehn") 0))))
(lex.add.entry '("monoecie" nil ((("m" "oh" "n") 0) (("s" "i") 0))))
(lex.add.entry '("montré" nil ((("m" "ohn") 0) (("t" "rh" "e") 0))))
(lex.add.entry '("morceau" nil ((("m" "oh" "rh") 0) (("s" "o") 0))))
(lex.add.entry '("mort" nil ((("m" "oh" "rh") 0))))
(lex.add.entry '("morte" nil ((("m" "oh" "rh" "t") 0))))
(lex.add.entry '("mot" nil ((("m" "o") 0))))
(lex.add.entry '("mouche" nil ((("m" "u" "sh") 0))))
(lex.add.entry '("moulin" nil ((("m" "u") 0) (("l" "ehn") 0))))
(lex.add.entry '("mourir" nil ((("m" "u") 0) (("rh" "i" "rh") 0))))
(lex.add.entry '("mourrè" nil ((("m" "u") 0) (("rh" "eh") 0))))
(lex.add.entry '("mourré" nil ((("m" "u") 0) (("rh" "e") 0))))
(lex.add.entry '("moyen" nil ((("m" "w" "a") 0) (("j" "ehn") 0))))
(lex.add.entry '("multiplié" nil ((("m" "y" "l") 0) (("t" "i") 0) (("p" "l" "i") 0) (("j" "e") 0))))
(lex.add.entry '("myosotis_NOM" "NOM" ((("m" "i") 0) (("oh") 0) (("z" "oh") 0) (("t" "i" "s") 0))))
(lex.add.entry '("myrtille" nil ((("m" "i" "rh") 0) (("t" "i" "j") 0))))
(lex.add.entry '("mère" nil ((("m" "eh" "rh") 0))))
(lex.add.entry '("mètre" nil ((("m" "eh""t" "rh") 0))))
(lex.add.entry '("mécène" nil ((("m" "e") 0) (("s" "eh" "n") 0))))
(lex.add.entry '("mêle" nil ((("m" "eh" "l") 0))))
(lex.add.entry '("n_a" nil ((("n" "a") 0))))
(lex.add.entry '("n_aie" nil ((("n" "eh") 0))))
(lex.add.entry '("n_aime" nil ((("n" "eh" "m") 0))))
(lex.add.entry '("n_attends" nil ((("n" "a") 0) (("t" "ahn" "d") 0))))
(lex.add.entry '("n_aurè" nil ((("n" "oh") 0) (("rh" "eh") 0))))
(lex.add.entry '("n_avè" nil ((("n" "a") 0) (("v" "eh") 0))))
(lex.add.entry '("n_est_ce_pa" nil ((("n" "eh" "s" "t" "s") 0) (("p" "a") 0))))
(lex.add.entry '("n_importe_comme" nil ((("n" "ehn") 0) (("p" "oh" "rh" "t") 0) (("k" "oh" "m") 0))))
(lex.add.entry '("n_importe_quand" nil ((("n" "ehn") 0) (("p" "oh" "rh" "t") 0) (("k" "ahn") 0))))
(lex.add.entry '("n_importe_quelle" nil ((("n" "ehn") 0) (("p" "oh" "rh" "t") 0) (("k" "eh" "l") 0))))
(lex.add.entry '("n_importe_qui" nil ((("n" "ehn") 0) (("p" "oh" "rh" "t") 0) (("k" "i") 0))))
(lex.add.entry '("n_on" nil ((("n" "oh") 0))))
(lex.add.entry '("n_oubliera" nil ((("n" "u") 0) (("b" "l" "i") 0) (("rh" "a") 0))))
(lex.add.entry '("n_y" nil ((("n" "i") 0))))
(lex.add.entry '("n_y_a" nil ((("n" "j" "a") 0))))
(lex.add.entry '("n_é" nil ((("n" "e") 0))))
(lex.add.entry '("n_étè" nil ((("n" "e") 0) (("t" "eh") 0))))
(lex.add.entry '("nature" nil ((("n" "a") 0) (("t" "y" "rh") 0))))
(lex.add.entry '("ne_plu" nil ((("n" "eh") 0) (("p" "l" "y") 0))))
(lex.add.entry '("nettement" nil ((("n" "eh" "t") 0) (("m" "ahn") 0))))
(lex.add.entry '("neuf_heure" nil ((("n" "eu") 0) (("f" "oe" "rh") 0))))
(lex.add.entry '("no" nil ((("n" "o") 0))))
(lex.add.entry '("nocturne" nil ((("n" "oh" "k") 0) (("t" "y" "rh" "n") 0))))
(lex.add.entry '("noir" nil ((("n" "w" "a" "rh") 0))))
(lex.add.entry '("nombre" nil ((("n" "ohn" "b" "rh") 0))))
(lex.add.entry '("nommé" nil ((("n" "oh") 0) (("m" "e") 0))))
(lex.add.entry '("nord" nil ((("n" "oh" "rh") 0))))
(lex.add.entry '("nord_sud" nil ((("n" "oh" "rh") 0) (("d" "z" "y") 0))))
(lex.add.entry '("norme" nil ((("n" "oh" "rh" "m") 0))))
(lex.add.entry '("note_t_il" nil ((("n" "oh" t) 0) (("t" "i" "l") 0))))
(lex.add.entry '("notre" nil ((("n" "oh" "t" "rh") 0))))
(lex.add.entry '("nouvelle" nil ((("n" "u") 0) (("v" "eh" "l") 0))))
(lex.add.entry '("nuit" nil ((("n" "hw" i) 0))))
(lex.add.entry '("numéro" nil ((("n" "y") 0) (("m" "e") 0) (("rh" "o") 0))))
(lex.add.entry '("nécessaire" nil ((("n" "e") 0) (("s" "e") 0) (("s" "eh" "rh") 0))))
(lex.add.entry '("obligatoire" nil ((("oh") 0) (("b" "l" "i") 0) (("g" "a") 0) (("t" "w" "a" "rh") 0))))
(lex.add.entry '("oblique" nil ((("oh") 0) (("b" "l" "i" "k") 0))))
(lex.add.entry '("observé" nil ((("oh") 0) (("p" "s" "eh" "rh") 0) (("v" "e") 0))))
(lex.add.entry '("obèse" nil ((("oh") 0) (("b" "eh" "z") 0))))
(lex.add.entry '("occasion" nil ((("oh" "k") 0) (("k" "a") 0) (("z" "j" "ohn") 0))))
(lex.add.entry '("octobre" nil ((("oh" "k") 0) (("t" "oh" "b" "rh") 0))))
(lex.add.entry '("odieu" nil ((("oh") 0) (("d" "j" "eu") 0))))
(lex.add.entry '("oiseau" nil ((("w" "a") 0) (("s" "o") 0))))
(lex.add.entry '("orange" nil ((("oh") 0) (("rh" "ahn" "zh") 0))))
(lex.add.entry '("org" nil ((("oh" "rh" "g") 0))))
(lex.add.entry '("ou" nil ((("u") 0))))
(lex.add.entry '("ouie" nom (((w "i") 0))))
(lex.add.entry '("ouvrant" nil ((("u") 0) (("v" "rh" "ahn") 0))))
(lex.add.entry '("ouvrante" nil ((("u") 0) (("v" "rh" "ahn" "t") 0))))
(lex.add.entry '("ouvre" nil ((("u" "v" "rh") 0))))
(lex.add.entry '("page" nil ((("p" "a" "zh") 0))))
(lex.add.entry '("paillard" nil ((("p" "a") 0) (("j" "a" "rh") 0))))
(lex.add.entry '("palmier" nil ((("p" "a" "l") 0) (("m" "j" "e") 0))))
(lex.add.entry '("papier" nil ((("p" "a") 0) (("p" "j" "e") 0))))
(lex.add.entry '("papillote" nil ((("p" "a") 0) (("p" "i") 0) (("l" "oh" "t") 0))))
(lex.add.entry '("par" nil ((("p" "a" "rh") 0))))
(lex.add.entry '("parc" nil ((("p" "a" "rh" "k") 0))))
(lex.add.entry '("parenthèse" nil ((("p" "a") 0) (("rh" "ahn") 0) (("t" "eh" "z") 0))))
(lex.add.entry '("parle" nil ((("p" "a" "rh" "l") 0))))
(lex.add.entry '("parlè" nil ((("p" "a" "rh") 0) (("l" "eh") 0))))
(lex.add.entry '("parlé" nil ((("p" "a" "rh") 0) (("l" "e") 0))))
(lex.add.entry '("part" nil ((("p" "a" "rh") 0))))
(lex.add.entry '("partant" nil ((("p" "a" "rh") 0) (("t" "ahn") 0))))
(lex.add.entry '("parterre" nil ((("p" "a" "rh") 0) (("t" "eh" "rh") 0))))
(lex.add.entry '("partie" nil ((("p" "a" "rh") 0) (("t" "i") 0))))
(lex.add.entry '("partir" nil ((("p" "a" "rh") 0) (("t" "i" "rh") 0))))
(lex.add.entry '("partira" nil ((("p" "a" "rh") 0) (("t" "i") 0) (("rh" "a") 0))))
(lex.add.entry '("parvenir" nil ((("p" "a" "rh" "v") 0) (("n" "i" "rh") 0))))
(lex.add.entry '("passe" nil ((("p" "a" "s") 0))))
(lex.add.entry '("passion" nil ((("p" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("passé" nil ((("p" "a") 0) (("s" "e") 0))))
(lex.add.entry '("passée" nil ((("p" "a") 0) (("s" "e") 0))))
(lex.add.entry '("pauvre" nil ((("p" "o" "v" "rh") 0))))
(lex.add.entry '("pave" nil ((("p" "a" "v") 0))))
(lex.add.entry '("pay" nil ((("p" "e") 0) (("i") 0))))
(lex.add.entry '("paysanne" nil ((("p" "e") 0) (("i") 0) (("z" "a" "n") 0))))
(lex.add.entry '("pemmican" nil ((("p" "e" m) 0) (("m" "i") 0) (("k" "ahn") 0))))
(lex.add.entry '("pendu" nil ((("p" "ahn") 0) (("d" "y") 0))))
(lex.add.entry '("pense" nil ((("p" "ahn" "s") 0))))
(lex.add.entry '("pensé" nil ((("p" "ahn") 0) (("s" "e") 0))))
(lex.add.entry '("pensée" nil ((("p" "ahn") 0) (("s" "e") 0))))
(lex.add.entry '("perclu" nil ((("p" "eh" "rh") 0) (("k" "l" "y") 0))))
(lex.add.entry '("perdition" nil ((("p" "eh" "rh") 0) (("d" "i") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("perdu" nil ((("p" "eh" "rh") 0) (("d" "y") 0))))
(lex.add.entry '("permette" nil ((("p" "eh" "rh") 0) (("m" "eh" "t") 0))))
(lex.add.entry '("permi" nil ((("p" "eh" "rh") 0) (("m" "i") 0))))
(lex.add.entry '("persona_non_grata" nil ((("p" "eh" "rh") 0) (("s" "oh") 0) (("n" "a") 0) (("n" "ohn") 0) (("g" "rh" "a") 0) (("t" "a") 0))))
(lex.add.entry '("personnage" nil ((("p" "eh" "rh") 0) (("s" "oh") 0) (("n" "a" "zh") 0))))
(lex.add.entry '("personne" nil ((("p" "eh" "rh") 0) (("s" "oh" "n") 0))))
(lex.add.entry '("personnel" nil ((("p" "eh" "rh") 0) (("s" "oh") 0) (("n" "eh" "l") 0))))
(lex.add.entry '("petit" nil ((("p" "ae") 0) (("t" "i") 0))))
(lex.add.entry '("petite" nil ((("p" "ae") 0) (("t" "i" "t") 0))))
(lex.add.entry '("peur" nil ((("p" "oe" "rh") 0))))
(lex.add.entry '("philosophique" nil ((("f" "i") 0) (("l" "oh") 0) (("z" "oh") 0) (("f" "i" "k") 0))))
(lex.add.entry '("php" nil ((("p" e)0)((a sh)0)(("p" e) 0))))
(lex.add.entry '("pique" nil ((("p" "i" "k") 0))))
(lex.add.entry '("pitié" nil ((("p" "i") 0) (("t" "j" "e") 0))))
(lex.add.entry '("pièce" nil ((("p" "j" "eh" "s") 0))))
(lex.add.entry '("plain_pied" nil ((("p" "l" "ehn" "n") 0) (("p" "j" "e") 0))))
(lex.add.entry '("plaindre" nil ((("p" "l" "ehn" "d" "rh") 0))))
(lex.add.entry '("plaire" nil ((("p" "l" "eh" "rh") 0))))
(lex.add.entry '("plaisante" nil ((("p" "l" "eh") 0) (("z" "ahn" "t") 0))))
(lex.add.entry '("planche" nil ((("p" "l" "ahn" "sh") 0))))
(lex.add.entry '("plein" nil ((("p" "l" "ehn") 0))))
(lex.add.entry '("pleine" nil ((("p" "l" "eh" "n") 0))))
(lex.add.entry '("plusieur" nil ((("p" "l" "y") 0) (("z" "j" "oe" "rh") 0))))
(lex.add.entry '("plutôt" nil ((("p" "l" "y") 0) (("t" "o") 0))))
(lex.add.entry '("plè" nil ((("p" "l" "eh") 0))))
(lex.add.entry '("poil" nil ((("p" "w" "a" "l") 0))))
(lex.add.entry '("point" nil ((("p" "w" "ehn") 0))))
(lex.add.entry '("poire" nil ((("p" "w" "a" "rh") 0))))
(lex.add.entry '("politique" nil ((("p" "oh") 0) (("l" "i") 0) (("t" "i" "k") 0))))
(lex.add.entry '("polluée" nil ((("p" "oh") 0) (("l" "hw" "e") 0))))
(lex.add.entry '("pont" nil ((("p" "ohn") 0))))
(lex.add.entry '("port" nil ((("p" "oh" "rh") 0))))
(lex.add.entry '("porte" nil ((("p" "oh" "rh" "t") 0))))
(lex.add.entry '("possède" nil ((("p" "oh") 0) (("s" "eh" "d") 0))))
(lex.add.entry '("posé" nil ((("p" "o") 0) (("z" "e") 0))))
(lex.add.entry '("pourcent" nil ((("p" "u" "rh") 0) (("s" "ahn") 0))))
(lex.add.entry '("pourrè" nil ((("p" "u") 0) (("rh" "eh") 0))))
(lex.add.entry '("pourtant" nil ((("p" "u" "rh") 0) (("t" "ahn") 0))))
(lex.add.entry '("pourvoir" nil ((("p" "u" "rh") 0) (("v" "w" "a" "rh") 0))))
(lex.add.entry '("pouvon" nil ((("p" "u") 0) (("v" "ohn") 0))))
(lex.add.entry '("pouvè" nil ((("p" "u") 0) (("v" "eh") 0))))
(lex.add.entry '("premier" nil ((("p" "rh" "ae") 0) (("m" "j" "e") 0))))
(lex.add.entry '("premièrement" nil ((("p" "rh" "ae") 0) (("m" "j" "eh" "rh") 0) (("m" "ahn") 0))))
(lex.add.entry '("prendre" nil ((("p" "rh" "ahn" "d" "rh") 0))))
(lex.add.entry '("presque" nil ((("p" "rh" "eh" "s" "k") 0))))
(lex.add.entry '("pressé" nil ((("p" "rh" "e") 0) (("s" "e") 0))))
(lex.add.entry '("preuve" nil ((("p" "rh" "oe" "v") 0))))
(lex.add.entry '("pri" nil ((("p" "rh" "i") 0))))
(lex.add.entry '("prime" nil ((("p" "rh" "i" "m") 0))))
(lex.add.entry '("principale" nil ((("p" "rh" "ehn") 0) (("s" "i") 0) (("p" "a" "l") 0))))
(lex.add.entry '("prise" nil ((("p" "rh" "i" "z") 0))))
(lex.add.entry '("problème" nil ((("p" "rh" "oh") 0) (("b" "l" "eh" "m") 0))))
(lex.add.entry '("problématique" nil ((("p" "rh" "oh") 0) (("b" "l" "e") 0) (("m" "a") 0) (("t" "i" "k") 0))))
(lex.add.entry '("procédure" nil ((("p" "rh" "oh") 0) (("s" "e") 0) (("d" "y" "rh") 0))))
(lex.add.entry '("professeur" nil ((("p" "rh" "oh") 0) (("f" "eh") 0) (("s" "oe" "rh") 0))))
(lex.add.entry '("profond" nil ((("p" "rh" "oh") 0) (("f" "ohn") 0))))
(lex.add.entry '("profonde" nil ((("p" "rh" "oh") 0) (("f" "ohn" "d") 0))))
(lex.add.entry '("profondément" nil ((("p" "rh" "oh") 0) (("f" "ohn") 0) (("d" "e") 0) (("m" "ahn") 0))))
(lex.add.entry '("pronom" nil ((("p" "rh" "o") 0) (("n" "ohn") 0))))
(lex.add.entry '("prononciation" nil ((("p" "rh" "o") 0) (("n" "ohn") 0) (("s" "j" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("prophète" nil ((("p" "rh" "oh") 0) (("f" "eh" "t") 0))))
(lex.add.entry '("proposé" nil ((("p" "rh" "o") 0) (("p" "o") 0) (("z" "e") 0))))
(lex.add.entry '("propre" nil ((("p" "rh" "oh" "p" "rh") 0))))
(lex.add.entry '("prospère" nil ((("p" "rh" "oh" "s") 0) (("p" "eh" "rh") 0))))
(lex.add.entry '("protégé" nil ((("p" "rh" "o") 0) (("t" "e") 0) (("zh" "e") 0))))
(lex.add.entry '("prè" nil ((("p" "rh" "eh") 0))))
(lex.add.entry '("précaire" nil ((("p" "rh" "e") 0) (("k" "eh" "rh") 0))))
(lex.add.entry '("préconise" nil ((("p" "rh" "e") 0) (("k" "oh") 0) (("n" "i" "z") 0))))
(lex.add.entry '("précède" nil ((("p" "rh" "e") 0) (("s" "eh" "d") 0))))
(lex.add.entry '("prédiction" nil ((("p" "rh" "e") 0) (("d" "i" "k") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("prénom" nil ((("p" "rh" "e") 0) (("n" "ohn") 0))))
(lex.add.entry '("présent" nil ((("p" "rh" "e") 0) (("z" "ahn") 0))))
(lex.add.entry '("présente" nil ((("p" "rh" "e") 0) (("z" "ahn" "t") 0))))
(lex.add.entry '("prévu" nil ((("p" "rh" "e") 0) (("v" "y") 0))))
(lex.add.entry '("public" nil ((("p" "y") 0) (("b" "l" "i" "k") 0))))
(lex.add.entry '("pudeur" nil ((("p" "y") 0) (("d" "oe" "rh") 0))))
(lex.add.entry '("pâte" nil ((("p" "a" "t") 0))))
(lex.add.entry '("pé" nil ((("p" "e") 0))))
(lex.add.entry '("qu_appauvrir" nil ((("k" "a") 0) (("p" "o") 0) (("v" "rh" "i" "rh") 0))))
(lex.add.entry '("qu_est" nil ((("k" "eh") 0))))
(lex.add.entry '("qu_obtient" nil ((("k" "oh" p) 0) (("t" "j" "ehn") 0))))
(lex.add.entry '("qu_à" nil ((("k" "a") 0))))
(lex.add.entry '("qu_éliminé" nil ((("k" "e") 0) (("l" "i") 0) (("m" "i") 0) (("n" "e") 0))))
(lex.add.entry '("quadrille" nil ((("k" "a") 0) (("d" "rh" "i" "j") 0))))
(lex.add.entry '("quantité" nil ((("k" "ahn") 0) (("t" "i") 0) (("t" "e") 0))))
(lex.add.entry '("quarante" nil ((("k" "a") 0) (("rh" "ahn" "t") 0))))
(lex.add.entry '("quarante_et_un" nil ((("k" "a") 0) (("rh" "ahn" "t") 0) ((e)0) (("oen") 0))))
(lex.add.entry '("quart" nil ((("k" "a" "rh") 0))))
(lex.add.entry '("quatorze" nil ((("k" "a") 0) (("t" "oh" "rh" "z") 0))))
(lex.add.entry '("quatre" nil ((("k" "a""t" "rh") 0))))
(lex.add.entry '("quel" nil ((("k" "eh" "l") 0))))
(lex.add.entry '("querellé" nil ((("k" "ae") 0)(("rh" "e") 0) (("l" "e") 0))))
(lex.add.entry '("quête" nil ((("k" "eh" "t") 0))))
(lex.add.entry '("raciau" nil ((("rh" "a") 0) (("s" "j" "o") 0))))
(lex.add.entry '("raison" nil ((("rh" "eh") 0) (("z" "ohn") 0))))
(lex.add.entry '("raisonnement" nil ((("rh" "eh") 0) (("z" "oh" n) 0) (("m" "ahn") 0))))
(lex.add.entry '("rappelé" nil ((("rh" "a" "p") 0) (( "l" "e") 0))))
(lex.add.entry '("rapport" nil ((("rh" "a") 0) (("p" "oh" "rh") 0))))
(lex.add.entry '("rapportant" nil ((("rh" "a") 0) (("p" "oh" "rh") 0) (("t" "ahn") 0))))
(lex.add.entry '("ravitaillée" nil ((("rh" "a") 0) (("v" "i") 0) (("t" "a") 0) (("j" "e") 0))))
(lex.add.entry '("redire" nil ((("rh" "ae") 0) (("d" "i" "rh") 0))))
(lex.add.entry '("redouté" nil ((("rh" "ae") 0) (("d" "u") 0) (("t" "e") 0))))
(lex.add.entry '("refu" nil ((("rh" "ae") 0) (("f" "y") 0))))
(lex.add.entry '("regarde" nil ((("rh" "ae") 0) (("g" "a" "rh" "d") 0))))
(lex.add.entry '("registre" nil ((("rh" "ae") 0) (("zh" "i" "s" "t" "rh") 0))))
(lex.add.entry '("regret" nil ((("rh" "ae") 0) (("g" "rh" "eh") 0))))
(lex.add.entry '("religieu" nil ((("rh" "ae") 0) (("l" "i") 0) (("zh" "j" "eu") 0))))
(lex.add.entry '("reliés" nil ((("rh" "ae") 0) (("l" "j" "e") 0))))
(lex.add.entry '("relève" nil ((("rh" "ae") 0) (("l" "eh" "v") 0))))
(lex.add.entry '("remarque" nil ((("rh" "ae") 0) (("m" "a" "rh" "k") 0))))
(lex.add.entry '("renard" nil ((("rh" "ae") 0) (("n" "a" "rh") 0))))
(lex.add.entry '("rencontre" nil ((("rh" "ahn") 0) (("k" "ohn""t" "rh") 0))))
(lex.add.entry '("rencontrée" nil ((("rh" "ahn") 0) (("k" "ohn") 0) (("t" "rh" "e") 0))))
(lex.add.entry '("rendrè" nil ((("rh" "ahn") 0) (("d" "rh" "eh") 0))))
(lex.add.entry '("rendè" nil ((("rh" "ahn") 0) (("d" "eh") 0))))
(lex.add.entry '("renfloue" nil ((("rh" "ahn") 0) (("f" "l" "u") 0))))
(lex.add.entry '("repense" nil ((("rh" "ae") 0) (("p" "ahn" "s") 0))))
(lex.add.entry '("repo" nil ((("rh" "ae") 0) (("p" "o") 0))))
(lex.add.entry '("représente" nil ((("rh" "ae") 0) (("p" "rh" "e") 0) (("z" "ahn" "t") 0))))
(lex.add.entry '("représentée" nil ((("rh" "ae") 0) (("p" "rh" "e") 0) (("z" "ahn") 0) (("t" "e") 0))))
(lex.add.entry '("requise" nil ((("rh" "ae") 0) (("k" "i" "z") 0))))
(lex.add.entry '("respect" nil ((("rh" "eh" "s") 0) (("p" "eh") 0))))
(lex.add.entry '("reste" nil ((("rh" "eh" "s" "t") 0))))
(lex.add.entry '("restera" nil ((("rh" "eh" "s") 0) (("t" "rh" "a") 0))))
(lex.add.entry '("retard" nil ((("rh" "ae") 0) (("t" "a" "rh") 0))))
(lex.add.entry '("retranchée" nil ((("rh" "ae") 0) (("t" "rh" "ahn") 0) (("sh" "e") 0))))
(lex.add.entry '("retrouve" nil ((("rh" "ae") 0) (("t" "rh" "u" "v") 0))))
(lex.add.entry '("retrouvés" nil ((("rh" "ae") 0) (("t" "rh" "u") 0) (("v" "e") 0))))
(lex.add.entry '("revanche" nil ((("rh" "ae") 0) (("v" "ahn" "sh") 0))))
(lex.add.entry '("revenir" nil ((("rh" "ae" "v") 0) (("n" "i" "rh") 0))))
(lex.add.entry '("reverré" nil ((("rh" "ae") 0) (("v" "e") 0) (("rh" "e") 0))))
(lex.add.entry '("reviendra" nil ((("rh" "ae") 0) (("v" "j" "ehn") 0) (("d" "rh" "a") 0))))
(lex.add.entry '("revu" nil ((("rh" "ae") 0) (("v" "y") 0))))
(lex.add.entry '("reçue" nil ((("rh" "ae") 0) (("s" "y") 0))))
(lex.add.entry '("richesse" nil ((("rh" "i") 0) (("sh" "eh" "s") 0))))
(lex.add.entry '("rien" nil ((("rh" "j" "ehn") 0))))
(lex.add.entry '("risque" nil ((("rh" "i" "s" "k") 0))))
(lex.add.entry '("risqué" nil ((("rh" "i" "s") 0) (("k" "e") 0))))
(lex.add.entry '("roi" nil ((("rh" "w" "a") 0))))
(lex.add.entry '("route" nil ((("rh" "u" "t") 0))))
(lex.add.entry '("royale" nil ((("rh" "w" "a") 0) (("j" "a" "l") 0))))
(lex.add.entry '("rude" nil ((("rh" "y" "d") 0))))
(lex.add.entry '("rue" nil ((("rh" "y") 0))))
(lex.add.entry '("règle" nil ((("rh" "eh" "g" "l") 0))))
(lex.add.entry '("réalité" nil ((("rh" "e") 0) (("a") 0) (("l" "i") 0) (("t" "e") 0))))
(lex.add.entry '("réduction" nil ((("rh" "e") 0) (("d" "y" "k") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("réferer" nil ((("rh" "e") 0) (("f" "e" )0) (("rh" "e") 0))))
(lex.add.entry '("référence" nil ((("rh" "e") 0) (("f" "e") 0) (("rh" "ahn" "s") 0))))
(lex.add.entry '("réponse" nil ((("rh" "e") 0) (("p" "ohn" "s") 0))))
(lex.add.entry '("répétè" nil ((("rh" "e") 0) (("p" "e") 0) (("t" "eh") 0))))
(lex.add.entry '("réseau" nil ((("rh" "e") 0) (("z" "o") 0))))
(lex.add.entry '("résolu" nil ((("rh" "e") 0) (("z" "oh") 0) (("l" "y") 0))))
(lex.add.entry '("résorbé" nil ((("rh" "e") 0) (("z" "oh" "rh") 0) (("b" "e") 0))))
(lex.add.entry '("résulte" nil ((("rh" "e") 0) (("z" "y" "l" "t") 0))))
(lex.add.entry '("résumé" nil ((("rh" "e") 0) (("z" "y") 0) (("m" "e") 0))))
(lex.add.entry '("révélère" nil ((("rh" "e") 0) (("v" "e") 0) (("l" "eh" "rh") 0))))
(lex.add.entry '("s'il" nil ((("s" "i" "l") 0))))
(lex.add.entry '("s_adresse" nil ((("s" "a") 0) (("d" "rh" "eh" "s") 0))))
(lex.add.entry '("s_agi" nil ((("s" "a") 0) (("zh" "i") 0))))
(lex.add.entry '("s_arrangé" nil ((("s" "a") 0) (("rh" "ahn") 0) (("zh" "e") 0))))
(lex.add.entry '("s_arrête" nil ((("s" "a") 0) (("rh" "eh" "t") 0))))
(lex.add.entry '("s_attaché" nil ((("s" "a") 0) (("t" "a") 0) (("sh" "e") 0))))
(lex.add.entry '("s_effectue" nil ((("s" "eh") 0) (("f" "eh" "k") 0) (("t" "y") 0))))
(lex.add.entry '("s_enfui" nil ((("s" "ahn")0) (("f" "hw" "i") 0))))
(lex.add.entry '("s_enivre" nil ((("s" "ahn" )0) ((n "i" "v" "rh") 0))))
(lex.add.entry '("s_entretenir" nil ((("s" "ahn") 0) (("t" "rh" "ae") 0) (("t" "ae") 0) (("n" "i" "rh") 0))))
(lex.add.entry '("s_est" nil ((("s" "eh") 0))))
(lex.add.entry '("s_habille" nil ((("s" "a") 0) (("b" "i" "j") 0))))
(lex.add.entry '("s_inscrivant" nil ((("s" "ehn" "s") 0) (("k" "rh" "i") 0) (("v" "ahn") 0))))
(lex.add.entry '("s_introduisi" nil ((("s" "ehn") 0) (("t" "rh" "oh") 0) (("d" "hw" "i")0) (("z" "i") 0))))
(lex.add.entry '("s_évase" nil ((("s" "e") 0) (("v" "a" "z") 0))))
(lex.add.entry '("saint" nil ((("s" "ehn") 0))))
(lex.add.entry '("sainte" nil ((("s" "ehn" "t") 0))))
(lex.add.entry '("saisi" nil ((("s" "e") 0) (("z" "i") 0))))
(lex.add.entry '("salir" nil ((("s" "a") 0) (("l" "i" "rh") 0))))
(lex.add.entry '("salon" nil ((("s" "a") 0) (("l" "ohn") 0))))
(lex.add.entry '("salut" nil ((("s" "a") 0) (("l" "y") 0))))
(lex.add.entry '("sang" nil ((("s" "ahn") 0))))
(lex.add.entry '("satisfaction" nil ((("s" "a") 0) (("t" "i" "s") 0) (("f" "a" "k") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("savoir" nil ((("s" "a") 0) (("v" "w" "a" "rh") 0))))
(lex.add.entry '("savè" nil ((("s" "a") 0) (("v" "eh") 0))))
(lex.add.entry '("scientifique" nil ((("s" "j" "ahn") 0) (("t" "i") 0) (("f" "i" "k") 0))))
(lex.add.entry '("scène" nil ((("s" "s" "eh" "n") 0))))
(lex.add.entry '("segment" nil ((("s" "eh" "g") 0) (("m" "ahn") 0))))
(lex.add.entry '("seigneur" nil ((("s" "eh") 0) (("jg" "oe" "rh") 0))))
(lex.add.entry '("selon" nil ((("s" "ae") 0) (("l" "ohn") 0))))
(lex.add.entry '("semaine" nil ((("s" "ae") 0) (("m" "eh" "n") 0))))
(lex.add.entry '("semble" nil ((("s" "ahn" "b" "l") 0))))
(lex.add.entry '("semble_t_il" nil ((("s" "ahn") 0) (("b" "l" "ae") 0) (("t" "i" "l") 0))))
(lex.add.entry '("sensible" nil ((("s" "ahn") 0) (("s" "i" "b" "l") 0))))
(lex.add.entry '("sentiment" nil ((("s" "ahn") 0) (("t" "i") 0) (("m" "ahn") 0))))
(lex.add.entry '("sentira" nil ((("s" "ahn") 0) (("t" "i") 0) (("rh" "a") 0))))
(lex.add.entry '("sentè" nil ((("s" "ahn") 0) (("t" "eh") 0))))
(lex.add.entry '("septembre" nil ((("s" "eh" "p") 0) (( "t" "ahn" "b" "rh") 0))))
(lex.add.entry '("serion" nil ((("s" "ae") 0) (("rh" "j" "ohn") 0))))
(lex.add.entry '("sert" nil ((("s" "eh" "rh") 0))))
(lex.add.entry '("servir" nil ((("s" "eh" "rh") 0) (("v" "i" "rh") 0))))
(lex.add.entry '("serviteur" nil ((("s" "eh" "rh") 0) (("v" "i") 0) (("t" "oe" "rh") 0))))
(lex.add.entry '("seré" nil ((("s" "e") 0) (("rh" "e") 0))))
(lex.add.entry '("seulement" nil ((("s" "oe" "l") 0) (("m" "ahn") 0))))
(lex.add.entry '("signe" nil ((("s" "i" "jg") 0))))
(lex.add.entry '("simple" nil ((("s" "ehn" "p" "l") 0))))
(lex.add.entry '("simplicité" nil ((("s" "ehn") 0) (("p" "l" "i") 0) (("s" "i") 0) (("t" "e") 0))))
(lex.add.entry '("singulier" nil ((("s" "ehn") 0) (("g" "y") 0) (("l" "j" "e") 0))))
(lex.add.entry '("sinon" nil ((("s" "i") 0) (("n" "ohn") 0))))
(lex.add.entry '("sion" nil ((("s" "j" "ohn") 0))))
(lex.add.entry '("situation" nil ((("s" "i") 0) (("t" "hw" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("situe" nil ((("s" "i") 0) (("t" "y") 0))))
(lex.add.entry '("situé" nil ((("s" "i") 0) (("t" "hw" "e") 0))))
(lex.add.entry '("siècle" nil ((("s" "j" "eh" "k" "l") 0))))
(lex.add.entry '("slash" nil ((("s" "l" "a" "sh") 0))))
(lex.add.entry '("sociopolitique" nil ((("s" "oh") 0) (("s" "j" "o") 0) (("p" "o") 0) (("l" "i") 0) (("t" "i" "k") 0))))
(lex.add.entry '("société" nil ((("s" "oh") 0) (("s" "j" "e") 0) (("t" "e") 0))))
(lex.add.entry '("soi" nil ((("s" "w" "a") 0))))
(lex.add.entry '("soi_même" nil ((("s" "w" "a") 0) (("m" "eh" "m") 0))))
(lex.add.entry '("soif" nil ((("s" "w" "a" "f") 0))))
(lex.add.entry '("soit" nil ((("s" "w" "a") 0))))
(lex.add.entry '("soixante_cinq" nil ((("s" "w" "a") 0) (("s" "ahn" "t") 0) (("s" "ehn" "k") 0))))
(lex.add.entry '("soldat" nil ((("s" "oh" "l") 0) (("d" "a") 0))))
(lex.add.entry '("solidarité" nil ((("s" "oh") 0) (("l" "i") 0) (("d" "a") 0) (("rh" "i") 0) (("t" "e") 0))))
(lex.add.entry '("sombré" nil ((("s" "ohn") 0) (("b" "rh" "e") 0))))
(lex.add.entry '("somme" nil ((("s" "oh" "m") 0))))
(lex.add.entry '("songe" nil ((("s" "ohn" "zh") 0))))
(lex.add.entry '("sorte" nil ((("s" "oh" "rh" "t") 0))))
(lex.add.entry '("sorti" nil ((("s" "oh" "rh") 0) (("t" "i") 0))))
(lex.add.entry '("sou" nil ((("s" "u") 0))))
(lex.add.entry '("soucié" nil ((("s" "u") 0) (("s" "j" "e") 0))))
(lex.add.entry '("soufflant" nil ((("s" "u") 0) (("f" "l" "ahn") 0))))
(lex.add.entry '("soufflé" nil ((("s" "u") 0) (("f" "l" "e") 0))))
(lex.add.entry '("souffrir" nil ((("s" "u") 0) (("f" "rh" "i" "rh") 0))))
(lex.add.entry '("source" nil ((("s" "u" "rh" "s") 0))))
(lex.add.entry '("sous_estimé" nil ((("s" "u") 0) (("z" "eh" "s") 0) (("t" "i") 0) (("m" "e") 0))))
(lex.add.entry '("sous_système" nil ((("s" "u" ) 0) (("s" "i" "s") 0) (("t" "eh" "m") 0))))
(lex.add.entry '("soutenue" nil ((("s" "u") 0) (("t" "ae") 0) (("n" "y") 0))))
(lex.add.entry '("souvent" nil ((("s" "u")0) (("v" "ahn") 0))))
(lex.add.entry '("sponsor" nil ((("s" "p" "ohn") 0) (("s" "oh" "rh") 0))))
(lex.add.entry '("spécialiste" nil ((("s" "p" "e") 0) (("s" "j" "a") 0) (("l" "i" "s" "t") 0))))
(lex.add.entry '("stupide" nil ((("s" "t" "a") 0) (("p" "i" "d") 0))))
(lex.add.entry '("su" nil ((("s" "y") 0))))
(lex.add.entry '("succinctement" nil ((("s" "y" "k") 0) (("s" "ehn" "k") 0) (("t" "ae") 0) (("m" "ahn") 0))))
(lex.add.entry '("sucre" nil ((("s" "y" "k" "rh") 0))))
(lex.add.entry '("sud_ouest" nil ((("s" "y") 0) (("d" "w" "eh" "s" "t") 0))))
(lex.add.entry '("suffi" nil ((("s" "y") 0) (("f" "i") 0))))
(lex.add.entry '("suite" nil ((("s" "hw" "i" "t") 0))))
(lex.add.entry '("suivante" nil ((("s" "hw" "i")0) (("v" "ahn" "t") 0))))
(lex.add.entry '("sultan" nil ((("s" "y" "l") 0) (("t" "ahn") 0))))
(lex.add.entry '("superflu" nil ((("s" "y") 0) (("p" "eh" "rh") 0) (("f" "l" "y") 0))))
(lex.add.entry '("supporté" nil ((("s" "y") 0) (("p" "oh" "rh") 0) (("t" "e") 0))))
(lex.add.entry '("surpri" nil ((("s" "y" "rh") 0) (("p" "rh" "i") 0))))
(lex.add.entry '("syllabe" nil ((("s" "i") 0) (("l" "a" "b") 0))))
(lex.add.entry '("sympathique" nil ((("s" "ehn") 0) (("p" "a") 0) (("t" "i" "k") 0))))
(lex.add.entry '("système" nil ((("s" "i" "s") 0) (("t" "eh" "m") 0))))
(lex.add.entry '("sè" nil ((("s" "eh") 0))))
(lex.add.entry '("sé" nil ((("s" "e") 0))))
(lex.add.entry '("t_aime" nil ((("t" "eh" "m") 0))))
(lex.add.entry '("t_elle" nil ((("t" "eh" "l") 0))))  
(lex.add.entry '("tact" nil ((("t" "a" "k") 0))))
(lex.add.entry '("talent" nil ((("t" "a") 0) (("l" "ahn") 0))))
(lex.add.entry '("tant" nil ((("t" "ahn") 0))))
(lex.add.entry '("tardé" nil ((("t" "a" "rh") 0) (("d" "e") 0))))
(lex.add.entry '("telle" nil ((("t" "eh" "l") 0))))
(lex.add.entry '("tempérament" nil ((("t" "ahn") 0) (("p" "e") 0) (("rh" "a") 0) (("m" "ahn") 0))))
(lex.add.entry '("tenu" nil ((("t" "ae") 0) (("n" "y") 0))))
(lex.add.entry '("terminé" nil ((("t" "eh" "rh") 0) (("m" "i") 0) (("n" "e") 0))))
(lex.add.entry '("terre" nil ((("t" "e" "rh") 0))))
(lex.add.entry '("terrestre" nil ((("t" "e") 0) (("rh" "eh" "s" "t" "rh") 0))))
(lex.add.entry '("terreur" nil ((("t" "e") 0) (("rh" "oe" "rh") 0))))
(lex.add.entry '("terroriste" nil ((("t" "e") 0) (("rh" "oh") 0) (("rh" "i" "s" "t") 0))))
(lex.add.entry '("théâtre" nil ((("t" "e") 0) (("a" "t" "rh") 0))))
(lex.add.entry '("tilde" nil ((("t" "i" "l" "d") 0))))
(lex.add.entry '("tiret" nil ((("t" "i") 0) (("rh" "eh") 0))))
(lex.add.entry '("tissu" nil ((("t" "i") 0) (("s" "y") 0))))
(lex.add.entry '("titre" nil ((("t" "i" "t" "rh") 0))))
(lex.add.entry '("tièdasse" nil ((("t" "j" "eh") 0) (("d" "a" "s") 0))))
(lex.add.entry '("toi" nil ((("t" "w" "a") 0))))
(lex.add.entry '("toile" nil ((("t" "w" "a" "l") 0))))
(lex.add.entry '("toit" nil ((("t" "w" "a") 0))))
(lex.add.entry '("tombe" nil ((("t" "ohn" "b") 0))))
(lex.add.entry '("tombâte" nil ((("t" "ohn") 0) (("b" "a" "t") 0))))
(lex.add.entry '("ton" nil ((("t" "ohn") 0))))
(lex.add.entry '("touché" nil ((("t" "u") 0) (("sh" "e") 0))))
(lex.add.entry '("toujour" nil ((("t" "u") 0) (("zh" "u" "rh") 0))))
(lex.add.entry '("tourné" nil ((("t" "u" "rh") 0) (("n" "e") 0))))
(lex.add.entry '("tout_autre" nil ((("t" "u") 0) (("t" "o" "t" "rh") 0))))
(lex.add.entry '("tout_compri" nil ((("t" "u" ) 0) (("k" "ohn") 0) (("p" "rh" "i") 0))))
(lex.add.entry '("tout_de_même" nil ((("t" "u" )0) (( "d" "ae") 0) (("m" "eh" "m") 0))))
(lex.add.entry '("tout_va" nil ((("t" "u") 0) (("v" "a") 0))))
(lex.add.entry '("toute" nil ((("t" "u" "t") 0))))
(lex.add.entry '("train" nil ((("t" "rh" "ehn") 0))))
(lex.add.entry '("traitement" nil ((("t" "rh" "eh" "t") 0) (("m" "ahn") 0))))
(lex.add.entry '("traitre" nil ((("t" "rh" "eh" "t" "rh") 0))))
(lex.add.entry '("tranchée" nil ((("t" "rh" "ahn") 0) (("sh" "e") 0))))
(lex.add.entry '("transit" nil ((("t" "rh" "ahn") 0) (("z" "i" "t") 0))))
(lex.add.entry '("traversé" nil ((("t" "rh" "a") 0) (("v" "eh" "rh") 0) (("s" "e") 0))))
(lex.add.entry '("tremblè" nil ((("t" "rh" "ahn") 0) (("b" "l" "eh") 0))))
(lex.add.entry '("trente" nil ((("t" "rh" "ahn" "t") 0))))
(lex.add.entry '("tribale" nil ((("t" "rh" "i") 0) (("b" "a" "l") 0))))
(lex.add.entry '("triste" nil ((("t" "rh" "i" "s" "t") 0))))
(lex.add.entry '("troi" nil ((("t" "rh" "w" "a") 0))))
(lex.add.entry '("troisième" nil ((("t" "rh" "w" "a") 0) (("z" "j" "eh" "m") 0))))
(lex.add.entry '("trompé" nil ((("t" "rh" "ohn") 0) (("p" "e") 0))))
(lex.add.entry '("trompés" nil ((("t" "rh" "ohn") 0) (("p" "e") 0))))
(lex.add.entry '("trouve" nil ((("t" "rh" "u" "v") 0))))
(lex.add.entry '("trè" nil ((("t" "rh" "eh") 0))))
(lex.add.entry '("trésorerie" nil ((("t" "rh" "e") 0) (("z" "oh") 0) (("rh" "ae") 0) (("rh" "i") 0))))
(lex.add.entry '("tué" nil ((("t" "hw" "e") 0))))
(lex.add.entry '("té" nil ((("t" "e") 0))))
(lex.add.entry '("tête" nil ((("t" "eh" "t") 0))))
(lex.add.entry '("ubiquité" nil ((("y") 0) (("b" "i") 0) (("k" "w" "i") 0) (("t" "e") 0))))
(lex.add.entry '("une" nil ((("y" "n") 0))))
(lex.add.entry '("une_autre" nil ((("y") 0) (("n" "o" "t" "rh") 0))))
(lex.add.entry '("unique" nil ((("y") 0) (("n" "i" "k") 0))))
(lex.add.entry '("va" nil ((("v" "a") 0))))
(lex.add.entry '("valeur" nil ((("v" "a") 0) (("l" "oe" "rh") 0))))
(lex.add.entry '("valè" nil ((("v" "a") 0) (("l" "eh") 0))))
(lex.add.entry '("vaste" nil ((("v" "a" "s" "t") 0))))
(lex.add.entry '("vau" nil ((("v" "o") 0))))
(lex.add.entry '("vent" nil ((("v" "ahn") 0))))
(lex.add.entry '("vente" nil ((("v" "ahn" "t") 0))))
(lex.add.entry '("ver" nil ((("v" "eh" "rh") 0))))
(lex.add.entry '("verbe" nil ((("v" "eh" "rh" "b") 0))))
(lex.add.entry '("verrè" nil ((("v" "eh") 0) (("rh" "eh") 0))))
(lex.add.entry '("vertu" nil ((("v" "eh" "rh") 0) (("t" "y") 0))))
(lex.add.entry '("veu" nil ((("v" "eu") 0))))
(lex.add.entry '("veule" nil ((("v" "oe" "l") 0))))
(lex.add.entry '("veux" nil ((("v" "eu") 0))))
(lex.add.entry '("vide" nil ((("v" "i" "d") 0))))
(lex.add.entry '("vie" nil ((("v" "i") 0))))
(lex.add.entry '("vieillissement" nil ((("v" "j" "e") 0) (("j" "i" "s") 0) (("m" "ahn") 0))))
(lex.add.entry '("viendra" nil ((("v" "j" "ehn") 0) (("d" "rh" "a") 0))))
(lex.add.entry '("viendré" nil ((("v" "j" "ehn") 0) (("d" "rh" "e") 0))))
(lex.add.entry '("viendré" nil ((("v" "j" "ehn") 0) (("d" "rh" "eh") 0))))
(lex.add.entry '("vieu" nil ((("v" "j" "eu") 0))))
(lex.add.entry '("ville" nil ((("v" "i" "l") 0))))
(lex.add.entry '("vingt_et_unième" nil ((("v" "ehn") 0) (("t" "e") 0) ((y )0) (("n" "j" "eh" "m") 0))))
(lex.add.entry '("vingtième" nil ((("v" "ehn") 0) (("t" "j" "eh" "m") 0))))
(lex.add.entry '("virgule" nil ((("v" "i" "rh") 0) (("g" "y" "l") 0))))
(lex.add.entry '("virologue" nil ((("v" "i") 0) (("rh" "oh") 0) (("l" "oh" "g") 0))))
(lex.add.entry '("vis_à_vi" nil ((("v" "i") 0) (("z" "a") 0) (("v" "i") 0))))
(lex.add.entry '("visage" nil ((("v" "i") 0) (("z" "a" "zh") 0))))
(lex.add.entry '("visé" nil ((("v" "i") 0) (("z" "e") 0))))
(lex.add.entry '("vitesse" nil ((("v" "i") 0) (("t" "eh" "s") 0))))
(lex.add.entry '("vivre" nil ((("v" "i" "v" "rh") 0))))
(lex.add.entry '("vo" nil ((("v" "o") 0))))
(lex.add.entry '("voi" nil ((("v" "w" "a") 0))))
(lex.add.entry '("voici" nil ((("v" "w" "a") 0) (("s" "i") 0))))
(lex.add.entry '("voie" nil ((("v" "w" "a") 0))))
(lex.add.entry '("voir" nil ((("v" "w" "a" "rh") 0))))
(lex.add.entry '("voisine" nil ((("v" "w" "a") 0) (("z" "i" "n") 0))))
(lex.add.entry '("volonté" nil ((("v" "oh") 0) (("l" "ohn") 0) (("t" "e") 0))))
(lex.add.entry '("volé" nil ((("v" "oh") 0) (("l" "e") 0))))
(lex.add.entry '("voudrè" nil ((("v" "u") 0) (("d" "rh" "eh") 0))))
(lex.add.entry '("voyelle" nil ((("v" "w" "a") 0) (("j" "eh" "l") 0))))
(lex.add.entry '("voyè" nil ((("v" "w" "a") 0) (("j" "eh") 0))))
(lex.add.entry '("vu" nil ((("v" "y") 0))))
(lex.add.entry '("vue" nil ((("v" "y") 0))))
(lex.add.entry '("vulgaire" nil ((("v" "y" "l") 0) (("g" "eh" "rh") 0))))
(lex.add.entry '("vé" nil ((("v" "e") 0))))
(lex.add.entry '("vélo" nil ((("v" "e") 0) (("l" "o") 0))))
(lex.add.entry '("vérification" nil ((("v" "e") 0) (("rh" "i") 0) (("f" "i") 0) (("k" "a") 0) (("s" "j" "ohn") 0))))
(lex.add.entry '("véritable" nil ((("v" "e") 0) (("rh" "i") 0) (("t" "a" "b" "l") 0))))
(lex.add.entry '("vêtement" nil ((("v" "eh" "t") 0) (("m" "ahn") 0))))
(lex.add.entry '("y_a" nil ((("i") 0) (("a") 0))))
(lex.add.entry '("z_y" nil ((("z" "i") 0))))
(lex.add.entry '("zéro" nil ((("z" "e") 0) (("rh" "o") 0))))
(lex.add.entry '("à_moins_que" nil ((("a") 0) (("m" "w" "ehn")0) (("k" "ae") 0))))
(lex.add.entry '("à_tous_égard" nil ((("a") 0) (("t" "u") 0) (("z" "e") 0) (("g" "a" "rh") 0))))
(lex.add.entry '("âge" nil ((("a" "zh") 0))))
(lex.add.entry '("ça" nil ((("s" "a") 0))))
(lex.add.entry '("è" nil ((("eh") 0))))
(lex.add.entry '("èle" nil ((("eh" "l") 0))))
(lex.add.entry '("ème" nil ((("eh" "m") 0))))
(lex.add.entry '("ène" nil ((("eh" "n") 0))))
(lex.add.entry '("ère" nil ((("eh" "rh") 0))))
(lex.add.entry '("é" nil ((("e") 0))))
(lex.add.entry '("échala" nil ((("e") 0) (("sh" "a") 0) (("l" "a") 0))))
(lex.add.entry '("éclate" nil ((("e") 0) (("k" "l" "a" "t") 0))))
(lex.add.entry '("économique" nil ((("e") 0) (("k" "oh") 0) (("n" "o") 0) (("m" "i" "k") 0))))
(lex.add.entry '("écouté" nil ((("e") 0) (("k" "u") 0) (("t" "e") 0))))
(lex.add.entry '("écri" nil ((("e") 0) (("k" "rh" "i") 0))))
(lex.add.entry '("écrivain" nil ((("e") 0) (("k" "rh" "i") 0) (("v" "ehn") 0))))
(lex.add.entry '("égard" nil ((("e") 0) (("g" "a" "rh") 0))))
(lex.add.entry '("églogue" nil ((("e") 0) (("g" "l" "oh" "g") 0))))
(lex.add.entry '("élevé" nil ((("e" "l") 0) (("v" "e") 0))))
(lex.add.entry '("éliminés" nil ((("e") 0) (("l" "i") 0) (("m" "i") 0) (("n" "e") 0))))
(lex.add.entry '("élision" nil ((("e") 0) (("l" "i") 0) (("z" "j" "ohn") 0))))
(lex.add.entry '("éloge" nil ((("e") 0) (("l" "oh" "zh") 0))))
(lex.add.entry '("émile" nil ((("e") 0) (("m" "i" "l") 0))))
(lex.add.entry '("ému" nil ((("e") 0) (("m" "y") 0))))
(lex.add.entry '("énoncé" nil ((("e") 0) (("n" "oh") 0) (("s" "e") 0))))
(lex.add.entry '("énorme" nil ((("e") 0) (("n" "oh" "rh" "m") 0))))
(lex.add.entry '("épilogua" nil ((("e") 0) (("p" "i") 0) (("l" "oh") 0) (("g" "a") 0))))
(lex.add.entry '("épiloguiez" nil ((("e") 0) (("p" "i") 0) (("l" "oh") 0) (("g" "j" "e") 0))))
(lex.add.entry '("époque" nil ((("e") 0) (("p" "oh" "k") 0))))
(lex.add.entry '("épousa" nil ((("e") 0) (("p" "u") 0) (("z" "a") 0))))
(lex.add.entry '("épreuve" nil ((("e") 0) (("p" "rh" "oe" "v") 0))))
(lex.add.entry '("étaite" nil ((("e") 0) (("t" "eh" "t") 0))))
(lex.add.entry '("étale" nil ((("e") 0) (("t" "a" "l") 0))))
(lex.add.entry '("étant" nil ((("e") 0) (("t" "ahn") 0))))
(lex.add.entry '("éternité" nil ((("e") 0) (("t" "eh" "rh") 0) (("n" "i") 0) (("t" "e") 0))))
(lex.add.entry '("étonnés" nil ((("e") 0) (("t" "oh") 0) (("n" "e") 0))))
(lex.add.entry '("étrange" nil ((("e") 0) (("t" "rh" "ahn" "zh") 0))))
(lex.add.entry '("étrangement" nil ((("e") 0) (("t" "rh" "ahn" "zh") 0) (("m" "ahn") 0))))
(lex.add.entry '("étude" nil ((("e") 0) (("t" "y" "d") 0))))
(lex.add.entry '("étudié" nil ((("e") 0) (("t" "y") 0) (("d" "j" "e") 0))))
(lex.add.entry '("étè" nil ((("e") 0) (("t" "eh") 0))))
(lex.add.entry '("été" nil ((("e") 0) (("t" "e") 0))))
(lex.add.entry '("ête" nil ((("eh" "t") 0))))
(lex.add.entry '("être" nil ((("eh" "t" "rh") 0))))
(lex.add.entry '("être_ci" nil ((("eh" "t" "rh") 0) (("s" "i") 0))))
(lex.add.entry '("o" NOM ((("o") 0))))
(lex.add.entry '("i" NOM ((("i") 0))))
(lex.add.entry '("hache" NOM ((("hs" "a" "sh") 0))))
(lex.add.entry '("majuscule" ADJ ((("m" "a") 0) (("zh" "y" "s") 0) (("k" "y" "l") 0))))
(lex.add.entry '("veau" nil ((("v o") 0))))
(lex.add.entry '("épiloguâtes" nil (((e )0) ((p  i )0) ((l  oh )0) (( g a  t )0)))); incorrect
(lex.add.entry '("alexandre" nil (((a) 0) ((l e k)0) ((s ahn d rh)0)))) 
(lex.add.entry '("d_alexandre" nil (((d a) 0) ((l e k)0) ((s ahn d rh)0)))) 
(lex.add.entry '("jeun" nil ((( "zh" "oen" ) 0))))
(lex.add.entry '("versus" nil ((( "v" "eh" "rh") 0) (("s" "y" "s") 0))))
(lex.add.entry '("c_en" nil ((( "s" "ahn") 0))))
(lex.add.entry '("cinq_ADJ:num" ADJ:num ((( "s" "ehn" "k") 0))))
(lex.add.entry '("pater" NOM ((( "p" "a") 0) (("t" "eh" "rh") 0))))
(lex.add.entry '("manière" nil ((( "m" "a") 0) (("jg" "eh" "rh") 0))))
(lex.add.entry '("sept" nil ((("s" "eh" "t") 0)))); et non pas un s e p
(lex.add.entry '("français" nil ((("f" "rh" "ahn") 0) (("s" "eh") 0)))); eh et non e
(lex.add.entry '("livre_ci" nil ((("l" "i") 0) (("v" "rh" "ae")0) (("s" "i") 0))))
(lex.add.entry '("lui" nil ((("l" "hw" "i") 0))))
(lex.add.entry '("neuf" NOM ((("n" "oe" "f")0)))) 
;(lex.add.entry '("
;; pas besoin(lex.add.entry '("minuscule" nil ((( "m" "i") 0) (("n" "y" "s") 0) (("k" "y" "l") 0)))); et non pas
(lex.add.entry '("ferment_NOM" NOM (((f eh rh )0) ((m ahn)0)))) 
(lex.add.entry '("C_NOM" NOM ((( "s" "e") 0) (("m" "a") 0) (("zh" "y" "s") 0) (("k" "y" "l") 0))))
(lex.add.entry '("c_NOM" NOM ((( "s" "e") 0) (("m" "i") 0) (("n" "y" "s") 0) (("k" "y" "l") 0))))
(lex.add.entry '("soixante_et_unième" nil ((( "s" "w" "a") 0) (( "s" "ahn") 0) (("t" "e") 0) (("y") 0) (("n" "j" "eh" "m")0)))) ; et non pas "s" "w" "a" "g" "z" "ahn" "t")
(lex.add.entry '("soixante_et_onze" nil ((( "s" "w" "a") 0) (( "s" "ahn") 0) (("t" "e") 0) (("ohn" "z") 0)))) ; et non pas "s" "w" "a" "g" "z" "ahn" "t")
(lex.add.entry '("soixante" nil ((( "s" "w" "a") 0) (( "s" "ahn" "t") 0)))); et non pas "s" "w" "a" "g" "z" "ahn" "t")
(lex.add.entry '("cigarette" nil ((("s" "i") 0) (("g" "a") 0) (("rh" "eh" "t") 0)))); et non pas rh eh
(lex.add.entry '("portion" NOM ((("p" "oh" "rh")0) (("s" "j" "ohn")0)))) ; pour distinguer de "portions" "VER"
(lex.add.entry '("russe" nil ((("rh" "y" "s")0)))) ; et non pas ss
(lex.add.entry '("vingt" nil ((("v" "ehn") 0)))) ; et non v ehn g t
(lex.add.entry '("vingt_et_une" nil ((("v" "ehn")0) (("t" "e") 0) (("y" "n") 0))))
(lex.add.entry '("cinq" NOM ((("s" "ehn" "k") 0)))); et non pas s i k
; à mettre dans refractaire !
(lex.add.entry '("volt" nil ((("v" "oh" "l" "t") 0)))) ; et non v oh l
(lex.add.entry '("colt" nil ((("k" "oh" "l" "t") 0)))) ; et non v oh l
; non à cause du s final
;(lex.add.entry '("biais" nil ((("b" "j" "eh") 0)))); et non pas b eh
(lex.add.entry '("biai" nil ((("b" "j" "eh") 0)))); et non pas b eh
(lex.add.entry '("chouette" nil ((("sh" "u")0) (("eh" "t") 0)))); et non pas sh w 
; et les autres formes ?
(lex.add.entry '("s_empêtre" nil ((("s" "ahn") 0) (("p" "eh""t" "rh") 0)))); et non ahn n 
(lex.add.entry '("s_emmêle" nil ((("s" "ahn") 0) (("m" "eh" "l") 0)))); et non s a
(lex.add.entry '("sera_t_elle" nil ((("s" "ae")0) (("rh" "a") 0) (("t" "eh" "l") 0)))) ; et non s rh a
; NON(lex.add.entry '("sera-t_elle" nil ((("s" "rh" "a") 0) (("t" "eh" "l") 0)))) ; et non s rh a
; NON PAS(lex.add.entry '("sera-t_il" nil ((("s" "ae")0) (("rh" "a") 0) (("t" "i" "l") 0)))) ; et non s rh a
; mais suivant en celà le poslex 
(lex.add.entry '("sera_t_il" nil ((("s" "ae")0) (("rh" "a") 0) (("t" "i" "l") 0)))) ; et non s rh a
(lex.add.entry '("faisiez-vous" nil ((("f" "ae") 0) (("z" "j" "e")0) (("v" "u") 0)))) ; et non pas "z" "j" "v" "u
(lex.add.entry '("rendez-vous" nil (((r ahn)0)((d e)0) ((v u)0)))); VER ou NOM
(lex.add.entry '("dis-moi" nil (((d i)0)((m w a)0))))
(lex.add.entry '("dis-toi" nil (((d i)0)((t w a)0))))
(lex.add.entry '("." SENT nil))
(lex.add.entry '("bon" nil ((("b" "ohn")0))))
; au choix
(lex.add.entry '("ai" nil ((("eh")0))))
;(lex.add.entry '("ai" nil ((("e")0))))
(lex.add.entry '("fût" nil ((( "f" "y")0))))
(lex.add.entry '("vint" nil (((v ehn)0)))) 
(lex.add.entry '("quelque_ADJ:ind" ADJ:ind ((("k" "eh" "l")0) (("k" ae) 0))))
;(lex.add.entry '("ou_" nil (((u)0))))
(lex.add.entry '("s_il_PRO:per" "PRO:per" (((s i l)0))))
(lex.add.entry '("de_PRE" PRE (((d ae)0))))
(lex.add.entry '("De_PRE" PRE (((d ae)0))))
(lex.add.entry '("de_nil" nil (((d ae)0))))
(lex.add.entry '("zan_nil" nil (((z ahn)0))))
;(lex.add.entry '(mnémonique
;(lex.add.entry '("abdomen_" nil (((a b)0)((d oh)0)((m eh n)0)))); cérumen
;(lex.add.entry '("dolmen_nil" nil (((d oh l)0)((m eh n)0))))
;;(lex.add.entry '(barman, dan, doberman
;;(lex.add.entry '(clergyman
; ben ADV b5
; amer, doux-amer, casher
; fier ADJ ; homo VER
;; on table sur des ADJ en er se prononçant 
; cher ADJ et ADV cyber super  khmer outremer
; amer ADJ amER
; diver ADJ divER
; tier ADJ tjER
; ter alter
; et en NOM
; aster NC astER
; bulldozer NC byldozER
; challenger NC Sal@ZER
; enfer NC @fER
; enver NC @vER
; fer NC fER
; flipper NC flip9R
; gangster NC g@gstER
; hamster NC amstER
; hiver NC ivER
; mer NC mER
; poster NC postER
; reporter NC R*poRtER
; rever NC R*vER
; revolver NC RevolvER
; rocker NC Rok9R
; scooter NC skut9R
; skipper NC skip9R
; starter NC staRtER
; tier NC tjER
; traver NC tRavER
; univer NC ynivER
; ver NC vER
; printemp NC pR5t@
; prof NC pRof
;hareng NC aR@
; footing NC futiG
; rugby NC Rygbi
; football NC futbOl
; footballeur NC futbOl9R
; kart NC kaRt
; kirghize NC kiRgiz
; propolis NC pRopolis
; shampoing NC S@pw5
; shampooing NC S@pw5 
; sir NC siR
 
; amaryllis NC amaRilis
; tamaris NC tamaRis
; tournevis NC tuRn*vis
; volubilis NC volybilis
; almanach nil  almana
; avec PRE avEk
; chez PRE Se 
; envers PRE @vER
; dans
; dan
; auxquel PRO OkEl
; desquel PRO dEkEl
; mémento nil mem5tO
; et CON e
; eu nil y
; mais CON mE
(lex.add.entry '("hélas" nil (((e)0)((l a)0)))); hélas ONO
; lts mal entrainée /!\  TODO check
;(lex.add.entry '("absurde_nil" nil ((("a" p)0)(("s" "y" "rh" "d")0))))
;(lex.add.entry '("approvisionnement_nil" nil ((("a")0)(("p" "rh" "oh")0)(("v" "i")0)(("z" "j" "oh" "n")0)(("m" "ahn")0))))
;(lex.add.entry '("paiera_nil" nil ((("p" "eh")0)((rh a)0))))
;(lex.add.entry '("bataille_nil" nil ((("b" "a")0)(("t" "a" "j")0))))
; tous les Jean_ !
; pas ((("zh" "i")0)(("ahn")0)(("p" "o" "l")0))
; en attendant déclaration POS dans freeling
(lex.add.entry '("Jean_Paul_nil" nil ((("zh" "ahn")0)(("p" "oh" "l")0))))
; *il avec l muet
(lex.add.entry '("gentil" nil (((zh ahn)0)((t i)0))))
; sur les mots *ien-(voyelle) ahn à la place de ehn
; croyance mauvaise décomposition ? TODO
(lex.add.entry '("tech_nil" nil (((t eh k)0))))
(lex.add.entry '("mauvais" nil (((m oh) 0)((v eh) 0))))
                     ;;;; ================= TODO =========
; TODO revoir "VER" radical
;; ajout de wordroot pour gérondif ?
; o versus oh
(lex.add.entry '("hydrogène_nil" nil (((i)0)((d rh o)0)((zh eh n)0))))
(lex.add.entry '("hydroélectricité_nil" nil (((i)0)((d rh o)0)((e)0)((l eh k)0)((t rh i)0)((s i)0)(("t" "e")0))))
(lex.add.entry '("l_hydroélectricité_nil" nil (((l i)0)((d rh o)0)((e)0)((l eh k)0)((t rh i)0)((s i)0)(("t" "e")0))))
; exemple de mauvais slice word ?
;(lex.add.entry '("entremêle_nil" nil (((ahn)0)((t rh ae)0)((m eh l)0))))
(lex.add.entry '("absurdité_nil" nil ((("a" "p")0)(("s" "y" "rh")0)(("d" "a")0)(("t" "e")0))))
(lex.add.entry '("objet_nil" nil (((oh b)0)((zh eh)0))))
(lex.add.entry '("subtile_nil" nil ((("s" "y" p)0)(("t" "i" "l")0))))
(lex.add.entry '("objectif_nil" nil (((oh b)0)((zh eh k)0)((t i f)0))))
(lex.add.entry '("l_objectif_nil" nil (((l oh b)0)((zh eh k)0)((t i f)0))))
(lex.add.entry '("d_objectif_nil" nil (((d oh b)0)((zh eh k)0)((t i f)0))));
(lex.add.entry '("nagoya_nil" nil ((("n" "a")0)(("g" "w" "a")0)(("j" "a")0))))
(lex.add.entry '("croyance_nil" nil (((k rh w a)0)((j ahn s)0))))
(lex.add.entry '("suggéré_nil" nil (((s y g)0)((zh e)0)((rh e)0))))
(lex.add.entry '("suggère_nil" nil (((s y g)0)((zh eh rh)0))))
(lex.add.entry '("également_nil" nil (((e)0)((g a l)0)((m ahn)0))))
; pb lié à netlex_syllabify avec un mot contenant la *lettre* - TODO faisable
(lex.add.entry '("ouvre bouteille_nil" nil (((u)0)((v rh ae)0)(("b" "u")0)(("t" "eh" "j")0))))
(lex.add.entry '("chemin-là_nil" nil ((("sh" "ae")0)(("m" "ehn")0)(("l" "a")0))))
; confusion "hw" 
;;; tempo(lex.add.entry '("suis_nil" nil (((s hw i)0))))
(lex.add.entry '("lui_nil" nil (((l hw i)0))))
(lex.add.entry '("ennuyè" nil ((("ahn")0)(("n" "hw" i)0)(("j" "eh")0))))
(lex.add.entry '("ennuyè_nil" nil ((("ahn")0)(("n" "hw" i)0)(("j" "eh")0))))
(lex.add.entry '("ensuite_nil" nil (((ahn)0)((s "hw" "i" "t")0))))
; les ch / k
(lex.add.entry '("technique_nil" nil (((t eh k)0)((n i k)0))))
(lex.add.entry '("chélidoine_nil" nil (((k e)0)((l i)0)((d w a n)0))))
(lex.add.entry '("chié_nil" nil (((sh j e)0))))
(lex.add.entry '("crain_nil" nil (((k rh ehn)0))))
; les qu k/kw
(lex.add.entry '("quatorze_nil" nil (((k a)0)((t oh rh z)0))))
;termunaison ?
(lex.add.entry '("fixant_nil" nil (((f i k)0)((s ahn)0))))
(lex.add.entry '("bien_être_nil" nil (((b j ehn)0)((n eh t rh)0))))
(lex.add.entry '("flot_nil" nil (((f l o)0)))) ; pas u
(lex.add.entry '("art_nil" nil (((o rh)0))))
(lex.add.entry '("z_en_nil" nil (((z ahn)0))))
(lex.add.entry '("syndicat_nil" nil (((s ehn)0)((d i)0)((k a)0))))
(lex.add.entry '("syndic_nil" nil (((s ehn)0)((d i k)0))))
(lex.add.entry '("pays_nil" nil (((p e)0)((i)0)))) ;
(lex.add.entry '("mot_nil" nil (((m o)0))))
; cause chgt de pt de vue lts
(lex.add.entry '("enthousiasme_nil" nil ((("ahn")0)(("t" "u")0)(("z" "j" "a" "s" "m")0))))
; voir alternative extension de wordroot
;;(lex.add.entry '("voteron_nil" nil (((v oh)0)((t rh ohn)0))))
;;(lex.add.entry '("travailleron_nil" nil (((t rh a)0)((v a j)0)((rh ohn)0))))
; p u rh rh oh g m ahn t e ; vocalic abusif ?
(lex.add.entry '("pour_nil" nil (((p u rh)0))))
; homo via lieavec pause "cinq" "six" "huit" "dix" "tous"; "plus" ? plus encore z ou s ? 
;(lex.add.entry '("cinqk_ADJ:num" "ADJ:num" (((s ehn k)0))))
;(lex.add.entry '("dixs_ADJ:num" "ADJ:num" (((d i s)0))))
;(lex.add.entry '("dixs_nil" nil ((("d" "i" "s")0))))
;(lex.add.entry '("dixs" "ADJ:num" (((d i s)0))))
;(lex.add.entry '("dix_s" "ADJ:num" (((d i s)0))))
;(lex.add.entry '("huitt_ADJ:num" "ADJ:num" ((( "hw" "i" "t")0))))
;(lex.add.entry '("huit_huitt_ADJ:num" "ADJ:num" ((( "hw" "i" "t")0))))
;(lex.add.entry '("huitt" "ADJ:num" ((( "hw" "i" "t")0))))
;(lex.add.entry '("sixs_ADJ:num" "ADJ:num" (((s i s)0))))
(lex.add.entry '("touss_ADJ:ind" "ADJ:ind" (((t u s)0))))
; homographes via cart tree
; même POS
;(lex.add.entry '("fils" "fis" (((f i s)0))))
(lex.add.entry '("fils_fis_nil" nil (((f i s)0))))
(lex.add.entry '("fils_fil_nil" nil (((f i l)0))))
; reste des cas non vus dans token
(lex.add.entry '("fils_nil" nil (((f i s)0))))
; TODO
(lex.add.entry '("convient_vie" nil (((k ohn)0)((v j ehn)0))))
(lex.add.entry '("convie_vie" nil (((k ohn)0)((v i)0))))
(lex.add.entry '("convie" nil (((k ohn)0)((v i)0))))
(lex.add.entry '("convient" nil (((k ohn)0)((v j ehn)0))))
(lex.add.entry '("convient_0" nil (((k ohn)0)((v j ehn)0))))
(lex.add.entry '("sers" nil (((s eh rh)0))))
(lex.add.entry '("perds" nil ((( p eh rh)0))))
(lex.add.entry '("perd" nil ((( p eh rh)0))))
(lex.add.entry '("ment" nil ((( m ahn)0))))
(lex.add.entry '("dément" nil (((d e)0)((m ahn)0))))
(lex.add.entry '("pesè" nil (((p ae)0)((z eh)0))))
(lex.add.entry '("cinq_cinqq_ADJ:num" "ADJ:num" (((s ehn k)0))))
;(lex.add.entry '("cinq_cinqk_ADJ:num" "ADJ:num" (((s ehn k)0))))
;(lex.add.entry '("cinq" "cinqk" (((s ehn k)0))))
(lex.add.entry '("cinq_cinqq_nil" nil (((s ehn k)0))))
(lex.add.entry '("cinq_cinqq_PRO:ind" "PRO:ind" (((s ehn k)0)))); neut_book_s04_0352
(lex.add.entry '("dix_dis_ADJ:num" "ADJ:num" (((d i s)0))))
(lex.add.entry '("dix_dis_nil" nil (((d i s)0))))
;(lex.add.entry '("dix" "dis" (((d i s)0))))
(lex.add.entry '("dix_dis" nil (((d i s)0))))
(lex.add.entry '("dix_di_ADJ:num" "ADJ:num" (((d i s)0))))
(lex.add.entry '("dix_di_nil" nil (((d i s)0))))
(lex.add.entry '("huit_huitt" "ADJ:num" ((( "hw" "i" "t")0))))
(lex.add.entry '("huit_huitt" "NOM" ((( "hw" "i" "t")0))))
; freeling amendé
;(lex.add.entry '("huit_huitt" "CON" ((( "hw" "i" "t")0)))); au cas où ? huit neuf sans ponctuation
(lex.add.entry '("six_sixs_ADJ:num" "ADJ:num" (((s i s)0))))
(lex.add.entry '("six_sixs_nil" nil (((s i s)0))))
; fre_ONO_homo et fre_NAM_homo_tab
(lex.add.entry '("spa_nil" nil (((s p a)0))))
; NON acronym(lex.add.entry '("SPA_NAM" "NAM" (((s eh s)0)((p e)0)((a)0))))
(lex.add.entry '("marc_nil" nil ((("m" a rh)0))))
; Duras
; par POS
;(lex.add.entry '("affluent_" nil (((a)0)(("f" "l" "hw" ahn)0))))
(lex.add.entry '("afflue_nil" nil (((a)0)(("f" "l" "y")0))))
;(lex.add.entry '("as_nil" nil (((a s)0))))
(lex.add.entry '("ben_nil" nil (((b ehn)0))))
(lex.add.entry '("bus_VER" VER ((("b" "y")0))))
(lex.add.entry '("bus_NOM" NOM ((("b" "y" "s")0))))
(lex.add.entry '("autobus_nil" nil ((( "o") 0) ((t o)0) (("b" "y" "s")0))))
(lex.add.entry '("conte_nil" nil ((("k" "ohn" "t")0))))
(lex.add.entry '("couvent_" nil ((("k" "u")0)(("v" ahn)0)))) ;; !
(lex.add.entry '("couve_nil" nil ((("k" "u" "v")0))))
(lex.add.entry '("coïncide_nil" nil (((k o)0)((ehn)0)((s i d)0))))
(lex.add.entry '("est_nil" nil ((("eh")0))))
(lex.add.entry '("excelle_nil" nil ((("eh" "k")0)(("s" "eh" "l")0))))
(lex.add.entry '("fiat_nil" nil ((("f" "j" "a" "t")0))))
;(lex.add.entry '("fiat_VER" "NOM" ((("f" "j" "a")0)))) ; ?
(lex.add.entry '("fié_nil" nil ((("f" "j" "e")0))))
(lex.add.entry '("indiffére_nil" nil ((("ehn")0)(("d" "i")0)(("f" "i")0)(("f" "eh" "rh")0))))
(lex.add.entry '("interviewé_nil" nil ((("ehn")0)(("t" "eh" "rh")0)(("v" "j" "u")0)(("v" "e")0))))
(lex.add.entry '("mat_nil" nil ((("m" a)0))))
(lex.add.entry '("parent_" nil (((p a)0)((rh ahn)0))))
(lex.add.entry '("pare_nil" nil (((p a rh)0))))
; particule nobiliaire
; token simplifié M. de La fontaine
; donne NAM pour de
(lex.add.entry '("de_nil" nil (((d ae)0)))) 
;;typo majuscule
; à ce propos
; Egalement
; E
; sigle/acronyme 
(lex.add.entry '("ANTEN_nil" nil(((ahn)0)((t eh n)0))))
; OAS
; AFP
; TODO réactualiser liaisons muettes gérées dans postlex ?
; TODO réactualiser toujours là ? 
;; liaisons
;(lex.add.entry '("ﬂ_LIA" "LIA" nil)) ; absence de liaison 
;(lex.add.entry '("t_ﬂ_LIA" "LIA" (((t)0)))) ; 20h
;(lex.add.entry '("aﬂt_LIA" "LIA" (((t)0)))) ; va-t-en; ira-t-il
;(lex.add.entry '("cﬂe_LIA" "LIA" (((k)0)))) ; croc-en-jambe
;(lex.add.entry '("dﬂi_LIA" "LIA" (((t)0)))) ; rend-il
;(lex.add.entry '("dﬂl_LIA" "LIA" nil)) ; rend-le 
;(lex.add.entry '("dﬂo_LIA" "LIA" (((t)0)))); rend-on
;(lex.add.entry '("eﬂ2_LIA" "LIA" nil)) ; qu'est-ce 
;(lex.add.entry '("eﬂ_LIA" "LIA" nil)) ; aime-les
;(lex.add.entry '("eﬂm_LIA" "LIA" nil)) ; passe-moi
;(lex.add.entry '("eﬂt_LIA" "LIA" (((t)0)))) ; va-t-en
;(lex.add.entry '("fﬂl_LIA" "LIA" nil)) ; châteauneuf-la-forêt
;(lex.add.entry '("iﬂ2_LIA" "LIA" nil)) ; dites-moi
;(lex.add.entry '("iﬂj_LIA" "LIA" nil)) ; dirais-je
;(lex.add.entry '("k_LIA" "LIA" (((k)0)))); hopefully given via lts
;(lex.add.entry '("lﬂ2_LIA" "LIA" nil)) ; va-t'il
;(lex.add.entry '("nﬂ2_LIA" "LIA" nil)) ; donnez-en ** un , dit-t-on ** du
;(lex.add.entry '("s_ﬂ_LIA" "LIA" (((s)0)))) ; dix
;(lex.add.entry '("sﬂ2_LIA" "LIA" nil)) ; donnez-en ** un 
;(lex.add.entry '("sﬂe_LIA" "LIA" (((z)0)))) ; donnes-en
;(lex.add.entry '("sﬂj_LIA" "LIA" nil)) ; dis-je
;(lex.add.entry '("sﬂl_LIA" "LIA" nil)) ; rends-le
;(lex.add.entry '("sﬂm_LIA" "LIA" nil)) ; dites-moi
;(lex.add.entry '("sﬂn_LIA" "LIA" nil)) ; rations-nous
;(lex.add.entry '("sﬂt_LIA" "LIA" nil)) ; penses-tu
;(lex.add.entry '("sﬂv_LIA" "LIA" nil)) ; êtes-vous
;(lex.add.entry '("sﬂy_LIA" "LIA" (((z)0)))) ; vas-y
;(lex.add.entry '("tﬂc_LIA" "LIA" nil)) ; est-ce
;(lex.add.entry '("tﬂe_LIA" "LIA" (((t)0)))) ; saurait-elle
;(lex.add.entry '("tﬂi_LIA" "LIA" (((t)0)))) ; devient-il
;(lex.add.entry '("tﬂl_LIA" "LIA" nil)) ; 
;(lex.add.entry '("tﬂo_LIA" "LIA" (((t)0)))) ; aiment-on inc
;(lex.add.entry '("uﬂ2_LIA" "LIA" nil)) ; donnez-en ** un 
;(lex.add.entry '("x_LIA" "LIA" (((z)0)))); hopefully given via lts
;(lex.add.entry '("xﬂt_LIA" "LIA" nil)) ; veux-tu
;(lex.add.entry '("yﬂ2_LIA" "LIA" nil)) ; allons-y 
;(lex.add.entry '("yﬂl_LIA" "LIA" nil)) ; issy-les-moulineaux
;(lex.add.entry '("zﬂe_LIA" "LIA" (((z)0)))) ; donnez-en
;(lex.add.entry '("zﬂl_LIA" "LIA" nil)) ; donnez-lui
;(lex.add.entry '("zﬂm_LIA" "LIA" nil)) ; donnez-moi
;(lex.add.entry '("zﬂv_LIA" "LIA" nil)) ; avez-vous
;(lex.add.entry '("zﬂy_LIA" "LIA" (((z)0)))) ; voyez-y
;(lex.add.entry '("éﬂl_LIA" "LIA" nil)) ; joué-les-tours
; ; 
;; caractères
;; token.letter_pos nn by default we keep this default
;; Basic punctuation must be in with nil pronunciation
;; pour french_parse_charlist (les minuscules suffisent dans le lexicon)
; TODO réactualiser
;; but we have troubles with lex.lookup if homononyms
;; like "l" and add a table without_accent_letter_tab
;; dans INST_LANG_token_to_words_lists
; ex : ("T" . ("té")) 
; todo abandon des nn au profit des letter_tab confusion !
; même démarche pour sampa !
; TODO vérifier !
; introduction délibérée d'une pause
; marche plus
;(lex.add.entry '("_ﬂ_punc" "punc" (((pau)0))))
;(lex.add.entry '("_ﬂ1_punc" "punc" (((pau)0))))
;(lex.add.entry '("_ﬂ" "nil" (((pau)0))))
; faire un choix argumenté épelé ou prononcé ! voir spell
; lettres à mettre dans le dico immuable 
; chgt pour dollar n'est plus un symbol
; TODO etc.
(lex.add.entry '(clêt_NOM "NOM" (((p u)0))))
(lex.add.entry '("%_nil" nil (((p u rh)0)((s ahn)0))))
;(lex.add.entry '("M_NAM" "NAM" (((eh m)0)))); homo monsieur
;; grammar 
(lex.add.entry '("afin_de" PRE (((a)0)((f ehn)0)((d ae)0)))) ; si dans liste de locutions /!\ addenda ou revoir règle de liaisons
(lex.add.entry '("afin_que" CON (((a)0)((f ehn)0)((k ae)0)))); ; si dans liste de locutions /!\ addenda
; géré spécial locution dans netlex peut-être à changer
;(lex.add.entry '("afin_qu_ici_ADV" CON  (((a)0)((f ehn)0)((k i)0)((s i)0)))
(lex.add.entry '("a_nil" nil (((a)0))));
(lex.add.entry '("è_nil" nil (((eh)0))));
;(lex.add.entry '("c_est_nil" nil (((s eh)0))))
(lex.add.entry '("c_est" nil (((s a)0))))
(lex.add.entry '("est" nil (((eh)0))))
(lex.add.entry '("n_est_pas_VER" "VER" ((("n" "eh")0)(("p" "a")0))))
(lex.add.entry '("est_AUX" AUX (((eh)0))))
(lex.add.entry '("est_NOM" NOM (((eh s t)0))))
(lex.add.entry '("s_est_nil" nil (((s eh)0))))
(lex.add.entry '("s'est_nil" nil (((s eh)0))))
(lex.add.entry '("t_es" nil (((t eh)0))))
(lex.add.entry '("c_étè" nil (((s e)0)((t eh)0))))
(lex.add.entry '("c_étaient" nil (((s e)0)((t eh)0))))
(lex.add.entry '("s_était_nil" nil (((s e)0)((t eh)0))))
(lex.add.entry '("s_étaient_nil" nil (((s e)0)((t eh)0))))
(lex.add.entry '("s'était_nil" nil (((s e)0)((t eh)0))))
(lex.add.entry '("s'étaient_nil" nil (((s e)0)((t eh)0))))
; y compris populaire
(lex.add.entry '("c_nest_nil" nil (((s n eh)0))))
(lex.add.entry '("c_étè_nil" nil (((s e)0)((t eh)0))));
(lex.add.entry '("cette_nil" nil (((s eh t)0))))
(lex.add.entry '("dans_PRE" PRE (((d ahn)0))))
(lex.add.entry '("de_fait_nil" nil (((d ae)0)((f eh)0))))
(lex.add.entry '("des_nil" nil (((d e)0))))
(lex.add.entry '("en_nil" nil (((ahn)0))))
(lex.add.entry '("n_en_nil" nil (((n ahn)0))))
(lex.add.entry '("en_nil" nil (((ahn)0)))) ; erreur POS je t'en prie POS VER
(lex.add.entry '("en_effet_nil" nil (((ahn)0)((n e)0)((f eh)0))))
(lex.add.entry '("j_ai_nil" nil (((zh eh)0)))) ; important
(lex.add.entry '("n_ai_nil" nil (((n e)0)))) ; important sinon core dump neut_parl_s01_0266
(lex.add.entry '("j_aie_nil" nil (((zh eh)0)))) ; important sinon core dump neut_parl_s01_0266
(lex.add.entry '("j_ai_nil" nil (((zh eh)0)))) ; important sinon pas de zh
(lex.add.entry '("j_en_nil" nil (((zh ahn)0))))
(lex.add.entry '("j_irai_nil" nil (((zh i)0)((rh e)0)))) ; important
(lex.add.entry '("j_irais_nil" nil (((zh i)0)((rh eh)0)))) ; important
(lex.add.entry '("j_y_nil" nil ((("zh" "i")0)))); à la place de j'y vais = je vais
(lex.add.entry '("j_y_nil" nil ((("zh" "i")0))))
(lex.add.entry '("je_nil" nil ((("zh" "ae")0))))
(lex.add.entry '("jusque_nil" nil  (((zh y s)0)((k ae)0))))
; refact
(lex.add.entry '("jusqu_nil" nil (((zh y s k)0))))
(lex.add.entry '("jusqu_au_nil" nil (((zh y s)0)((k o)0))))
;; BUG àù LTS
(lex.add.entry '("où_PRO:rel" "PRO:rel" (((u)0))))
(lex.add.entry '("où_PRO:int" "PRO:rel" (((u)0))))
(lex.add.entry '("l_ai_nil" nil (((l eh)0)))) ; important
(lex.add.entry '("l_ai_nil" nil (((l eh)0)))) ; important sinon core dump
(lex.add.entry '("l_une_nil" nil ((("l" "y" "n")0))))
(lex.add.entry '("l_un_nil" nil ((("l" "oen")0))))
(lex.add.entry '("l_on_nil" nil ((("l" "ohn")0))))
(lex.add.entry '("d_où_PRO:rel" "PRO:rel" (((d u)0))))
(lex.add.entry '("le_ART:def" "ART:def" ((("l" "ae")0))))
; ; bugglet de POSLEX du L' initial
; doit pouvoir se régler au niveau de norm
; en attendant modifier les prompts .. 
; pour POS correct du mot suivant
; reste le pb de syllabification {(0 l)}{(0 ahn)}
;(lex.add.entry '("L_ART:def" "ART:def" ((("l")0)))) 
(lex.add.entry '("le_nil" nil ((("l" "ae")0))))
(lex.add.entry '("les_nil" nil ((("l" "e")0))))
(lex.add.entry '("leur_nil" nil ((("l" "oe" "rh")0))))
(lex.add.entry '("ma_nil" nil ((("m" "a")0))))
(lex.add.entry '("me_nil" nil (((m "ae")0))))
(lex.add.entry '("mes_nil" nil ((("m" "e")0))))
(lex.add.entry '("mon_nil" nil ((("m" "ohn")0))))
(lex.add.entry '("n_est" nil (((n eh)0))))
(lex.add.entry '("n_est_ce_pas_nil" nil ((("n" "eh" "s")0)(("p" "a")0))))
(lex.add.entry '("ne_nil" nil (((n ae)0))))
(lex.add.entry '("nous_nil" nil (((n u)0))))
(lex.add.entry '("nous_PRO:per" "PRO:per" (((n u)0))))
(lex.add.entry '("nos_nil" nil ((("n" "o")0))))
(lex.add.entry '("notre_nil" nil ((("n" "oh" "t" "rh")0))));(lex.add.entry '("notre_ADJ:pos" "ADJ:pos" ((("n" "oh")0)(("t" "rh" ae)0))))
;(lex.add.entry '("notre_ADJ:pos" "ADJ:pos" ((("n" "oh")0)(("t" "rh" "ae")0))));(lex.add.entry '("notre_ADJ:pos" "ADJ:pos" ((("n" "oh")0)(("t" "rh" ae)0))))
(lex.add.entry '("puisque_nil" nil  (((p "hw" i s)0)((k ae)0))))
(lex.add.entry '("parce_que_nil" nil (((p a rh)0)((s ae)0)((k ae)0))))
(lex.add.entry '("alors_que_nil" nil (((a)0)((l oh rh)0)((k ae)0))))
(lex.add.entry '("pendant_que_nil" nil  (((p ahn)0)((d ahn)0)((k ae)0))))
(lex.add.entry '("alors_nil" nil (((a)0)((l oh rh)0))))
(lex.add.entry '("pointe_nil" nil (((p w ehn t)0))))
(lex.add.entry '("point_nil" nil (((p w ehn)0))))
(lex.add.entry '("point_nil" nil((( p w ehn)0))))
; TODO à re finir !
(lex.add.entry '("qu_a_nil" nil (((k a)0))))
(lex.add.entry '("qu_afin_nil" nil (((k a)0)((f ehn)0))))
(lex.add.entry '("qu_au_nil" nil (((k o)0))))
(lex.add.entry '("qu_aucune_nil" nil (((k o)0)((k y n)0))))
(lex.add.entry '("qu_aussi_nil" nil (((k o)0)((s i)0))))
(lex.add.entry '("qu_aussitôt_nil" nil (((k o)0)((s i)0)((t o)0))))
(lex.add.entry '("qu_avec_nil" nil (((k a)0)((v eh k)0))))
(lex.add.entry '("qu_elle"  "PRO:per" (((k eh l)0))))
(lex.add.entry '("qu_en"  "PRO:per" (((k ahn)0))))
(lex.add.entry '("qu_une"  "PRO:per" (((k y n)0))))
(lex.add.entry '("qu_il"  "PRO:per" (((k i l)0))))
(lex.add.entry '("qu_ils"  "PRO:per" (((k i l)0))))
(lex.add.entry '("qu_on_PRO:per" "PRO:per"  (((k ohn)0)))); important
(lex.add.entry '("que_nil" nil (((k ae)0))))
(lex.add.entry '("quelque_nil" nil (((k eh l)0)((k ae)0))))
(lex.add.entry '("quelqu_nil" nil ((("k" "eh" "l" "k")0))))
(lex.add.entry '("quoique_nil" nil (((k w a)0)((k ae)0))))
(lex.add.entry '("que_nil" nil (((k ae)0)))); quoi que ce soit
(lex.add.entry '("s_y_nil" nil ((("s" "i")0))))
(lex.add.entry '("sa_nil" nil ((("s" "a")0))))
(lex.add.entry '("se"  "PRO:per" ((("s" ae) 0))))
(lex.add.entry '("se_nil" nil (((s ae)0))))
(lex.add.entry '("ses_nil" nil (((s e)0))))
(lex.add.entry '("son_nil" nil ((("s" "ohn")0))))
(lex.add.entry '("ta_nil" nil ((("t" "a")0))))
(lex.add.entry '("tandis_qu_nil" nil  (((t ahn)0)((d i)0))))
(lex.add.entry '("t_y_nil" nil ((("t" "i")0))))
(lex.add.entry '("te_nil" nil (((t ae)0))))
(lex.add.entry '("tes_ADJ:pos" ADJ:pos ((("t" "e") 0))))
(lex.add.entry '("ses_ADJ:pos" ADJ:pos ((("s" "e") 0))))
(lex.add.entry '("vos_nil" nil ((("v" "o")0))))
(lex.add.entry '("votre_nil" nil (((v oh t rh)0))))
(lex.add.entry '("vous_nil" nil (((v u)0))))
; locution
(lex.add.entry '("en_fait_nil" nil (((ahn)0)((f eh t)0))))
;; signalé dans token_fr PRE versus ADV list_PTE_ADV de pos_fr
(lex.add.entry '("après_nil" nil ((("a")0)((p rh eh)0))))
(lex.add.entry '("au_dedans_nil" nil ((("o")0)(("d" "ae")0)(("d" "ahn")0))))
(lex.add.entry '("hors_nil" nil ((("oh" "rh")0)))) ; toDO
(lex.add.entry '("au_dehors_nil" nil ((("o")0)(("d" "ae")0)(("oh" "rh")0))))
(lex.add.entry '("au_dessous_nil" nil ((("o")0)(("d" "ae")0)(("s" "u")0))))
(lex.add.entry '("au_dessus_nil" nil ((("o")0)(("d" "ae")0)(("s" "y")0))))
(lex.add.entry '("au_devant_nil" nil ((("o")0)(("d" "ae")0)(("v" "ahn")0))))
(lex.add.entry '("au_fur_et_à_mesure_nil" nil ((("o")0)((f y rh)0)((e)0)((a)0)((m ae)0)((z y rh)0))))
(lex.add.entry '("depuis_nil" nil (((d ae)0)((p hw i)0))))
; lez
(lex.add.entry '("nonobstant_nil" nil (((n ohn)0)((n oh b)0)((s t ahn)0))))
(lex.add.entry '("par_dessus_nil" nil (((p a rh)0)(("d" "ae")0)(("s" "y")0))))
; rez
(lex.add.entry '("avec_nil" nil ((("a")0)(("v" "eh" "k")0)))); prends ça avec. ??
(lex.add.entry '("jacque_nil" nil ((("zh" "a" "k")0))))
(lex.add.entry '("myard_nil" nil ((("m" "j" "a" "rh")0))))
(lex.add.entry '("louis_nil" nil (((l w i)0))))
;QT apostrophe
;(lex.add.entry '("quat_NOM" ((("k" "NOM" ((("k" a t)0)))); quat'z
; en cas de mauvaise typo (courant)
(lex.add.entry '("n_o_nil" nil ((("n" "y")0)((m e)0)((rh o)0))))
; QT abbreviations acronyms currency
; homo centimes ?
(lex.add.entry '("cèn_nil" nil (((s eh n t s)0))))
(lex.add.entry '("cèns_nil" nil (((s eh n t s)0))))
; pb du sing/pluriel non résolu ...
(lex.add.entry '("_cent_nil" nil (((s eh n t s)0))))
; yen sen et sens
(lex.add.entry '("yen_nil" nil (((j eh n)0))))
(lex.add.entry '("_yen_nil" nil (((j eh n)0))))
(lex.add.entry '("sèn_nil" nil (((s eh n)0))))
(lex.add.entry '("sèns_nil" nil (((s eh n)0))))
(lex.add.entry '("n°_nil" nil (((n y)0)((m e)0)((rh o)0))))
(lex.add.entry '("C_o_nil" nil (((s eh l)0)((s j y s)0))))
(lex.add.entry '("C°_nil" nil (((s eh l)0)((s j y s)0)))); tempo :)
(lex.add.entry '("Hertz_nil" nil (((eh rh t s)0))))
; acronymes
;(lex.add.entry '("confé_VER" ((("k" ohn)0)(("f" "VER" ((("k" ohn)0)(("f" eh rh)0))))
(lex.add.entry '("adn_nil" nil(((a)0)((d e)0)((eh n)0))))
(lex.add.entry '("NASA_nil" nil (((n a)0)((z a)0)))) 
(lex.add.entry '("CAF_nil" nil (((k a f)0))))
(lex.add.entry '("CGT_nil" nil (((s e)0)((zh e)0)((t e)0))))
(lex.add.entry '("MM_nil" nil (((m e)0)((s j eu)0)))); normaalement suivi d'un point !
(lex.add.entry '("MM_nil" nil (((m e)0)((s j eu)0))));
; abréviations aveec/sans point final
; avec unicode ou non
(lex.add.entry '("tv_nil" nil (((t e)0)((l e)0))))
(lex.add.entry '("dvd_nil" nil (((d e)0)((v e)0)((d e)0))))
(lex.add.entry '("etc_nil" nil (((eh t)0)((s e)0)((t e)0)((rh a)0))))
(lex.add.entry '("ex_nil" nil (((eh k s)0))))
(lex.add.entry '("ok_nil" nil (((o)0)((k eh)0))))
(lex.add.entry '("tva_nil" nil (((t e)0)((v e)0)((a)0))))
(lex.add.entry '("CEDEX_nil" nil ((("s" "e")0)(("d" "eh" "k" "s")0))))
(lex.add.entry '("MBROLA_nil" nil ((("eh" "m")0)(("b" "e")0)(("rh" "oh")0)((l a)0))))
(lex.add.entry '("ANTENJ_nil" nil (((ahn)0)((t eh n)0)((zh i)0))))
(lex.add.entry '("S.T.P_nil" nil ((("s" "i" "l")0)(("t" "ae")0)(("p" "l" "eh")0))))
(lex.add.entry '("r_o" "NOM" ((("rh" "eh")0)(("k" "t_o" "o")0))))
(lex.add.entry '("f_o" "NOM" ((("f" "oh")0)(("l" "j_o" "o")0))))
(lex.add.entry '("ft" "NOM" ((("f_oe" j)0)((j "eh" "oe" j)0)((j "eh")0))))
(lex.add.entry '("POS_nil" nil (((p o s)0))))
; titres
(lex.add.entry '("Mr_nil" nil (((m i s)0)((t oe rh)0))))
(lex.add.entry '("Dr_nil" nil (((d oh k)0)((t oe rh)0))))
;(lex.add.entry '("Me" titre (((m eh t rh)0))))
(lex.add.entry '("mlles_nil" nil ((("m" "e" "d")0)(("m" "w" a)0)(("z" "eh" "l")0))))
(lex.add.entry '("mlle_nil" nil ((("m" a "d")0)(("m" "w" a)0)(("z" "eh" "l")0))))
(lex.add.entry '("S.M_nil" nil ((("s" a)0)(("m" a)0)((zh eh s)0)(("t" "e")0))))
;; mois
(lex.add.entry '("Jan_year" "year" (((zh ahn)0)((v j e)0)))) 
; ....
;QT ncardinal
(lex.add.entry '("trois_nil" nil (((t rh w a)0))))
(lex.add.entry '("cent" nil ((("s" "ahn") 0))))
(lex.add.entry '("trois" nil (((t rh w a)0))))
(lex.add.entry '("trois_ADJ:num" "ADJ:num" ((("t" "rh" "w" "a") 0))))
(lex.add.entry '("vint_nil" nil (((v ehn)0)))) ; INST_LANG_number
; Prononc. et Orth.: vehn à la pause ou devant cons.: vint fois sauf dans les nombres de 22 à 29: vint-deux [vεtdø].
; [vehnt] devant voy.: vint arbres ou h non aspiré: vint hommes (pb de post_lex)
(lex.add.entry '("vint_deux_nil" nil (((v ehn t)0)((d eu)0)))) ; INST_LANG_number
(lex.add.entry '("vint_trois_nil" nil (((v ehn t)0)((t rh w a)0)))) ; INST_LANG_number
(lex.add.entry '("vint_quatre_nil" nil (((v ehn t)0)((k a t rh)0)))) ; INST_LANG_number
(lex.add.entry '("vint_cinq_nil" nil (((v ehn t)0)((s ehn)0)))) ; INST_LANG_number
(lex.add.entry '("vint_six_nil" nil (((v ehn t)0)((s i)0)))) ; INST_LANG_number
(lex.add.entry '("vint_sept_nil" nil (((v ehn t)0)((s eh t)0)))) ; INST_LANG_number
(lex.add.entry '("vint_huit_nil" nil (((v ehn t)0)((h w i)0)))) ; INST_LANG_number
(lex.add.entry '("vint_neuf_nil" "nil" (((v ehn t)0)((n oe)0)))) ; INST_LANG_number
;(lex.add.entry '("dix_neuf_nil" "nil" (((v ehn)0)))) ; INST_LANG_number TODO ?
;(lex.add.entry '("dix_neuf" nil (((v ehn)0)))) ; INST_LANG_number TODO ?
; cinq devant consonnes ou voyelles ou "pause"
;(lex.add.entry '("cinq_nil" nil (((s ehn)0))))
(lex.add.entry '("cinq_ADJ:num" "ADJ:num" (((s ehn k) 0))))
;(lex.add.entry '("cinq_sehn" sehn (((s ehn)0))))
;(lex.add.entry '("cinq_sehnk" sehnk (((s ehn k)0))))
(lex.add.entry '("cinquante_nil" nil (((s ehn)0)((k ahn t)0))))
(lex.add.entry '("deux_nil" nil (((d eu)0))))
(lex.add.entry '("deux_" nil (((d eu)0))))
(lex.add.entry '("douze_nil" nil (((d u z)0))))
(lex.add.entry '("huit_nil" nil ((("hw" i t)0))))
(lex.add.entry '("dix_nil" nil (((d i s)0))))
(lex.add.entry '("sept_nil" nil (((s eh t)0))))
(lex.add.entry '("six_nil" nil (((s i s)0))))
(lex.add.entry '("soixante_nil" nil (((s w a)0)((s ahn t)0)))) ; pour french_number
(lex.add.entry '("soixante-et-onze_nil" nil (((s w a)0)((s ahn t)0)((e)0)((ohn z)0)))) ; pour french_number
(lex.add.entry '("treize_nil" nil (((t rh eh z)0))))
(lex.add.entry '("vint-et-un_nil" nil (((v ehn)0)((t e)0)((ehn)0))))
(lex.add.entry '("vint-et-une_nil" nil (((v ehn)0)((t e)0)((y n)0))))
(lex.add.entry '("mille_nil" nil (((m i l)0))))
;; QT %
(lex.add.entry '("cent_nil" nil (((s ahn)0))))
(lex.add.entry '("pourcent_nil" nil (((p u rh)0)((s ahn)0))))
; pour simplifier lecture des nombres ordinaux
;(lex.add.entry '("premierment_nil" nil (((p rh ae)0)((m j eh rh)0)((m ahn)0))))
; bad hack token_to_words roman ordinals to XXIe
(lex.add.entry '("Ie_nil" nil (((p rh ae)0)((m j e)0))))
(lex.add.entry '("Ier_nil" nil (((p rh ae)0)((m j e)0))))
;; desambiguification 
; TODO à reprendre 
; homo hetero
; hors *tion(s)
; certains inutiles vu traitement des verbes 
(lex.add.entry '("n_est_ce_nil" nil ((("n" "eh" "s")0))))
(lex.add.entry '("est_ce_nil" nil ((("eh")0)(("s" "ae")0))))
; ;(lex.add.entry '("interviewer" "NOM" ((("ehn")0)(("t" eh rh)0)(("v" "j" "u")0)(("v_oe" "oe" rh)0))))
; ;(lex.add.entry '("interviewers" "NOM" ((("ehn")0)(("t" eh rh)0)(("v" "j" "u")0)(("v_oe" "oe" rh)0))))
; ;(lex.add.entry '("lis" "NOM"(("l" "i" "s")0))))
; ;(lex.add.entry '("lis" "VER" ((("l_i" "i")0))))
;(lex.add.entry '("mat_ADJ" ((("m" a "t")0))))
;(lex.add.entry '("mat_NOM" ((("m" "NOM" ((("m" a)0))))
;(lex.add.entry '("parent_nil" nil (((p a)0)((rh ahn)0))))
;(lex.add.entry '("pare_nil" nil (((p a rh)0))))
; ;(lex.add.entry '("plus" "VER" (((p "l_y" "y")0))))
; ;(lex.add.entry '("président" "VER" (((p rh "e")0)(("z" "i_d" "d")0))))
; ;(lex.add.entry '("président" "NOM" (((p rh "e")0)(("z_i")0)(("d" "i")0)(("d" ahn)0))))
; ;(lex.add.entry '("présidents" "NOM" (((p rh "e")0)(("z_i")0)(("d" "i")0)(("d" ahn)0))))
; ;(lex.add.entry '("reporter" "NOM" (((rh ae)0)((p oh rh)0)(("t_eh" "eh" rh)0))))
; ;(lex.add.entry '("reporter" "VER" (((rh ae)0)((p oh rh)0)(("t_e" "e")0))))
; ;(lex.add.entry '("reporters" "NOM" (((rh ae)0)((p oh rh)0)(("t_eh" "eh" rh)0))))
(lex.add.entry '("sens_nil" nil ((("s" "ahn" "s")0))))
(lex.add.entry '("somnole_nil" nil ((("s" oh "m")0)((n oh l)0))))
(lex.add.entry '("somnolent_nil" nil ((("s" oh "m")0)((n oh l)0))))
(lex.add.entry '("vis_nil" nil ((("v" "i" "s")0))))
; ; *tion(s)
; ;/!\ commentez le *s" "NOM" que si "VER" est commentés cause QT ..
; ;(lex.add.entry '("attention_NOM" (((a)0)(("t" "NOM" (((a)0)(("t" ahn)0)((s j ohn)0))))
; ;(lex.add.entry '("attentions_NOM" (((a)0)(("t" "NOM" (((a)0)(("t" ahn)0)((s j ohn)0))))
; ;(lex.add.entry '("attentions_VER" (((a)0)(("t" "VER" (((a)0)(("t" ahn)0)((t j ohn)0))))
; ;
; verbes trop courts ou dont le radical pose problème ex prenait
; certains sont déjà dans le dictionaire *tient, *vient
; wordoot étoffé
;(lex.add.entry '("a_nil" nil (((a)0))))
;(lex.add.entry '("agit_nil" nil ( ((a)0)((zh i)0)))) ; pas t
;(lex.add.entry '("dis_nil" nil (((d i)0))))
;(lex.add.entry '("dis_je_nil" nil (((d i)0)((zh e)))))
;(lex.add.entry '("dirai_nil" nil (((d i)0)((rh e)0))))
;(lex.add.entry '("disai_nil" nil (((d i)0)((z e)0))))
;(lex.add.entry '("disais_nil" nil (((d i)0)((z eh)0))))
;(lex.add.entry '("dirais_nil" nil (((d i)0)((rh eh)0))))
;(lex.add.entry '("diraient_nil" nil (((d i)0)((rh eh)0))))
;(lex.add.entry '("dirait_nil" nil (((d i)0)((rh eh)0))))
;(lex.add.entry '("dit_nil" nil (((d i)0))))
;(lex.add.entry '("dût_nil" nil (((d y)0))))
;(lex.add.entry '("fit_nil" nil (((f i)0))))
;(lex.add.entry '("lit_nil" nil (((l i)0))))
;(lex.add.entry '("mis_nil" nil (((m i)0))))
;(lex.add.entry '("mit_nil" nil (((m i)0))))
(lex.add.entry '("es_nil" nil (((eh)0))))
(lex.add.entry '("eu_nil" nil (((y)0))))
(lex.add.entry '("eux"  "PRO:per" (((eu)0))))
(lex.add.entry '("fis_nil" nil (((f i)0))))
(lex.add.entry '("met_nil" nil (((m eh)0))))
(lex.add.entry '("mets_nil" nil (((m eh)0))))
(lex.add.entry '("mené_nil" nil ((("m" "ae")0)(("n" "e")0))))
(lex.add.entry '("menè_nil" nil ((("m" "ae")0)(("n" "eh")0))))
(lex.add.entry '("apprenè_nil" nil (((a)0)((p rh ae)0)((n eh)0))))
(lex.add.entry '("comprenè_nil" nil (((k ohn)0)((p rh ae)0)((n eh)0))))
(lex.add.entry '("entreprenè_nil" nil (((ahn t rh ae)0)((p rh ae)0)((n eh)0))))
(lex.add.entry '("méprenè_nil" nil (((m e)0)((p rh ae)0)((n eh)0))))
(lex.add.entry '("prenè_nil" nil (((p rh ae)0)((n eh)0))))
(lex.add.entry '("reprenè_nil" nil (((rh ae)0)((p rh ae)0)((n eh)0))))
(lex.add.entry '("surprenè_nil" nil (((s y rh)0)((p rh ae)0)((n eh)0))))
(lex.add.entry '("pût_nil" nil (((p y)0))))
(lex.add.entry '("sers_nil" nil (((s eh rh)0))))
(lex.add.entry '("sût_nil" nil (((s y)0))))
(lex.add.entry '("tût_nil" nil (((t y)0))))
(lex.add.entry '("abstenè_nil" nil (((a p s)0)((t ae)0)((n eh)0))))
(lex.add.entry '("appartenè_nil" nil (((a)0)((p a rh)0)((t ae)0)((n eh)0))))
(lex.add.entry '("contenè_nil" nil (((k ohn)0)((t ae)0)((n eh)0))))
(lex.add.entry '("détenè_nil" nil (((d e)0)((t ae)0)((n eh)0))))
(lex.add.entry '("entretenè_nil" nil (((ahn)0)((t rh ae)0)((t ae)0)((n eh)0))))
(lex.add.entry '("maintenè_nil" nil (((m ehn)0)((t ae)0)((n eh)0))))
(lex.add.entry '("obtenè_nil" nil (((oh b)0)((t ae)0)((n eh)0))))
(lex.add.entry '("retenè_nil" nil (((rh ae)0)((t ae)0)((n eh)0))))
(lex.add.entry '("soutenè_nil" nil (((s u)0)((t ae)0)((n eh)0))))
(lex.add.entry '("tenè_nil" nil (((t ae)0)((n eh)0))))
(lex.add.entry '("abstenu_nil" nil (((a p s)0)((t ae)0)((n y)0))))
(lex.add.entry '("appartenu_nil" nil (((a)0)((p a rh)0)((t ae)0)((n y)0))))
(lex.add.entry '("contenu_nil" nil (((k ohn)0)((t ae)0)((n y)0))))
(lex.add.entry '("détenu_nil" nil (((d e)0)((t ae)0)((n y)0))))
(lex.add.entry '("détenue_nil" nil (((d e)0)((t ae)0)((n y)0))))
(lex.add.entry '("entretenu_nil" nil (((ahn)0)((t rh ae)0)((t ae)0)((n y)0))))
(lex.add.entry '("maintenu_nil" nil (((m ehn)0)((t ae)0)((n y)0))))
(lex.add.entry '("obtenu_nil" nil (((oh b)0)((t ae)0)((n y)0)))); ACF b p
(lex.add.entry '("retenu_nil" nil (((rh ae)0)((t ae)0)((n y)0))))
(lex.add.entry '("retenue_nil" nil (((rh ae)0)((t ae)0)((n y)0))))
(lex.add.entry '("soutenu_nil" nil (((s u)0)((t ae)0)((n y)0))))
(lex.add.entry '("soutenue_nil" nil (((s u)0)((t ae)0)((n y)0))))
(lex.add.entry '("tenu_nil" nil (((t ae)0)((n y)0))))
(lex.add.entry '("tenus_nil" nil ((("t" "ae")0) (("n" "y")0))))
(lex.add.entry '("tenue_nil" nil ((("t" "ae")0) (("n" "y")0))))
(lex.add.entry '("abstenue_nil" nil (((a p s)0)((t ae)0)((n y)0))))
(lex.add.entry '("appartenue_nil" nil (((a)0)((p a rh)0)((t ae)0)((n y)0))))
(lex.add.entry '("contenue_nil" nil (((k ohn)0)((t ae)0)((n y)0))))
(lex.add.entry '("entretenue_nil" nil (((ahn)0)((t rh ae)0)((t ae)0)((n y)0))))
(lex.add.entry '("maintenue_nil" nil (((m ehn)0)((t ae)0)((n y)0))))
(lex.add.entry '("obtenue_nil" nil (((oh b)0)((t ae)0)((n y)0))))
(lex.add.entry '("tenue_nil" nil (((t ae)0)((n y)0))))
;(lex.add.entry '("vient_nil" nil (((v j ehn)0))))
(lex.add.entry '("advenir_nil" nil (((a d)0)((v ae)0)((n i rh)0))))
(lex.add.entry '("advenu_nil" nil (((a d)0)((v ae)0)((n y)0))))
(lex.add.entry '("circonvenu_nil" nil (((s i rh)0)((k ohn)0)((v ae)0)((n y)0))))
(lex.add.entry '("contrevenu_nil" nil (((k ohn)0)((t rh ae)0)((v ae)0)((n y)0))))
(lex.add.entry '("convenu_nil" nil (((k ohn)0)((v ae)0)((n y)0))))
(lex.add.entry '("devenu_nil" nil (((d ae)0)((v ae)0)((n y)0))))
(lex.add.entry '("disconvenu_nil" nil (((d i s)0)((k ohn)0)((v ae)0)((n y)0))))
(lex.add.entry '("intervenu_nil" nil (((ehn)0)((t eh rh)0)((v ae)0)((n y)0))))
(lex.add.entry '("mésadvenu_nil" nil (((m e)0)((z a d)0)((v ae)0)((n y)0))))
(lex.add.entry '("parvenu_nil" nil (((p a rh)0)((v ae)0)((n y)0))))
(lex.add.entry '("prévenu_nil" nil (((p rh e)0)((v ae)0)((n y)0))))
(lex.add.entry '("revenu_nil" nil (((rh ae)0)((v ae)0)((n y)0))))
(lex.add.entry '("venu_nil" nil (((v ae)0)((n y)0))))
(lex.add.entry '("advenue_nil" nil (((a d)0)((v ae)0)((n y)0))))
(lex.add.entry '("circonvenue_nil" nil (((s i rh)0)((k ohn)0)((v ae)0)((n y)0))))
(lex.add.entry '("contrevenue_nil" nil (((k ohn)0)((t rh ae)0)((v ae)0)((n y)0))))
(lex.add.entry '("convenue_nil" nil (((k ohn)0)((v ae)0)((n y)0))))
(lex.add.entry '("devenue_nil" nil (((d ae)0)((v ae)0)((n y)0))))
(lex.add.entry '("disconvenue_nil" nil (((d i s)0)((k ohn)0)((v ae)0)((n y)0))))
(lex.add.entry '("intervenue_nil" nil (((ehn)0)((t eh rh)0)((v ae)0)((n y)0))))
(lex.add.entry '("mésadvenue_nil" nil (((m e)0)((z a d)0)((v ae)0)((n y)0))))
(lex.add.entry '("parvenue_nil" nil (((p a rh)0)((v ae)0)((n y)0))))
(lex.add.entry '("prévenue_nil" nil (((p rh e)0)((v ae)0)((n y)0))))
(lex.add.entry '("revenue_nil" nil (((rh ae)0)((v ae)0)((n y)0))))
(lex.add.entry '("venue_nil" nil (((v ae)0)((n y)0))))
(lex.add.entry '("advenè_nil" nil (((a d)0)((v ae)0)((n eh)0))))
(lex.add.entry '("circonvenè_nil" nil (((s i rh)0)((k ohn)0)((v ae)0)((n eh)0))))
(lex.add.entry '("contrevenè_nil" nil (((k ohn)0)((t rh ae)0)((v ae)0)((n eh)0))))
(lex.add.entry '("convenè_nil" nil (((k ohn)0)((v ae)0)((n eh)0))))
(lex.add.entry '("devenè_nil" nil (((d ae)0)((v ae)0)((n eh)0))))
(lex.add.entry '("disconvenè_nil" nil (((d i s)0)((k ohn)0)((v ae)0)((n eh)0))))
(lex.add.entry '("intervenè_nil" nil (((ehn)0)((t eh rh)0)((v ae)0)((n eh)0))))
(lex.add.entry '("mésadvenè_nil" nil (((m e)0)((z a d)0)((v ae)0)((n eh)0))))
(lex.add.entry '("parvenè_nil" nil (((p a rh)0)((v ae)0)((n eh)0))))
(lex.add.entry '("prévenè_nil" nil (((p rh e)0)((v ae)0)((n eh)0))))
(lex.add.entry '("revenè_nil" nil (((rh ae)0)((v ae)0)((n eh)0))))
(lex.add.entry '("venè_nil" nil (((v ae)0)((n eh)0))))
(lex.add.entry '("vit_nil" nil (((v i t)0))))
; ; NON(lex.add.entry '("chef-d" "ADJ" ((("sh" "e_d" "d")0)))); seul chef d'oeuvre
; s non muet et assimilé
; cactus
(lex.add.entry '("jadis_nil" nil (((zh a)0)((d i s)0))))
;(lex.add.entry '("l_atlas" nil (((l a t)0)((l a s)0))))
(lex.add.entry '("atlas" nil (((a t)0)((l a s)0))))
; ICI
(lex.add.entry '("ours_" nil((("u" "rh" "s")0)))) 
(lex.add.entry '("max_" nil(((m a k s)0))))
(lex.add.entry '("ex_" nil(((eh k s)0))))
(lex.add.entry '("biceps_" nil(((b i)0)((s eh p s)0))))
(lex.add.entry '("mars_" nil(((m a rh s)0))))
(lex.add.entry '("mars_NAM" NOM(((m a rh s)0))))
(lex.add.entry '("bis_" nil(((b i s)0))))
(lex.add.entry '("albatros_" nil((("a" "l")0)(("b" "a")0)(("t" "rh" "o" "s")0))))
(lex.add.entry '("sphinx_" nil(((s f ehn k s)0))))
(lex.add.entry '("bombyx_" nil (((b ohn)0) ((b i k s)0))))
; oeuf oeufs
; ; non respect de ü
(lex.add.entry '("gageure_" nil(((g a)0)((zh y rh)0))))
;;; exceptions sans espoir de lts simple: certains discutables
; typo classique
(lex.add.entry '("ultrason_" nil(((y l)0)((t rh a)0)((s ohn)0))))
; exception règle *tion
(lex.add.entry '("admixtion_" nil(((a d)0)((m i k s)0)((t j ohn)0))))
; terminaison pas si courante
(lex.add.entry '("apens_" nil(((a)0)((p ahn)0))))
(lex.add.entry '("gens_" nil(((zh ahn)0))))
(lex.add.entry '("suspens_" nil(((s y s)0)((p ahn)0))))
(lex.add.entry '("suspens_" nil(((s y s)0)((p ahn)0)))); ((p ehn s)0))))
(lex.add.entry '("guet-apens_" nil(((g eh)0)((t a)0)((p ahn)0))))
(lex.add.entry '("longtemp" nil(((l ohn)0)((t ahn)0))))
(lex.add.entry '("printemp" NOM (((p rh ehn)0)((t ahn)0))))
(lex.add.entry '("temp" nil (((t ahn)0))))
;(lex.add.entry '("longtemps_" nil(((l ohn)0)((t ahn)0))))
;(lex.add.entry '("printemps_" nil(((p rh ehn)0)((t ahn)0))))
;(lex.add.entry '("temps_" nil(((t ahn)0))))
(lex.add.entry '("faon_" nil(((f ahn)0))))
(lex.add.entry '("paon_" nil(((p ahn)0))))
(lex.add.entry '("parents_NOM" "NOM"(((p a)0)((rh ahn)0)))) ; à cause homo sing VER
(lex.add.entry '("parents_" nil(((p a)0)((rh ahn)0)))) ; à cause homo sing VER
(lex.add.entry '("ail_" nil(((a j)0))))
; consonne interne muette
(lex.add.entry '("abrupti_" nil (((a)0)((b rh y)0)((t i)0))))
(lex.add.entry '("abruptis_nil" nil (((a)0)((b rh y)0)((t i)0))))
(lex.add.entry '("abruptie_nil" nil (((a)0)((b rh y)0)((t i)0))))
(lex.add.entry '("monsieur_nil" nil (((m ae)0)((s j eu)0))))
(lex.add.entry '("messieurs_nil" nil (((m e)0)((s j eu)0))))
(lex.add.entry '("toutlemonde_nil" nil (((t u)0)((l ae)0)((m ohn d)0))))
(lex.add.entry '("abc_nil" nil (((a)0)((b e)0)((s e)0))))
(lex.add.entry '("agenda_nil" nil (((a)0)((zh ehn)0)((d a)0))))
; ave 
; ail*$
; chandail?
; ch initiaux versus sh versus k ?dépendance lts forte
; ch -> sh
(lex.add.entry '("chiotte_nil" nil (((s h j oh t)0))))
(lex.add.entry '("chiot_nil" nil (((s h j o)0))))
(lex.add.entry '("chat_nil" nil (((sh a)0))))
(lex.add.entry '("choeur_nil" nil (((k oe rh)0))))
(lex.add.entry '("chose_nil" nil (((sh o z)0))))
(lex.add.entry '("chère_nil" nil (((sh eh rh)0))))
(lex.add.entry '("chéri_nil" nil (((sh e)0)((rh i)0))))
(lex.add.entry '("chérie_nil" nil (((sh e)0)((rh i)0))))
(lex.add.entry '("kitsh_nil" nil (((k  i t sh)0))))
; hiatus interne à dégager suivant qualité voix
(lex.add.entry '("pays_nil" nil (((p e)0)(( i)0)))) 
; on table sur des h muets TODO verifier     hs comme simple ?
;(lex.add.entry '("hamac_nil" nil ((( a)0)((m a k)0))))
;(lex.add.entry '("ululement_nil" nil ((( y)0)((l y)0)((l e)0)((m ahn)0))))
;(lex.add.entry '("haut_nil" nil (((o)0)))) ;var
; héros
(lex.add.entry '("marshmallow" nil (((m a rh)0) ((sh m a)0) ((l o)0))))
; terminaisons
; on table sur des terminaisons muettes  avec s 
(lex.add.entry '("lis_nil" nil (((l i s)0))))
(lex.add.entry '("tennis_nil" nil (((t e n i s)0))))
(lex.add.entry '("pénis_nil" nil (((p e n i s)0))))
; on table sur des terminaisons muettes  avec x  
(lex.add.entry '("index_nil" nil (((ehn)0)((d eh k s)0))))
; on table sur des terminaisons muettes  avec t  
(lex.add.entry '("transit_nil" nil (((t rh ahn)0)((z i t)0))))
(lex.add.entry '("obit_nil" nil (((oh)0)((b i t)0))))
(lex.add.entry '("pitpit_nil" nil (((p i t)0)((p i t)0))))
(lex.add.entry '("transat_nil" nil (((t rh ahn)0)((z a t)0))))
(lex.add.entry '("dictat_nil" nil (((d i k)0)((t a t)0))))
(lex.add.entry '("exeat_nil" nil (((eh g)0)((z e)0)((a t)0))))
(lex.add.entry '("sprat_nil" nil (((s p rh a t)0))))
(lex.add.entry '("audimat_nil" nil (((oh)0)((d i)0)((m a t)0))))
(lex.add.entry '("copycat_nil" nil (((k oh )0)((p i)0)((k a t)0))))
(lex.add.entry '("magnificat_nil" nil (((m a)0)((n i)0)((f i)0)((k a t)0))))
(lex.add.entry '("bat" ADJ (((b a t)0))))
(lex.add.entry '("mat" ADJ (((m a t)0))))
(lex.add.entry '("pat_nil" nil (((p a t)0))))
(lex.add.entry '("vat" NOM (((v a t)0))))
(lex.add.entry '("squat_nil" nil (((s k w a t)0))))
(lex.add.entry '("watt_nil" nil (((w a t)0))))
(lex.add.entry '("occiput_" nil (((oh k)0)((s i)0)((p y t)0))))
(lex.add.entry '("court_" nil (((k u rh t)0))))
; mais
(lex.add.entry '("court" nil (((k u rh)0))))
; on table sur des terminaisons muettes  avec k  
; comme(lex.add.entry '("arc_nil" nil (((a rh k)0))))
(lex.add.entry '("tabac_nil" nil (((t a)0) ((b a)0))))
; on table sur des terminaisons muettes  avec g 
(lex.add.entry '("bang" nil (((b ahn g)0))))
(lex.add.entry '("bang_ONO" "ONO" (((b ahn g)0))))
; terminaison peu courante
; erf$
(lex.add.entry '("parfum_nil" nil (((p a rh)0)((f oen)0)((n j e)0))))
(lex.add.entry '("almanach_nil" nil (((a l)0)((m a)0)((n a k)0))))
; correction provisoire ? de répétition phonèmes et hiatus interne
; niveau de langue
(lex.add.entry '("celle_là_PRO:ind" "PRO:ind" (((s eh)0)((l ae)0)((l a)0))))
(lex.add.entry '("en_plus_nil" nil (((ahn)0)(("p" "l" "y")0))))
(lex.add.entry '("de_plus_nil" nil (((d ae)0)(("p" "l" "y" s)0))))
(lex.add.entry '("plus_ou_moins_nil" nil ((("p" "l" "y")0)((z u)0)((m w ehn)0))))
(lex.add.entry '("palefrenier_nil" nil ((( p a l)0)((f rh ae)0)((n j e)0))))
(lex.add.entry '("impôt_nil" nil (((ehn)0)((p o)0))))
(lex.add.entry '("barmaid_nil" nil (((b a rh)0)((m eh d)0))))
(lex.add.entry '("raid_nil" nil (((rh eh d)0))))
(lex.add.entry '("plaid_nil" nil (((p l eh d)0))))
(lex.add.entry '("poing_nil" nil (((p w ehn)0))))
(lex.add.entry '("coing_nil" nil (((k w ehn)0))))
(lex.add.entry '("loing_nil" nil (((l w ehn)0))))
(lex.add.entry '("shampoing_" nil (((s h ahn)0) ((p w ehn)0))))
(lex.add.entry '("après-shampoing_" nil (((a)0) ((p rh eh)0) ((s h ahn)0) ((p w ehn)0))))
; après-shampoing
(lex.add.entry '("tourcoing_nil" nil (((t u rh)0) ((k w ehn)0))))
; *igt*
; * [[croque-en-doigts]]
; * [[doigt]] {{pron|dwa|fr}}
; * [[doigt-de-gant]] {{pron|dwa.də.ɡɑ̃|fr}}
; * [[doigté]] {{pron|dwa.te|fr}}
; * [[doigter]] {{pron|dwa.te|fr}}
; * [[doigtier]] {{pron|dwa.tje|fr}}
; * [[lèche-doigts]] {{pron|lɛʃ.dwa|fr}}
; * [[redoigter]] {{pron|ʁə.dwa.te|fr}}
; * [[rince-doigt]] {{pron|ʁɛ̃s.dwa|fr}}
; * [[rince-doigts]] {{pron|ʁɛ̃s.dwa|fr}}
; * [[six-doigts]] {{pron|si.dwa|fr}}
(lex.add.entry '("doigt_nil" nil (((d w a)0))))
(lex.add.entry '("doigt_" nil (((d w a)0)))); strict pour rince_doigt
(lex.add.entry '("doigté_nil" nil (((d w a)0)((t e)0))))
; et leur pluriel strict pour les mots composés
(lex.add.entry '("doigts_" nil (((d w a)0))))
(lex.add.entry '("doigtés_nil" nil (((d w a)0) ((t e)0))))
; reforme 20211018 
(lex.add.entry '("vintage_nil" nil (((v i n)0)((t eh d zh) 0))))
; atie si\ versus ti\
(lex.add.entry '("tatie_nil" nil (((t a)0) ((t i)0))))
(lex.add.entry '("cacocratie_nil" nil (((k a)0)((k o)0)((k rh a)0)((t i)0))))
(lex.add.entry '("chrestomatie_nil" nil (((k rh eh s)0)((t oh)0)((m a)0)((t i)0))))
(lex.add.entry '("monochromatie_nil" nil (((m oh)0)((n oh)0)((k rh oh)0)((m a)0)((t i)0))))
(lex.add.entry '("diastématie_nil" nil (((d j a s)0)((t e)0)((m a)0)((t i)0))))
; reste en VER ADJ en ti\ sans exception 
; onc* 
(lex.add.entry '("Donc" nil ((("d" "ohn" "k") 0))))
(lex.add.entry '("donc" nil ((("d" "ohn" "k") 0))))
(lex.add.entry '("tronc_nil" nil ((("t" "rh" "ohn")0))))
(lex.add.entry '("alitronc_nil" nil (((a)0)(("t" "rh" "ohn")0))))
(lex.add.entry '("caf'_conc_nil" nil (((k a f)0)(("k" "ohn" "s")0))))
(lex.add.entry '("ajonc_nil" nil (((a)0)(("zh" "ohn")0))))
(lex.add.entry '("coudonc_nil" nil (((k u)0)(("d" "ohn")0))))
(lex.add.entry '("cout'onc_nil" nil (((k u t)0)(("d" "ohn" "k")0))))
(lex.add.entry '("jonc_nil" nil ((("zh" "ohn")0))))
; ?(lex.add.entry '("macjonc_nil" nil (((m a)0)(("zh" "ohn")0))))
; tian
(lex.add.entry '("balbutiant" nil (((b a l)0)((b y)0)((s j ahn)0))))
(lex.add.entry '("balbutiante_nil" nil (((b a l)0)((b y)0)((s j ahn t)0))))
(lex.add.entry '("initiant" nil (((i)0)((n i)0)((s j ahn)0))))
               
; alli* et .alli*
; si n -> l ehn. ou i.ni callinique
; si C -> li.C pour t, v, c/s, c/k, g, p
; si V -> l j 
(lex.add.entry '("pool_nil" nil (((p u l)0))))
(lex.add.entry '("mille_nil" nil (((m i l )0))))
(lex.add.entry '("cyan_nil" nil (((s j ahn )0))))
(lex.add.entry '("géopoplitique_nil" nil (((zh e)0)((o)0)((p oh)0)((l i)0)((t i k)0))))
; *gée
(lex.add.entry '("pingé_nil" nil (((p i n)0)((g e)0))))
(lex.add.entry '("pingée_nil" nil (((p i n)0)((g e)0))))
(lex.add.entry '("loggé_nil" nil (((l oh)0)((g e)0))))
(lex.add.entry '("loggée_nil" nil (((l oh)0)((g e)0))))
; 
(lex.add.entry '("haschich_" nil ((("a") 0) (("sh" "i" "sh") 0))))
(lex.add.entry '("haschisch" nil ((("a") 0) (("sh" "i" "sh") 0))))
(lex.add.entry '("backchich_" nil ((("b" "a") 0) (("sh" "i" "sh") 0))))
; cho*
(lex.add.entry '("chow_nil" nil ((( sh o)0))))
; xéro* k-s-e  versus g z e
; grep -E "^xéro" psychoGLAFF-1.0.csv  | grep -v "kse"
; une dizaine d'exceptions
; xérographie
; xérographique
; xérophtalmie
(lex.add.entry '("circonspect_nil" nil ((( s i rh)0)((k ohn)0) ((s p eh) 0))))
; envisager bonh* -> bon_* dans norm ?
(lex.add.entry '("bonhomme" nil (((b oh)0)((n oh m)0))))
(lex.add.entry '("bonheur_nil" nil (((b oh)0)((n eu rh)0))))
(lex.add.entry '("bonhomie_nil" nil (((b oh)0)((n oh)0) ((m i)0)))); ortho traditionnelle
(lex.add.entry '("bonhommie_nil" nil (((b oh)0)((n oh)0) ((m i)0))))
; *ouc
(lex.add.entry '("bouc_nil" nil ((( b u k)0))))
(lex.add.entry '("plouc_nil" nil ((( p l  u k)0))))
(lex.add.entry '("caoutchouc_nil" nil (((k a)0)((u t)0)((sh u)0))))
(lex.add.entry '("faisceau" nil ((("f" "eh") 0) ((s "o") 0))))
(lex.add.entry '("sceau" nil (((s "o") 0))))
(lex.add.entry '("caviar" nil (((k a) 0) ((v j a rh) 0))))
(lex.add.entry '("antiar" nil (((ahn) 0) ((t j a rh) 0))))
(lex.add.entry '("antiarine" nil (((ahn) 0) ((t j a)0) ((rh i n)))))
(lex.add.entry '("siar" nil (((s j a rh) 0))))
; oe versus eu
(lex.add.entry '("seul_nil" nil (((s oe l) 0))))
;(lex.add.entry '("veule_nil" nil (((v eu l) 0)))); par exemple
;(lex.add.entry '("veule" nil (((v oe l) 0)))); par exemple
; oh versus o
(lex.add.entry '("oh_nil" nil (((o) 0))))
; gérondif t j ahn versus s j ahn
(lex.add.entry '("chatiant" nil ((("sh" "a") 0) (("t" "j" "ahn") 0))))
; ï
; oïde -> oh i d sf petits diff syllabes 
; adénoïdectomie  \a.de.nɔ.i.dɛk.tɔ.mi\   féminin
; cricoïdectomie  \kʁi.kɔ.i.dɛk.tɔ.mi\    féminin
; thyroïdectomie  \ti.ʁɔ.i.dɛk.tɔ.mi\ féminin
; typhoïdeux  \ti.fɔ.i.dø\    masculin
; grep "oï" 1141_itrema | grep  "\\\\" | grep -v -c "ɔ.i"; 136 contre 487 "o.i"
; lts ï -> i sauf ...
; voir liste_exception .. +140 trema_exception
(lex.add.entry '("amuïssement" nil ((("a") 0) (("m" "hw" "i") 0) ((s "m" "ahn") 0))))
(lex.add.entry '("aï_aï" nil ((("a" j) 0) ((a j) 0))))
(lex.add.entry '("anchoïade" nil ((("ahn") 0) ((sh oh) 0) ((j a d)0))))
(lex.add.entry '("aïkido" nil ((("a" j) 0) ((k i ) 0) ((d o)0))))
(lex.add.entry '("pudding" nil (((p u) 0) ((d i n g)0))))
(lex.add.entry '("western" nil (((w eh) 0) ((s t eh rh n)0))))
(lex.add.entry '("walkman" nil (((w o k) 0) ((m a n)0))))
(lex.add.entry '("walkie-talkie" nil (((w o k) 0) ((m a n)0))))
(lex.add.entry '("caveat_nil" nil (((k a )0)((v e)0)((a t)0))))
(lex.add.entry '("meridiem_nil" nil (((m e )0)((rh i)0)((d j eh m)0))))
(lex.add.entry '("duffle-coat_nil" nil (((d oe)0)((f ae l)0)((k o t)0))))
(lex.add.entry '("geyser_" nil ((("zh" "eh") 0) (("z" "eh" "rh") 0))))
(lex.add.entry '("pound_nil" nil (((p a)0)((ohn d)0))))
; six
(lex.add.entry '("sixième" nil ((("s" "i") 0) (("z" "j" "eh" "m") 0))))
(lex.add.entry '("alezan" nil ((("a" l) 0) (("z" "ahn") 0))))
(lex.add.entry '("ayé" "VER" ((("eh") 0) ((j e) 0))))
(lex.add.entry '("benjamin" nil (((b ehn) 0) ((zh a)0) (( m ehn) 0))))
(lex.add.entry '("saint_benjamin" nil (((s ehn)0) ((b ehn) 0) ((zh a)0) (( m ehn) 0))))
(lex.add.entry '("benjamine" nil (((b ehn) 0) ((zh a)0) (( m i) 0) ((n e)0))))
(lex.add.entry '("benji" nil (((b ehn) 0) ((zh i) 0))))
(lex.add.entry '("benju" nil (((b ehn) 0) ((zh u) 0))))
(lex.add.entry '("benjoin" nil (((b ehn) 0) ((zh w ehn) 0))))
(lex.add.entry '("aquisextain" nil ((("a") 0) (("k" "i") 0) (("s" "eh" "k" "s") 0) (("t" "ehn") 0))))
(lex.add.entry '("aquisextaine" nil ((("a") 0) (("k" "i") 0) (("s" "eh" "k" "s") 0) (("t" i "n") 0))))
(lex.add.entry '("aquae-sextien" nil ((("a") 0) (("k" "e") 0) (("s" "eh" "k" "s") 0) (("t" j "ehn") 0))))
(lex.add.entry '("aquae-sextienne" nil ((("a") 0) (("k" "e") 0) (("s" "eh" "k" "s") 0) (("t" j eh "n") 0))))
(lex.add.entry '("tranquille" nil (((t rh ahn) 0) (("k" "i" l) 0))))
(lex.add.entry '("intranquille" nil (((ehn) 0)((t rh ahn) 0) (("k" "i" l) 0))))
(lex.add.entry '("tranquille_ADV" "ADV" (((t rh ahn) 0) (("k" "i" l) 0))))
(lex.add.entry '("intranquille_ADV" "ADV" (((ehn) 0)((t rh ahn) 0) (("k" "i" l) 0))))
; les ï; à voir et à décliner
;  (SayText "hébraïque, héroïque, inouï, laïque, naïf, naïve, païen, phalloïde, stoïque, thaïlandaise, héroïquement, naïvement, astéroïde, baïonnette, caïman, cocaïne, coïncidence, égoïne, glaïeul, haïkaï, héroïne, laïc, maïzena , mosaïque, naïveté, ovoïde, rhodoïd, sphéroïde, typhoïde, coïncide")
(lex.add.entry '("archaïque" nil ((("a" "rh") 0) (("k" "a") 0) (("i" "k") 0))))
;(lex.add.entry '("inouï" nil ((("i") 0) (("n" "u") 0) (("i") 0)))); ?
(lex.add.entry '("inouï" nil ((("i") 0) (("n" w "i") 0))))
(lex.add.entry '("païen" nil ((("p" "a") 0) (("j" "ehn") 0))))
(lex.add.entry '("thaïlandaise" nil ((("t" "a" "j") 0) (("l" "ahn") 0) (("d" "eh" "z") 0))))
(lex.add.entry '("héroïquement" nil ((("e") 0) (("rh" "oh") 0) (("i") 0) (("k" "m" "ahn") 0))))
(lex.add.entry '("baïonnette_" nil ((("b" "a") 0) (("j" "oh") 0) (("n" "eh" "t") 0))))
(lex.add.entry '("coïncidence_" nil ((("k" "oh") 0) (("ehn") 0) (("s" "i") 0) (("d" "ahn" "s") 0))))
(lex.add.entry '("égoïne_" nil ((("e") 0) (("g" "o") 0) (("i" "n") 0))))
(lex.add.entry '("glaïeul_" nil ((("g" "l" "a") 0) (("j" "oe" "l") 0))))
(lex.add.entry '("haïkaï_" nil ((("a") 0) (("i") 0) (("k" "a") 0) (("i") 0))))
(lex.add.entry '("maïzena_" nil ((("m" "a") 0) (("i") 0) (("z" "e") 0) (("n" "a") 0))))
; ajout à poslex !
(lex.add.entry '("sphéroïde_" nil (((s "f" "e") 0) (("rh" "oh") 0) (("i" "d") 0))))
(lex.add.entry '("thorax_" nil ((("t" "oh") 0) (("rh" "a" k s ) 0))))
(lex.add.entry '("double" nil  ((("d" "u" "b" "l") 0))))
(lex.add.entry '("essentiellement" nil ((("eh") 0) (("s" "ahn") 0) (("s" "j" "eh" "l") 0) (("m" "ahn") 0))))
; nouvelles erreurs !
(lex.add.entry '("balançoire_" nil ((("b" "a") 0) (("l" "ahn") 0) (("s" "w" "a" "rh") 0))))
(lex.add.entry '("caisson_" nil ((("k" "eh") 0) (("s" "ohn") 0))))
(lex.add.entry '("poisson_" nil ((("p" "w" "a") 0) (("s" "ohn") 0))))
(lex.add.entry '("repassè" nil ((("rh" "ae") 0) (("p" "a") 0) (("s" "eh") 0))))
(lex.add.entry '("repasson" nil ((("rh" "ae") 0) (("p" "a") 0) (("s" "ohn") 0))))
(lex.add.entry '("repassant" nil ((("rh" "ae") 0) (("p" "a") 0) (("s" "ahn") 0))))
(lex.add.entry '("peut_être_ADV" ADV ((("p" "oe") 0) (("t" "eh" "t" "rh") 0))))
(lex.add.entry '("n_es" nil ((("n" eh) 0))))
(lex.add.entry '("deuxième" nil ((("d" "eu") 0) (("z" "j" "eh" "m") 0))))
;; var ou rajouté des w eh
(lex.add.entry '("souhaité" nil ((("s" "w" "eh") 0) (("t" "e") 0))))
(lex.add.entry '("sérieusement" nil ((("s" "eh") 0) (("rh" "j" "eu" "z") 0) (("m" "ahn") 0))))
(lex.add.entry '("à" nil ((("a") 0))))
(lex.add.entry '("pour" nil ((("p" "u" "rh") 0))))
(lex.add.entry '("après" nil ((("a") 0) (("p" "rh" "eh") 0))))
(lex.add.entry '("ceci" nil ((("s" "ae") 0) (("s" "i") 0))))
(lex.add.entry '("umbo" nil ((("ohn") 0) (("b" "o") 0))))
(lex.add.entry '("cette" nil (((s eh t)0))))
;;
(lex.add.entry '("abaisse_langue" "NOM" (((a) 0) ((b eh s) 0) ((l ahn g) 0))))

(lex.add.entry '("UMR" nil ((("y")0) ((eh "m")0) ((eh "rh") 0))))
(lex.add.entry '("action" nil ((("a" "k") 0) (("s" "j" "ohn") 0))))

